import { FocusMonitor } from '@angular/cdk/a11y';
import { AfterViewInit, ChangeDetectorRef, ElementRef, OnDestroy } from '@angular/core';
import * as i0 from "@angular/core";
export declare class NxPasswordToggleComponent implements AfterViewInit, OnDestroy {
    private _cdr;
    private _elementRef;
    private _focusMonitor;
    /** Input element using the toggle functionality. */
    control: HTMLInputElement;
    /** @docs-private */
    _currentIcon: string;
    /** @docs-private */
    _pressed: boolean;
    private _ariaLabel;
    /** Sets the aria-label needed for accessibility.
     * Notice that this `aria-label` should describe the initial action according to the status of the visibility.
     * E.g if you have an `input[type=password]` at the beginning then the
     * password will be hidden and the correct aria-label would be 'Show password.'
     */
    set ariaLabel(value: string);
    get ariaLabel(): string;
    constructor(_cdr: ChangeDetectorRef, _elementRef: ElementRef, _focusMonitor: FocusMonitor);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /** Toggles the type of the input. */
    toggleInputType(): void;
    /** @docs-private */
    toggleIcon(): void;
    /** @docs-private */
    _onKeydown($event: KeyboardEvent): void;
    /** @docs-private */
    get tabindex(): number | null;
    static ɵfac: i0.ɵɵFactoryDeclaration<NxPasswordToggleComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NxPasswordToggleComponent, "nx-password-toggle", never, { "control": "control"; "ariaLabel": "ariaLabel"; }, {}, never, never>;
}
