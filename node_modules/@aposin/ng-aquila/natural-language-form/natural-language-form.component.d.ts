import { BooleanInput } from '@angular/cdk/coercion';
import { AfterContentInit, ChangeDetectorRef, NgZone, OnDestroy, QueryList } from '@angular/core';
import { Observable, Subject } from 'rxjs';
import { NxWordComponent } from './word.component';
import * as i0 from "@angular/core";
/** Size of the NLF. */
export declare type NxNaturalLanguageFormSize = 'small' | 'large';
export declare class NxNaturalLanguageFormComponent implements AfterContentInit, OnDestroy {
    private _cdr;
    private _ngZone;
    private _negative;
    /** @docs-private */
    resizeEvent$: Subject<void>;
    /** @docs-private */
    resizeObservable: Observable<void>;
    _words: QueryList<NxWordComponent>;
    /** @docs-private */
    private _size;
    /** Whether the negative set of stylings should be used. */
    set negative(value: BooleanInput);
    get negative(): BooleanInput;
    /**
     * Sets the size of the NLF. Default value: large
     */
    set size(value: NxNaturalLanguageFormSize);
    get size(): NxNaturalLanguageFormSize;
    private readonly _destroyed;
    constructor(_cdr: ChangeDetectorRef, _ngZone: NgZone);
    /** @docs-private */
    onResize(event: Event): void;
    ngAfterContentInit(): void;
    /** @docs-private */
    resizeWords(): void;
    ngOnDestroy(): void;
    /** @docs-private */
    updatePositionPopovers(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NxNaturalLanguageFormComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NxNaturalLanguageFormComponent, "nx-natural-language-form", never, { "negative": "nxNegative"; "size": "size"; }, {}, ["_words"], ["*"]>;
}
