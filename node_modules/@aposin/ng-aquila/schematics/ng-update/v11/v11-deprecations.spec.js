"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const test_setup_1 = require("../../utils/testing/test-setup");
describe('ng-aquila ng add', () => {
    const testSetup = new test_setup_1.SchematicTestSetup('migration-v11', test_setup_1.Collection.MIGRATIONS);
    it('should replace label with labelCollapsed', async () => {
        testSetup.writeFile('./projects/aquila-testing/src/app/app.component.html', `
      <div nxComparisonTableRowGroup [label]="myLabel" >
    `);
        await testSetup.runMigration();
        expect(testSetup.appTree.readContent('./projects/aquila-testing/src/app/app.component.html')).toContain('[labelCollapsed]="myLabel"');
    });
    it('should replace getPopupConnectionElementRef on NxDatefieldDirective', async () => {
        testSetup.writeFile('./projects/aquila-testing/src/app/app.component.ts', `
    import { Component } from '@angular/core';

    // fake class that the typechecker finds the type in the test
    class NxDatefieldDirective {
    }

    @Component({
      selector: 'doc-root',
      templateUrl: './app.component.html'
    })
    export class AppComponent {
      title = 'documentation';
      datepicker: NxDatefieldDirective;

      constructor() {
        this.datepicker = new NxDatefieldDirective();
        this.datepicker.getPopupConnectionElementRef();
      }
    }
    `);
        await testSetup.runMigration();
        expect(testSetup.appTree.readContent('./projects/aquila-testing/src/app/app.component.ts')).toContain('getConnectedOverlayOrigin');
    });
});
//# sourceMappingURL=v11-deprecations.spec.js.map