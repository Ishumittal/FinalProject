import { FocusMonitor } from '@angular/cdk/a11y';
import { BooleanInput } from '@angular/cdk/coercion';
import { CdkStepHeader, CdkStepLabel } from '@angular/cdk/stepper';
import { ChangeDetectorRef, ElementRef, OnDestroy } from '@angular/core';
import { NxMultiStepperDirection } from '../progress-stepper.models';
import * as i0 from "@angular/core";
/** @docs-private */
export declare class NxMultiStepItemComponent extends CdkStepHeader implements OnDestroy {
    private _cdr;
    _elementRef: ElementRef<HTMLElement>;
    private _focusMonitor;
    /** The direction of the step */
    get direction(): NxMultiStepperDirection;
    set direction(value: NxMultiStepperDirection);
    private _direction;
    /** The label of the step. */
    label: CdkStepLabel | string;
    /** Sets the selected step. */
    get selected(): boolean;
    set selected(value: BooleanInput);
    private _selected;
    /** Sets the active step. */
    get active(): boolean;
    set active(value: BooleanInput);
    private _active;
    get disabled(): boolean;
    set disabled(value: BooleanInput);
    private _disabled;
    /** Sets the last step. */
    get last(): boolean;
    set last(value: BooleanInput);
    private _last;
    /** Sets the step completed. */
    get completed(): boolean;
    set completed(value: BooleanInput);
    private _completed;
    constructor(_cdr: ChangeDetectorRef, _elementRef: ElementRef<HTMLElement>, _focusMonitor: FocusMonitor);
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NxMultiStepItemComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NxMultiStepItemComponent, "nx-multi-step-item", never, { "direction": "direction"; "label": "label"; "selected": "selected"; "active": "active"; "disabled": "disabled"; "last": "last"; "completed": "completed"; }, {}, never, never>;
}
