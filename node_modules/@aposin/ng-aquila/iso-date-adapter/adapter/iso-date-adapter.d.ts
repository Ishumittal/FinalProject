import { NxDateAdapter } from '@aposin/ng-aquila/datefield';
/**
 * @docs-private
 */
export declare class NxIsoDateAdapter extends NxDateAdapter<string> {
    private _localeData;
    private _dayjsLocale;
    constructor(dateLocale: string | null);
    toIso8601(date: string): string;
    deserialize(value: any): string | null;
    format(date: string, displayFormat: any): string;
    /**
     * if the given formats include a localized format we have to map
     * it manually to a dayjs format as dayjs recognizes locale
     * format only for formatting not for parsing
     * see https://github.com/iamkun/dayjs/issues/694#issuecomment-543209946
     */
    normalizeFormat(format: string | string[]): string[];
    parse(value: any, format: string | string[], strict: boolean): string;
    isValid(date: string): boolean;
    clone(date: string): string;
    isDateInstance(obj: any): boolean;
    invalid(): string;
    getYear(date: string): number;
    getMonth(date: string): number;
    getDate(date: string): number;
    getYearName(date: string): string;
    createDate(year: number, month: number, date: number): string;
    getNumDaysInMonth(date: string): number;
    getDateNames(): string[];
    getDayOfWeek(date: string): number;
    getFirstDayOfWeek(): number;
    getMonthNames(style: 'long' | 'short' | 'narrow'): string[];
    today(): string;
    addCalendarMonths(date: string, months: number): string;
    addCalendarYears(date: string, years: number): string;
    addCalendarDays(date: string, days: number): string;
    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];
    setLocale(locale: string): Promise<void>;
    private _createDayjs;
    private _createString;
}
