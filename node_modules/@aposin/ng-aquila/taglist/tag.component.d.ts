import { FocusMonitor } from '@angular/cdk/a11y';
import { BooleanInput, NumberInput } from '@angular/cdk/coercion';
import { ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy } from '@angular/core';
import * as i0 from "@angular/core";
export declare class NxTagComponent implements OnDestroy {
    private _cdr;
    private _elementRef;
    private _focusMonitor;
    private _removable;
    /** Whether the tag is removeable. */
    set removable(value: BooleanInput);
    get removable(): BooleanInput;
    private _tabindex;
    /**
     * Sets the tab-index of a tag. Default value: -1.
     *
     * If `nxAllowTagDeletion` of the taglist is set to true, the default value is 0.
     */
    set tabindex(value: NumberInput);
    get tabindex(): number;
    private _value;
    /** Sets the value of the tag. */
    set value(value: string);
    get value(): string;
    /** An event is dispatched each time when the tag is clicked. */
    readonly clicked: EventEmitter<any>;
    /** An event is dispatched each time when the tag is removed. */
    readonly removed: EventEmitter<any>;
    constructor(_cdr: ChangeDetectorRef, _elementRef: ElementRef, _focusMonitor: FocusMonitor);
    ngOnDestroy(): void;
    /** @docs-private */
    removeClickHandler(event: MouseEvent): void;
    /** @docs-private */
    removeKeyHandler(event: KeyboardEvent): void;
    /** @docs-private */
    tagClickHandler(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NxTagComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NxTagComponent, "nx-tag", never, { "removable": "removable"; "tabindex": "tabindex"; "value": "value"; }, { "clicked": "clicked"; "removed": "removed"; }, never, never>;
}
