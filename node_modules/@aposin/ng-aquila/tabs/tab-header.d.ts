import { Directionality } from '@angular/cdk/bidi';
import { AfterContentInit, ChangeDetectorRef, ElementRef, EventEmitter, QueryList } from '@angular/core';
import { NxScrollableTabBar } from './scrollable-tab-bar';
import { NxTabGroupBase } from './tab-group-base';
import { NxTabLabelWrapperDirective } from './tab-label-wrapper';
import * as i0 from "@angular/core";
/** @docs-private */
export declare class NxTabHeaderComponent extends NxScrollableTabBar implements AfterContentInit {
    _cdr: ChangeDetectorRef;
    _tabGroup: NxTabGroupBase | null;
    private _keyManager;
    scrollableTabsList: ElementRef<HTMLElement>;
    tabButtons: QueryList<HTMLElement>;
    private _selectedIndex;
    get selectedIndex(): number;
    set selectedIndex(value: number);
    get focusIndex(): number;
    set focusIndex(value: number);
    private _autoselect;
    get autoselect(): boolean;
    set autoselect(value: boolean);
    readonly selectFocusedIndex: EventEmitter<number>;
    readonly indexFocused: EventEmitter<number>;
    labels: QueryList<NxTabLabelWrapperDirective>;
    constructor(_cdr: ChangeDetectorRef, _dir: Directionality | null, _tabGroup: NxTabGroupBase | null, _element: ElementRef);
    ngAfterContentInit(): void;
    private _isValidIndex;
    /**
     * Handles keyboard inputs on the labels
     * If autoselect is enabled the tab gets changed immediately
     * If autoselect is disabled only the focus changes but the user still has to select the item
     * by himself
     */
    handleKeydown(event: KeyboardEvent): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NxTabHeaderComponent, [null, { optional: true; }, { optional: true; }, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NxTabHeaderComponent, "nx-tab-header", never, { "selectedIndex": "selectedIndex"; "autoselect": "autoselect"; }, { "selectFocusedIndex": "selectFocusedIndex"; "indexFocused": "indexFocused"; }, ["tabButtons", "labels"], ["*"]>;
}
