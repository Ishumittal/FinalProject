import { FocusMonitor } from '@angular/cdk/a11y';
import { Directionality } from '@angular/cdk/bidi';
import { BooleanInput } from '@angular/cdk/coercion';
import { ChangeDetectorRef, ElementRef, OnDestroy, QueryList } from '@angular/core';
import { NxScrollableTabBar } from './scrollable-tab-bar';
import { NxTabsAppearance, TabNavBarDefaultOptions } from './tabs.models';
import * as i0 from "@angular/core";
export declare class NxTabNavBarComponent extends NxScrollableTabBar {
    _cdr: ChangeDetectorRef;
    private _defaultOptions;
    scrollableTabsList: ElementRef<HTMLElement>;
    tabButtons: QueryList<HTMLElement>;
    private _negative;
    /** Whether the tab nav bar has negative styling. */
    set negative(value: BooleanInput);
    get negative(): boolean;
    private _disabled;
    /** Whether the tab nav bar has disabled styling. */
    set disabled(value: BooleanInput);
    get disabled(): boolean;
    private _appearance;
    /**
     * **Expert option**
     *
     * Sets the appearance of the tab nav bar. Default: 'default'.
     */
    set appearance(value: NxTabsAppearance);
    get appearance(): NxTabsAppearance;
    constructor(_cdr: ChangeDetectorRef, _dir: Directionality | null, _defaultOptions: TabNavBarDefaultOptions | null, _element: ElementRef);
    static ɵfac: i0.ɵɵFactoryDeclaration<NxTabNavBarComponent, [null, { optional: true; }, { optional: true; }, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NxTabNavBarComponent, "nx-tab-nav-bar", never, { "negative": "negative"; "disabled": "disabled"; "appearance": "appearance"; }, {}, ["tabButtons"], ["*"]>;
}
export declare class NxTabLinkDirective implements OnDestroy {
    private _tabNavBar;
    private _elementRef;
    private _focusMonitor;
    private _active;
    private _disabled;
    /** Whether the tab link is active and has the active styling. */
    get active(): boolean;
    set active(value: BooleanInput);
    /** Whether the tab link is disabled. Default: false. */
    get disabled(): boolean;
    set disabled(value: BooleanInput);
    constructor(_tabNavBar: NxTabNavBarComponent | null, _elementRef: ElementRef, _focusMonitor: FocusMonitor);
    ngOnDestroy(): void;
    _getTabIndex(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<NxTabLinkDirective, [{ optional: true; skipSelf: true; }, null, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NxTabLinkDirective, "[nxTabLink]", never, { "active": "active"; "disabled": "disabled"; }, {}, never>;
}
