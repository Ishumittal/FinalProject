import { FocusMonitor } from '@angular/cdk/a11y';
import { BooleanInput } from '@angular/cdk/coercion';
import { ChangeDetectorRef, ElementRef, OnDestroy } from '@angular/core';
import * as i0 from "@angular/core";
export declare type NxMenuButtonType = 'root' | 'nested';
/**
 * @title MenuButton
 */
export declare class NxMenuButtonComponent implements OnDestroy {
    private _cdr;
    private _focusMonitor;
    private _elementRef;
    /** Whether this menu button is expandable or not. Will add a caret icon. */
    set expandable(value: BooleanInput);
    get expandable(): boolean;
    private _expandable;
    /**
     * Whether this menu button is expanded or not.
     * Only works in combination with the `expandable` option set to `true`.
     */
    set expanded(value: BooleanInput);
    get expanded(): BooleanInput;
    private _expanded;
    /**
     * The type of this menu button.
     * Can be `primary` or `secondary`, defaults to `primary`.
     */
    set type(value: NxMenuButtonType);
    get type(): NxMenuButtonType;
    private _type;
    constructor(_cdr: ChangeDetectorRef, _focusMonitor: FocusMonitor, _elementRef: ElementRef);
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NxMenuButtonComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NxMenuButtonComponent, "[nxMenuButton]", never, { "expandable": "expandable"; "expanded": "expanded"; "type": "nxType"; }, {}, never, ["[nxMenuButtonIcon]", "*"]>;
}
/**
 * Icon that can be added to a [nxButton].
 */
export declare class NxMenuButtonIconDirective {
    static ɵfac: i0.ɵɵFactoryDeclaration<NxMenuButtonIconDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NxMenuButtonIconDirective, "[nxMenuButtonIcon]", never, {}, {}, never>;
}
