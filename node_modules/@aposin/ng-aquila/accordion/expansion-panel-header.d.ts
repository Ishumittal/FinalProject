import { FocusMonitor } from '@angular/cdk/a11y';
import { ChangeDetectorRef, ElementRef, OnDestroy } from '@angular/core';
import { NxExpansionPanelComponent } from './expansion-panel';
import * as i0 from "@angular/core";
export declare class NxExpansionPanelHeaderComponent implements OnDestroy {
    /** @docs-private */ panel: NxExpansionPanelComponent;
    private _cdr;
    private _elementRef;
    private _focusMonitor;
    private readonly _destroyed;
    constructor(
    /** @docs-private */ panel: NxExpansionPanelComponent, _cdr: ChangeDetectorRef, _elementRef: ElementRef, _focusMonitor: FocusMonitor);
    ngOnDestroy(): void;
    /** @docs-private */
    isExpanded(): boolean;
    /** @docs-private */
    getOpenState(): string;
    _getPanelId(): string;
    /**
     * Toggle the expansion panel.
     */
    toggle(): void;
    /** @docs-private */
    keydown(event: KeyboardEvent): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NxExpansionPanelHeaderComponent, [{ host: true; }, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NxExpansionPanelHeaderComponent, "nx-expansion-panel-header", never, {}, {}, never, ["nx-expansion-panel-title", "nx-expansion-panel-description"]>;
}
/**
 * This directive is to be used inside of the NxExpansionPanelHeader component.
 */
export declare class NxExpansionPanelDescriptionDirective {
    static ɵfac: i0.ɵɵFactoryDeclaration<NxExpansionPanelDescriptionDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NxExpansionPanelDescriptionDirective, "nx-expansion-panel-description", never, {}, {}, never>;
}
/**
 * This directive is to be used inside of the NxExpansionPanelHeader component.
 */
export declare class NxExpansionPanelTitleDirective {
    static ɵfac: i0.ɵɵFactoryDeclaration<NxExpansionPanelTitleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NxExpansionPanelTitleDirective, "nx-expansion-panel-title", never, {}, {}, never>;
}
