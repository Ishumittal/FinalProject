import { BooleanInput } from '@angular/cdk/coercion';
import { ChangeDetectorRef } from '@angular/core';
import { NxExpandableTableDirective } from './expandable/expandable-table.directive';
import * as i0 from "@angular/core";
/**
 * This is a table.
 * The table supports a `zebra` and a `condensed` mode.
 */
export declare class NxTableComponent {
    private _cdr;
    private _expandableTableDirective;
    private _condensed;
    private _zebra;
    private _sticky;
    constructor(_cdr: ChangeDetectorRef, _expandableTableDirective: NxExpandableTableDirective | null);
    /** Change the table mode to condensed  */
    set condensed(value: BooleanInput);
    get condensed(): boolean;
    /** Change the table mode to zebra  */
    set zebra(value: BooleanInput);
    get zebra(): boolean;
    /**
     * Makes first or last column "sticky".
     *
     * Values: first | last | both
     */
    set sticky(value: string);
    get sticky(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<NxTableComponent, [null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NxTableComponent, "table[nxTable]", never, { "sticky": "sticky"; "condensed": "condensed"; "zebra": "zebra"; }, {}, never, ["*"]>;
}
