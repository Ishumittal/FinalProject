import { FocusMonitor } from '@angular/cdk/a11y';
import { AfterViewInit, ChangeDetectorRef, ElementRef, OnDestroy } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
export interface NxExpandable {
    /** Indicates if this expandable instance is open or not.  */
    expanded: BehaviorSubject<boolean>;
    /** Toggles the open state. */
    toggle(): void;
    /** Expands this component. */
    expand(): void;
    /** Closes this component. */
    close(): void;
}
/**
 * This toggle button can be clicked and toggles expandable elements.
 * e.g. it can toggle a expandable table row or anything else that implements the `NxExpandable` interface.
 */
export declare class NxToggleButtonComponent implements AfterViewInit, OnDestroy {
    private _cdr;
    private _focusMonitor;
    _expanded: boolean;
    _buttonElement: ElementRef;
    /**
     * This is the expandable target that will be toggled when the user clicks the button.
     */
    set target(value: NxExpandable);
    _target: NxExpandable;
    set ariaLabel(value: string);
    _ariaLabel: string;
    private _subscription;
    constructor(_cdr: ChangeDetectorRef, _focusMonitor: FocusMonitor);
    ngAfterViewInit(): void;
    _onClick(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NxToggleButtonComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NxToggleButtonComponent, "nx-toggle-button", never, { "target": "target"; "ariaLabel": "ariaLabel"; }, {}, never, never>;
}
