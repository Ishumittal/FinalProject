import { FocusMonitor } from '@angular/cdk/a11y';
import { AfterViewInit, ChangeDetectorRef, ElementRef, OnDestroy, OnInit } from '@angular/core';
import { NxSortDirective } from './sort.directive';
import { NxSortHeaderIntl } from './sort-header-intl';
import * as i0 from "@angular/core";
export declare class NxSortHeaderComponent implements OnInit, AfterViewInit, OnDestroy {
    _intl: NxSortHeaderIntl;
    private _cdr;
    private _focusMonitor;
    private _key;
    _focusContainer: ElementRef;
    /** Sets the key of this sort header. */
    set key(value: string);
    get key(): string;
    readonly _sort: NxSortDirective;
    private readonly _destroyed;
    constructor(_sort: NxSortDirective | null, _intl: NxSortHeaderIntl, _cdr: ChangeDetectorRef, _focusMonitor: FocusMonitor);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    _handleClick(): void;
    _onKeydown($event: KeyboardEvent): void;
    _isSortedAscending(): boolean;
    _isSortedDescending(): boolean;
    _getAriaLabel(): string;
    _getTitle(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<NxSortHeaderComponent, [{ optional: true; }, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NxSortHeaderComponent, "th[nxSortHeaderCell]", ["nxSortHeaderComponent"], { "key": "nxSortHeaderCell"; }, {}, never, ["*"]>;
}
