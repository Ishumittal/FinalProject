import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { ChangeDetectionStrategy, Component, forwardRef, HostListener, Inject, Input, } from '@angular/core';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { NxRadioToggleComponent } from './radio-toggle.component';
import { NxRadioToggleButtonBaseComponent } from './radio-toggle-button-base.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/collections";
import * as i2 from "@angular/cdk/a11y";
import * as i3 from "@aposin/ng-aquila/icon";
import * as i4 from "./radio-toggle.component";
/** @docs-private */
export class NxRadioToggleButtonChange {
    constructor(source, value) {
        this.source = source;
        this.value = value;
    }
}
export class NxRadioToggleButtonComponent extends NxRadioToggleButtonBaseComponent {
    constructor(radioToggle, 
    /** @docs-private */ renderer, _cdr, _toggleDispatcher, _focusMonitor) {
        super(renderer);
        this.radioToggle = radioToggle;
        this._cdr = _cdr;
        this._toggleDispatcher = _toggleDispatcher;
        this._focusMonitor = _focusMonitor;
        /** @docs-private */
        // emits when the button is checked to notify the group
        this.onChecked = new Subject();
        this._disabled = false;
        this._selected = false;
        this._destroyed = new Subject();
        /** Unregister function for _expansionDispatcher. */
        this._removeUniqueSelectionListener = () => { };
        this._removeUniqueSelectionListener = this._toggleDispatcher.listen((id, radioToggleId) => {
            if (this.radioToggle && this.radioToggle.id === radioToggleId && this.id !== id) {
                this._selected = false;
                // need to let change detector know in case that the select() function was called on another button
                this._cdr.markForCheck();
            }
        });
        this.radioToggle._disableChange.pipe(takeUntil(this._destroyed)).subscribe(() => {
            this._cdr.markForCheck();
        });
    }
    /** @docs-private */
    set disabled(value) {
        this._disabled = coerceBooleanProperty(value);
        this._cdr.markForCheck();
    }
    get disabled() {
        return this._disabled || this.radioToggle?.disabled;
    }
    /** Sets the checked state and notify siblings and the parent group about the change */
    // Only use this if you want the onChecked event to be fired, this will inform the parent about the change!
    // To select a button without firing the event use the select() function
    set selected(value) {
        if (this._selected !== value) {
            this._selected = value;
            if (this._selected) {
                this._notifySiblings();
                this._emitCheckedEvent();
            }
            this._cdr.markForCheck();
        }
    }
    get selected() {
        return this._selected;
    }
    ngAfterViewInit() {
        this._focusMonitor.monitor(this.toggleInput);
    }
    ngOnDestroy() {
        this._removeUniqueSelectionListener();
        this._destroyed.next();
        this._destroyed.complete();
        this._focusMonitor.stopMonitoring(this.toggleInput);
    }
    /** @docs-private */
    get toggleId() {
        return this.radioToggle.id;
    }
    /** @docs-private */
    get id() {
        return this.toggleButtonId;
    }
    _notifySiblings() {
        const toggleId = this.radioToggle ? this.radioToggle.id : this.id;
        this._toggleDispatcher.notify(this.id, toggleId);
    }
    _emitCheckedEvent() {
        this.onChecked.next(new NxRadioToggleButtonChange(this, this.value));
    }
    // Does NOT emit the onChecked event. Useful when you need to set initial
    // state. Used by the parent to set checked states on initialization and during
    // writeValue() changes.
    /** @docs-private */
    select() {
        if (!this._selected) {
            this._selected = true;
            this._notifySiblings();
        }
        this._cdr.markForCheck();
    }
    /** @docs-private */
    deselect() {
        if (this._selected) {
            this._selected = false;
        }
        this._cdr.markForCheck();
    }
    /** @docs-private */
    onKeyupSpace() {
        this._selected = false;
        this._notifySiblings();
    }
    /** @docs-private */
    _controlInvalid() {
        return !!this.radioToggle?.errorState;
    }
}
NxRadioToggleButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxRadioToggleButtonComponent, deps: [{ token: forwardRef(() => NxRadioToggleComponent) }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i1.UniqueSelectionDispatcher }, { token: i2.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });
NxRadioToggleButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxRadioToggleButtonComponent, selector: "nx-radio-toggle-button", inputs: { disabled: ["nxDisabled", "disabled"], selected: ["nxSelected", "selected"] }, host: { listeners: { "keyup.space": "onKeyupSpace()" }, properties: { "class.has-error": "_controlInvalid() || null", "attr.aria-invalid": "_controlInvalid() || null" } }, providers: [
        {
            provide: NxRadioToggleButtonBaseComponent,
            useExisting: forwardRef(() => NxRadioToggleButtonComponent),
        },
    ], usesInheritance: true, ngImport: i0, template: "<input\n    [attr.id]=\"toggleButtonId\"\n    #toggleInput\n    [attr.name]=\"toggleId\"\n    [checked]=\"selected\"\n    class=\"nx-radio-toggle__input\"\n    type=\"radio\"\n    (click)=\"selected = true\"\n    [disabled]=\"disabled\"\n/>\n<div (click)=\"triggerInputClick($event)\" #toggleButtonLabelContainer class=\"nx-radio-toggle__label-container\">\n    <label [attr.for]=\"toggleButtonId\" class=\"nx-radio-toggle__label\">\n        <nx-icon class=\"nx-toggle-button__mobile-check\" name=\"check\" aria-hidden=\"true\"></nx-icon>\n        <ng-content></ng-content>\n    </label>\n</div>\n", styles: [":host{display:flex;position:relative;flex-direction:row}@media (max-width: 703px){:host{width:100%}}:host.has-error .nx-radio-toggle__input:checked+.nx-radio-toggle__label-container{border-color:var(--danger);background-color:var(--danger)}:host.has-error .nx-radio-toggle__label-container{border-color:var(--danger);color:var(--danger)}:host.has-error:hover .nx-radio-toggle__label-container{color:var(--toggle-button-hover-text-color)}.nx-radio-toggle__input{opacity:0;position:absolute}.nx-radio-toggle__input:active+.nx-radio-toggle__label-container{background-color:var(--toggle-button-active-background-color);border-color:var(--toggle-button-active-border-color);color:var(--toggle-button-active-text-color)}.nx-radio-toggle__input:checked:disabled+.nx-radio-toggle__label-container{background-color:var(--toggle-button-disabled-selected-background-color);border-color:var(--toggle-button-disabled-selected-border-color);color:var(--toggle-button-disabled-selected-text-color)}.nx-radio-toggle__input:disabled+.nx-radio-toggle__label-container{background-color:var(--toggle-button-disabled-background-color);border-color:var(--toggle-button-disabled-border-color);color:var(--toggle-button-disabled-text-color);cursor:not-allowed}.nx-radio-toggle__input:disabled+.nx-radio-toggle__label-container .nx-radio-toggle__label{cursor:not-allowed}.nx-radio-toggle__input:checked+.nx-radio-toggle__label-container{background-color:var(--toggle-button-selected-background-color);border-color:var(--toggle-button-selected-border-color);color:var(--toggle-button-selected-text-color);cursor:default}@media (max-width: 703px){.nx-radio-toggle__input:checked+.nx-radio-toggle__label-container .nx-toggle-button__mobile-check{display:inline-block}}.nx-radio-toggle__input:checked+.nx-radio-toggle__label-container .nx-radio-toggle__label{cursor:default}.nx-toggle-button__mobile-check{display:none;font-size:24px;margin-right:8px;height:24px}:host-context([dir=rtl]) .nx-toggle-button__mobile-check{margin-right:0;margin-right:initial;margin-left:8px}:host-context(.nx-radio-toggle--small) .nx-radio-toggle__label-container{font-size:var(--toggle-button-small-font-size);line-height:var(--toggle-button-small-line-height);font-weight:var(--toggle-button-small-font-weight);letter-spacing:var(--toggle-button-small-letter-spacing);min-height:16px;padding:6px;text-transform:none}@media (max-width: 703px){:host-context(.nx-radio-toggle--small) .nx-radio-toggle__label-container{font-size:var(--toggle-button-large-font-size);line-height:var(--toggle-button-large-line-height);font-weight:var(--toggle-button-large-font-weight);letter-spacing:var(--toggle-button-large-letter-spacing);padding:11px 31px}}.nx-radio-toggle{-webkit-user-select:none;user-select:none;cursor:pointer}.nx-radio-toggle__label-container.nx-radio-toggle__label-container--first{border-radius:4px 0 0 4px;border-width:2px 0 2px 2px}@media (max-width: 703px){.nx-radio-toggle__label-container.nx-radio-toggle__label-container--first{border-width:2px;border-bottom-width:1px;border-radius:4px 4px 0 0}}:host-context([dir=rtl]) .nx-radio-toggle__label-container.nx-radio-toggle__label-container--first{border-radius:0 4px 4px 0;border-width:2px 2px 2px 0}@media (max-width: 703px){:host-context([dir=rtl]) .nx-radio-toggle__label-container.nx-radio-toggle__label-container--first{border-width:2px;border-bottom-width:1px;border-radius:4px 4px 0 0}}.nx-radio-toggle__label-container.nx-radio-toggle__label-container--last{border-radius:0 4px 4px 0;border-width:2px}@media (max-width: 703px){.nx-radio-toggle__label-container.nx-radio-toggle__label-container--last{border-width:2px;border-top-width:1px;border-radius:0 0 4px 4px}.nx-radio-toggle__label-container.nx-radio-toggle__label-container--last.nx-radio-toggle__label-container--first{border-radius:4px;border-width:2px}}:host-context([dir=rtl]) .nx-radio-toggle__label-container.nx-radio-toggle__label-container--last{border-radius:4px 0 0 4px;border-width:2px}@media (max-width: 703px){:host-context([dir=rtl]) .nx-radio-toggle__label-container.nx-radio-toggle__label-container--last{border-width:2px;border-top-width:1px;border-radius:0 0 4px 4px}}.nx-radio-toggle__label-container{font-size:var(--toggle-button-large-font-size);line-height:var(--toggle-button-large-line-height);font-weight:var(--toggle-button-large-font-weight);letter-spacing:var(--toggle-button-large-letter-spacing);padding:10px 30px;color:var(--toggle-button-unselected-text-color);background-color:var(--toggle-button-unselected-background-color);border-color:var(--toggle-button-unselected-border-color);border-style:solid;border-radius:0;border-width:2px 0 2px 2px;cursor:pointer;flex-grow:1;text-align:center;text-transform:var(--button-text-transform);transition:background-color .2s ease,border-color .2s ease,color .2s ease;display:flex;align-items:center;height:100%;min-height:24px}@media (max-width: 703px){.nx-radio-toggle__label-container{border-width:1px 2px;justify-content:center;padding:11px 31px}}:host-context([dir=rtl]) .nx-radio-toggle__label-container{border-width:2px 2px 2px 0}@media (max-width: 703px){:host-context([dir=rtl]) .nx-radio-toggle__label-container{border-width:1px 2px}}.nx-radio-toggle__label-container:hover{background-color:var(--toggle-button-hover-background-color);border-color:var(--toggle-button-hover-border-color);color:var(--toggle-button-hover-text-color)}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__input:focus+.nx-radio-toggle__label-container{background-color:var(--negative-01);border-color:var(--negative-01);color:var(--negative-accent)}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__input:active+.nx-radio-toggle__label-container{background-color:var(--negative-02);border-color:var(--negative-02);color:var(--negative-accent)}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__input:disabled:checked+.nx-radio-toggle__label-container{background-color:var(--negative-dimmed);border-color:transparent;color:var(--negative-background-dimmed)}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__input:disabled+.nx-radio-toggle__label-container{background-color:transparent;border-color:var(--negative-dimmed);color:var(--negative-dimmed)}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__input:checked+.nx-radio-toggle__label-container{background-color:var(--negative);border-color:var(--negative);color:var(--negative-accent)}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__label-container{border-color:var(--negative);color:var(--negative)}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__label-container:hover{background-color:var(--negative-01);border-color:var(--negative-01);color:var(--negative-accent)}.nx-radio-toggle__label{display:flex;align-items:center;cursor:pointer}.nx-radio-toggle__input.cdk-keyboard-focused+.nx-radio-toggle__label-container{box-shadow:var(--focus-box-shadow);z-index:1}@media screen and (-ms-high-contrast: active),(forced-colors: active){.nx-radio-toggle__input.cdk-keyboard-focused+.nx-radio-toggle__label-container{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}@media screen and (-ms-high-contrast: active){:host{forced-color-adjust:none}.nx-radio-toggle__label-container{background-color:buttonFace!important;border-color:buttonText!important;color:buttonText!important}.nx-radio-toggle__label-container .nx-radio-toggle__label{-ms-high-contrast-adjust:none}.nx-radio-toggle__input:disabled+.nx-radio-toggle__label-container{background-color:buttonFace!important;border-color:GrayText!important;color:GrayText!important}.nx-radio-toggle__input:checked+.nx-radio-toggle__label-container{background-color:highlight!important;border-color:buttonText!important;color:highlightText!important}.nx-radio-toggle__input:checked+.nx-radio-toggle__label-container .nx-radio-toggle__label{color:highlightText!important}}\n"], components: [{ type: i3.NxIconComponent, selector: "nx-icon", inputs: ["name", "outline", "fill", "size", "font"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxRadioToggleButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-radio-toggle-button', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                        {
                            provide: NxRadioToggleButtonBaseComponent,
                            useExisting: forwardRef(() => NxRadioToggleButtonComponent),
                        },
                    ], host: {
                        '[class.has-error]': '_controlInvalid() || null',
                        '[attr.aria-invalid]': '_controlInvalid() || null',
                    }, template: "<input\n    [attr.id]=\"toggleButtonId\"\n    #toggleInput\n    [attr.name]=\"toggleId\"\n    [checked]=\"selected\"\n    class=\"nx-radio-toggle__input\"\n    type=\"radio\"\n    (click)=\"selected = true\"\n    [disabled]=\"disabled\"\n/>\n<div (click)=\"triggerInputClick($event)\" #toggleButtonLabelContainer class=\"nx-radio-toggle__label-container\">\n    <label [attr.for]=\"toggleButtonId\" class=\"nx-radio-toggle__label\">\n        <nx-icon class=\"nx-toggle-button__mobile-check\" name=\"check\" aria-hidden=\"true\"></nx-icon>\n        <ng-content></ng-content>\n    </label>\n</div>\n", styles: [":host{display:flex;position:relative;flex-direction:row}@media (max-width: 703px){:host{width:100%}}:host.has-error .nx-radio-toggle__input:checked+.nx-radio-toggle__label-container{border-color:var(--danger);background-color:var(--danger)}:host.has-error .nx-radio-toggle__label-container{border-color:var(--danger);color:var(--danger)}:host.has-error:hover .nx-radio-toggle__label-container{color:var(--toggle-button-hover-text-color)}.nx-radio-toggle__input{opacity:0;position:absolute}.nx-radio-toggle__input:active+.nx-radio-toggle__label-container{background-color:var(--toggle-button-active-background-color);border-color:var(--toggle-button-active-border-color);color:var(--toggle-button-active-text-color)}.nx-radio-toggle__input:checked:disabled+.nx-radio-toggle__label-container{background-color:var(--toggle-button-disabled-selected-background-color);border-color:var(--toggle-button-disabled-selected-border-color);color:var(--toggle-button-disabled-selected-text-color)}.nx-radio-toggle__input:disabled+.nx-radio-toggle__label-container{background-color:var(--toggle-button-disabled-background-color);border-color:var(--toggle-button-disabled-border-color);color:var(--toggle-button-disabled-text-color);cursor:not-allowed}.nx-radio-toggle__input:disabled+.nx-radio-toggle__label-container .nx-radio-toggle__label{cursor:not-allowed}.nx-radio-toggle__input:checked+.nx-radio-toggle__label-container{background-color:var(--toggle-button-selected-background-color);border-color:var(--toggle-button-selected-border-color);color:var(--toggle-button-selected-text-color);cursor:default}@media (max-width: 703px){.nx-radio-toggle__input:checked+.nx-radio-toggle__label-container .nx-toggle-button__mobile-check{display:inline-block}}.nx-radio-toggle__input:checked+.nx-radio-toggle__label-container .nx-radio-toggle__label{cursor:default}.nx-toggle-button__mobile-check{display:none;font-size:24px;margin-right:8px;height:24px}:host-context([dir=rtl]) .nx-toggle-button__mobile-check{margin-right:0;margin-right:initial;margin-left:8px}:host-context(.nx-radio-toggle--small) .nx-radio-toggle__label-container{font-size:var(--toggle-button-small-font-size);line-height:var(--toggle-button-small-line-height);font-weight:var(--toggle-button-small-font-weight);letter-spacing:var(--toggle-button-small-letter-spacing);min-height:16px;padding:6px;text-transform:none}@media (max-width: 703px){:host-context(.nx-radio-toggle--small) .nx-radio-toggle__label-container{font-size:var(--toggle-button-large-font-size);line-height:var(--toggle-button-large-line-height);font-weight:var(--toggle-button-large-font-weight);letter-spacing:var(--toggle-button-large-letter-spacing);padding:11px 31px}}.nx-radio-toggle{-webkit-user-select:none;user-select:none;cursor:pointer}.nx-radio-toggle__label-container.nx-radio-toggle__label-container--first{border-radius:4px 0 0 4px;border-width:2px 0 2px 2px}@media (max-width: 703px){.nx-radio-toggle__label-container.nx-radio-toggle__label-container--first{border-width:2px;border-bottom-width:1px;border-radius:4px 4px 0 0}}:host-context([dir=rtl]) .nx-radio-toggle__label-container.nx-radio-toggle__label-container--first{border-radius:0 4px 4px 0;border-width:2px 2px 2px 0}@media (max-width: 703px){:host-context([dir=rtl]) .nx-radio-toggle__label-container.nx-radio-toggle__label-container--first{border-width:2px;border-bottom-width:1px;border-radius:4px 4px 0 0}}.nx-radio-toggle__label-container.nx-radio-toggle__label-container--last{border-radius:0 4px 4px 0;border-width:2px}@media (max-width: 703px){.nx-radio-toggle__label-container.nx-radio-toggle__label-container--last{border-width:2px;border-top-width:1px;border-radius:0 0 4px 4px}.nx-radio-toggle__label-container.nx-radio-toggle__label-container--last.nx-radio-toggle__label-container--first{border-radius:4px;border-width:2px}}:host-context([dir=rtl]) .nx-radio-toggle__label-container.nx-radio-toggle__label-container--last{border-radius:4px 0 0 4px;border-width:2px}@media (max-width: 703px){:host-context([dir=rtl]) .nx-radio-toggle__label-container.nx-radio-toggle__label-container--last{border-width:2px;border-top-width:1px;border-radius:0 0 4px 4px}}.nx-radio-toggle__label-container{font-size:var(--toggle-button-large-font-size);line-height:var(--toggle-button-large-line-height);font-weight:var(--toggle-button-large-font-weight);letter-spacing:var(--toggle-button-large-letter-spacing);padding:10px 30px;color:var(--toggle-button-unselected-text-color);background-color:var(--toggle-button-unselected-background-color);border-color:var(--toggle-button-unselected-border-color);border-style:solid;border-radius:0;border-width:2px 0 2px 2px;cursor:pointer;flex-grow:1;text-align:center;text-transform:var(--button-text-transform);transition:background-color .2s ease,border-color .2s ease,color .2s ease;display:flex;align-items:center;height:100%;min-height:24px}@media (max-width: 703px){.nx-radio-toggle__label-container{border-width:1px 2px;justify-content:center;padding:11px 31px}}:host-context([dir=rtl]) .nx-radio-toggle__label-container{border-width:2px 2px 2px 0}@media (max-width: 703px){:host-context([dir=rtl]) .nx-radio-toggle__label-container{border-width:1px 2px}}.nx-radio-toggle__label-container:hover{background-color:var(--toggle-button-hover-background-color);border-color:var(--toggle-button-hover-border-color);color:var(--toggle-button-hover-text-color)}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__input:focus+.nx-radio-toggle__label-container{background-color:var(--negative-01);border-color:var(--negative-01);color:var(--negative-accent)}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__input:active+.nx-radio-toggle__label-container{background-color:var(--negative-02);border-color:var(--negative-02);color:var(--negative-accent)}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__input:disabled:checked+.nx-radio-toggle__label-container{background-color:var(--negative-dimmed);border-color:transparent;color:var(--negative-background-dimmed)}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__input:disabled+.nx-radio-toggle__label-container{background-color:transparent;border-color:var(--negative-dimmed);color:var(--negative-dimmed)}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__input:checked+.nx-radio-toggle__label-container{background-color:var(--negative);border-color:var(--negative);color:var(--negative-accent)}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__label-container{border-color:var(--negative);color:var(--negative)}:host-context(.nx-radio-toggle--negative) .nx-radio-toggle__label-container:hover{background-color:var(--negative-01);border-color:var(--negative-01);color:var(--negative-accent)}.nx-radio-toggle__label{display:flex;align-items:center;cursor:pointer}.nx-radio-toggle__input.cdk-keyboard-focused+.nx-radio-toggle__label-container{box-shadow:var(--focus-box-shadow);z-index:1}@media screen and (-ms-high-contrast: active),(forced-colors: active){.nx-radio-toggle__input.cdk-keyboard-focused+.nx-radio-toggle__label-container{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}@media screen and (-ms-high-contrast: active){:host{forced-color-adjust:none}.nx-radio-toggle__label-container{background-color:buttonFace!important;border-color:buttonText!important;color:buttonText!important}.nx-radio-toggle__label-container .nx-radio-toggle__label{-ms-high-contrast-adjust:none}.nx-radio-toggle__input:disabled+.nx-radio-toggle__label-container{background-color:buttonFace!important;border-color:GrayText!important;color:GrayText!important}.nx-radio-toggle__input:checked+.nx-radio-toggle__label-container{background-color:highlight!important;border-color:buttonText!important;color:highlightText!important}.nx-radio-toggle__input:checked+.nx-radio-toggle__label-container .nx-radio-toggle__label{color:highlightText!important}}\n"] }]
        }], ctorParameters: function () { return [{ type: i4.NxRadioToggleComponent, decorators: [{
                    type: Inject,
                    args: [forwardRef(() => NxRadioToggleComponent)]
                }] }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i1.UniqueSelectionDispatcher }, { type: i2.FocusMonitor }]; }, propDecorators: { disabled: [{
                type: Input,
                args: ['nxDisabled']
            }], selected: [{
                type: Input,
                args: ['nxSelected']
            }], onKeyupSpace: [{
                type: HostListener,
                args: ['keyup.space']
            }] } });
//# sourceMappingURL=data:application/json;base64,