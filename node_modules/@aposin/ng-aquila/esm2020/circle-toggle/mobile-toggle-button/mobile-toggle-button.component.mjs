import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@aposin/ng-aquila/icon";
import * as i2 from "@angular/common";
/** @docs-private */
export class NxMobileToggleButtonComponent {
    constructor(_cdr) {
        this._cdr = _cdr;
        this.checked = false;
        this.negative = false;
        this.disabled = false;
        this.hint = '';
        this.label = '';
        this.circleText = '';
        /** @docs-private */
        this.isFirst = false;
        /** @docs-private */
        this.isLast = false;
    }
    /** @docs-private */
    setFirstButton() {
        this.isFirst = true;
        this._cdr.markForCheck();
    }
    /** @docs-private */
    setLastButton() {
        this.isLast = true;
        this._cdr.markForCheck();
    }
    /** @docs-private */
    resetClasses() {
        this.isFirst = false;
        this.isLast = false;
        this._cdr.markForCheck();
    }
}
NxMobileToggleButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMobileToggleButtonComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
NxMobileToggleButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxMobileToggleButtonComponent, selector: "nx-mobile-toggle-button", inputs: { checked: "checked", negative: "negative", disabled: "disabled", hint: "hint", label: "label", circleText: "circleText" }, host: { properties: { "class.is-disabled": "disabled", "class.is-negative": "negative", "class.is-first": "isFirst", "class.is-last": "isLast", "class.is-flipped": "checked" } }, ngImport: i0, template: "<nx-icon class=\"nx-toggle-button__mobile-check\" name=\"check\" aria-hidden=\"true\"></nx-icon>\n<!-- If there is no label defined, use the circleText instead -->\n<span class=\"nx-toggle-button__label-text\"><ng-template *ngIf=\"label; then labelContent; else circleTextContent\"></ng-template></span>\n<span *ngIf=\"hint\" class=\"nx-toggle-button__label-hint\">({{ hint }})</span>\n\n<ng-template #labelContent>{{ label }}</ng-template>\n<ng-template #circleTextContent>{{ circleText }}</ng-template>\n", styles: [":host{display:none;position:relative;transition:background-color .2s ease,border-color .2s ease,color .2s ease;flex-direction:row;border-width:1px 2px;border-color:var(--circle-toggle-border-color);border-style:solid;padding:11px 31px;width:100%;justify-content:center;align-items:center;cursor:pointer}:host:not(.is-flipped):not(.is-disabled):hover{background-color:var(--circle-toggle-hover-background-color);border-color:var(--circle-toggle-hover-border-color)}:host:not(.is-flipped):not(.is-disabled):hover .nx-toggle-button__label-hint,:host:not(.is-flipped):not(.is-disabled):hover .nx-toggle-button__label-text{color:var(--circle-toggle-hover-icon-color)}@media (max-width: 703px){:host-context(.is-responsive){display:flex}}.nx-toggle-button__label-hint{color:var(--circle-toggle-icon-color);font-size:var(--circle-toggle-hint-mobile-font-size);line-height:var(--circle-toggle-hint-mobile-line-height);font-weight:var(--circle-toggle-hint-mobile-font-weight);letter-spacing:var(--circle-toggle-hint-mobile-letter-spacing)}.nx-toggle-button__label-text{color:var(--circle-toggle-icon-color);font-size:var(--circle-toggle-label-mobile-font-size);line-height:var(--circle-toggle-label-mobile-line-height);font-weight:var(--circle-toggle-label-mobile-font-weight);letter-spacing:var(--circle-toggle-label-mobile-letter-spacing);padding-top:0;padding-right:4px;font-weight:600}:host-context([dir=rtl]) .nx-toggle-button__label-text{padding-right:0;padding-right:initial;padding-left:4px}.nx-toggle-button__mobile-check{font-size:24px;height:24px;display:inline-block;opacity:0;margin-right:8px;color:var(--circle-toggle-checkmark-color)}:host-context([dir=rtl]) .nx-toggle-button__mobile-check{margin-right:0;margin-right:initial;margin-left:8px}:host(.is-first){border-top-width:2px;border-radius:4px 4px 0 0}:host(.is-last){border-bottom-width:2px;border-radius:0 0 4px 4px}:host(.is-flipped){background-color:var(--circle-toggle-selected-background-color)}:host(.is-flipped) .nx-toggle-button__label-hint,:host(.is-flipped) .nx-toggle-button__label-text{color:var(--circle-toggle-selected-icon-color)}:host(.is-flipped) .nx-toggle-button__mobile-check{opacity:1}:host(.is-negative){border-color:var(--negative)}:host(.is-negative) .nx-toggle-button__label-hint,:host(.is-negative) .nx-toggle-button__label-text,:host(.is-negative) .nx-toggle-button__mobile-check{color:var(--negative)}:host(.is-negative):not(.is-flipped):not(.is-disabled):hover{background-color:var(--negative-01);border-color:var(--negative-01)}:host(.is-negative):not(.is-flipped):not(.is-disabled):hover .nx-toggle-button__label-hint,:host(.is-negative):not(.is-flipped):not(.is-disabled):hover .nx-toggle-button__label-text{color:var(--negative-accent)}:host(.is-negative.is-flipped){background-color:var(--negative)}:host(.is-negative.is-flipped) .nx-toggle-button__label-hint,:host(.is-negative.is-flipped) .nx-toggle-button__label-text,:host(.is-negative.is-flipped) .nx-toggle-button__mobile-check{color:var(--negative-accent)}:host(.is-disabled){opacity:.4;cursor:not-allowed}@media screen and (-ms-high-contrast: active){:host{forced-color-adjust:none;background-color:buttonFace!important;border-color:buttonText!important;color:buttonText!important}:host .nx-toggle-button__label-text,:host .nx-toggle-button__label-hint{color:buttonText!important}:host.is-flipped{background-color:highlight!important;color:highlightText!important}:host.is-flipped .nx-toggle-button__label-text,:host.is-flipped .nx-toggle-button__label-hint{color:highlightText!important}:host.is-disabled{opacity:1;border-color:GrayText!important;color:GrayText!important;background-color:buttonFace!important}:host.is-disabled .nx-toggle-button__label-text,:host.is-disabled .nx-toggle-button__label-hint{color:GrayText!important}}\n"], components: [{ type: i1.NxIconComponent, selector: "nx-icon", inputs: ["name", "outline", "fill", "size", "font"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMobileToggleButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-mobile-toggle-button', changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        '[class.is-disabled]': 'disabled',
                        '[class.is-negative]': 'negative',
                        '[class.is-first]': 'isFirst',
                        '[class.is-last]': 'isLast',
                        '[class.is-flipped]': 'checked',
                    }, template: "<nx-icon class=\"nx-toggle-button__mobile-check\" name=\"check\" aria-hidden=\"true\"></nx-icon>\n<!-- If there is no label defined, use the circleText instead -->\n<span class=\"nx-toggle-button__label-text\"><ng-template *ngIf=\"label; then labelContent; else circleTextContent\"></ng-template></span>\n<span *ngIf=\"hint\" class=\"nx-toggle-button__label-hint\">({{ hint }})</span>\n\n<ng-template #labelContent>{{ label }}</ng-template>\n<ng-template #circleTextContent>{{ circleText }}</ng-template>\n", styles: [":host{display:none;position:relative;transition:background-color .2s ease,border-color .2s ease,color .2s ease;flex-direction:row;border-width:1px 2px;border-color:var(--circle-toggle-border-color);border-style:solid;padding:11px 31px;width:100%;justify-content:center;align-items:center;cursor:pointer}:host:not(.is-flipped):not(.is-disabled):hover{background-color:var(--circle-toggle-hover-background-color);border-color:var(--circle-toggle-hover-border-color)}:host:not(.is-flipped):not(.is-disabled):hover .nx-toggle-button__label-hint,:host:not(.is-flipped):not(.is-disabled):hover .nx-toggle-button__label-text{color:var(--circle-toggle-hover-icon-color)}@media (max-width: 703px){:host-context(.is-responsive){display:flex}}.nx-toggle-button__label-hint{color:var(--circle-toggle-icon-color);font-size:var(--circle-toggle-hint-mobile-font-size);line-height:var(--circle-toggle-hint-mobile-line-height);font-weight:var(--circle-toggle-hint-mobile-font-weight);letter-spacing:var(--circle-toggle-hint-mobile-letter-spacing)}.nx-toggle-button__label-text{color:var(--circle-toggle-icon-color);font-size:var(--circle-toggle-label-mobile-font-size);line-height:var(--circle-toggle-label-mobile-line-height);font-weight:var(--circle-toggle-label-mobile-font-weight);letter-spacing:var(--circle-toggle-label-mobile-letter-spacing);padding-top:0;padding-right:4px;font-weight:600}:host-context([dir=rtl]) .nx-toggle-button__label-text{padding-right:0;padding-right:initial;padding-left:4px}.nx-toggle-button__mobile-check{font-size:24px;height:24px;display:inline-block;opacity:0;margin-right:8px;color:var(--circle-toggle-checkmark-color)}:host-context([dir=rtl]) .nx-toggle-button__mobile-check{margin-right:0;margin-right:initial;margin-left:8px}:host(.is-first){border-top-width:2px;border-radius:4px 4px 0 0}:host(.is-last){border-bottom-width:2px;border-radius:0 0 4px 4px}:host(.is-flipped){background-color:var(--circle-toggle-selected-background-color)}:host(.is-flipped) .nx-toggle-button__label-hint,:host(.is-flipped) .nx-toggle-button__label-text{color:var(--circle-toggle-selected-icon-color)}:host(.is-flipped) .nx-toggle-button__mobile-check{opacity:1}:host(.is-negative){border-color:var(--negative)}:host(.is-negative) .nx-toggle-button__label-hint,:host(.is-negative) .nx-toggle-button__label-text,:host(.is-negative) .nx-toggle-button__mobile-check{color:var(--negative)}:host(.is-negative):not(.is-flipped):not(.is-disabled):hover{background-color:var(--negative-01);border-color:var(--negative-01)}:host(.is-negative):not(.is-flipped):not(.is-disabled):hover .nx-toggle-button__label-hint,:host(.is-negative):not(.is-flipped):not(.is-disabled):hover .nx-toggle-button__label-text{color:var(--negative-accent)}:host(.is-negative.is-flipped){background-color:var(--negative)}:host(.is-negative.is-flipped) .nx-toggle-button__label-hint,:host(.is-negative.is-flipped) .nx-toggle-button__label-text,:host(.is-negative.is-flipped) .nx-toggle-button__mobile-check{color:var(--negative-accent)}:host(.is-disabled){opacity:.4;cursor:not-allowed}@media screen and (-ms-high-contrast: active){:host{forced-color-adjust:none;background-color:buttonFace!important;border-color:buttonText!important;color:buttonText!important}:host .nx-toggle-button__label-text,:host .nx-toggle-button__label-hint{color:buttonText!important}:host.is-flipped{background-color:highlight!important;color:highlightText!important}:host.is-flipped .nx-toggle-button__label-text,:host.is-flipped .nx-toggle-button__label-hint{color:highlightText!important}:host.is-disabled{opacity:1;border-color:GrayText!important;color:GrayText!important;background-color:buttonFace!important}:host.is-disabled .nx-toggle-button__label-text,:host.is-disabled .nx-toggle-button__label-hint{color:GrayText!important}}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { checked: [{
                type: Input
            }], negative: [{
                type: Input
            }], disabled: [{
                type: Input
            }], hint: [{
                type: Input
            }], label: [{
                type: Input
            }], circleText: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9iaWxlLXRvZ2dsZS1idXR0b24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctYXF1aWxhL3NyYy9jaXJjbGUtdG9nZ2xlL21vYmlsZS10b2dnbGUtYnV0dG9uL21vYmlsZS10b2dnbGUtYnV0dG9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWFxdWlsYS9zcmMvY2lyY2xlLXRvZ2dsZS9tb2JpbGUtdG9nZ2xlLWJ1dHRvbi9tb2JpbGUtdG9nZ2xlLWJ1dHRvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQXFCLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFFN0Ysb0JBQW9CO0FBY3BCLE1BQU0sT0FBTyw2QkFBNkI7SUF5QnRDLFlBQW9CLElBQXVCO1FBQXZCLFNBQUksR0FBSixJQUFJLENBQW1CO1FBdkIzQyxZQUFPLEdBQUcsS0FBSyxDQUFDO1FBR2hCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFHakIsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUdqQixTQUFJLEdBQUcsRUFBRSxDQUFDO1FBR1YsVUFBSyxHQUFHLEVBQUUsQ0FBQztRQUdYLGVBQVUsR0FBRyxFQUFFLENBQUM7UUFFaEIsb0JBQW9CO1FBQ3BCLFlBQU8sR0FBRyxLQUFLLENBQUM7UUFFaEIsb0JBQW9CO1FBQ3BCLFdBQU0sR0FBRyxLQUFLLENBQUM7SUFFK0IsQ0FBQztJQUUvQyxvQkFBb0I7SUFDcEIsY0FBYztRQUNWLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVELG9CQUFvQjtJQUNwQixhQUFhO1FBQ1QsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7UUFDbkIsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUM3QixDQUFDO0lBRUQsb0JBQW9CO0lBQ3BCLFlBQVk7UUFDUixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUNyQixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzdCLENBQUM7OzBIQTVDUSw2QkFBNkI7OEdBQTdCLDZCQUE2QixzWENoQjFDLDRmQU9BOzJGRFNhLDZCQUE2QjtrQkFiekMsU0FBUzsrQkFDSSx5QkFBeUIsbUJBR2xCLHVCQUF1QixDQUFDLE1BQU0sUUFDekM7d0JBQ0YscUJBQXFCLEVBQUUsVUFBVTt3QkFDakMscUJBQXFCLEVBQUUsVUFBVTt3QkFDakMsa0JBQWtCLEVBQUUsU0FBUzt3QkFDN0IsaUJBQWlCLEVBQUUsUUFBUTt3QkFDM0Isb0JBQW9CLEVBQUUsU0FBUztxQkFDbEM7d0dBSUQsT0FBTztzQkFETixLQUFLO2dCQUlOLFFBQVE7c0JBRFAsS0FBSztnQkFJTixRQUFRO3NCQURQLEtBQUs7Z0JBSU4sSUFBSTtzQkFESCxLQUFLO2dCQUlOLEtBQUs7c0JBREosS0FBSztnQkFJTixVQUFVO3NCQURULEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqIEBkb2NzLXByaXZhdGUgKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnbngtbW9iaWxlLXRvZ2dsZS1idXR0b24nLFxuICAgIHRlbXBsYXRlVXJsOiAnbW9iaWxlLXRvZ2dsZS1idXR0b24uY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWydtb2JpbGUtdG9nZ2xlLWJ1dHRvbi5jb21wb25lbnQuc2NzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1tjbGFzcy5pcy1kaXNhYmxlZF0nOiAnZGlzYWJsZWQnLFxuICAgICAgICAnW2NsYXNzLmlzLW5lZ2F0aXZlXSc6ICduZWdhdGl2ZScsXG4gICAgICAgICdbY2xhc3MuaXMtZmlyc3RdJzogJ2lzRmlyc3QnLFxuICAgICAgICAnW2NsYXNzLmlzLWxhc3RdJzogJ2lzTGFzdCcsXG4gICAgICAgICdbY2xhc3MuaXMtZmxpcHBlZF0nOiAnY2hlY2tlZCcsXG4gICAgfSxcbn0pXG5leHBvcnQgY2xhc3MgTnhNb2JpbGVUb2dnbGVCdXR0b25Db21wb25lbnQge1xuICAgIEBJbnB1dCgpXG4gICAgY2hlY2tlZCA9IGZhbHNlO1xuXG4gICAgQElucHV0KClcbiAgICBuZWdhdGl2ZSA9IGZhbHNlO1xuXG4gICAgQElucHV0KClcbiAgICBkaXNhYmxlZCA9IGZhbHNlO1xuXG4gICAgQElucHV0KClcbiAgICBoaW50ID0gJyc7XG5cbiAgICBASW5wdXQoKVxuICAgIGxhYmVsID0gJyc7XG5cbiAgICBASW5wdXQoKVxuICAgIGNpcmNsZVRleHQgPSAnJztcblxuICAgIC8qKiBAZG9jcy1wcml2YXRlICovXG4gICAgaXNGaXJzdCA9IGZhbHNlO1xuXG4gICAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgICBpc0xhc3QgPSBmYWxzZTtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX2NkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHt9XG5cbiAgICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICAgIHNldEZpcnN0QnV0dG9uKCkge1xuICAgICAgICB0aGlzLmlzRmlyc3QgPSB0cnVlO1xuICAgICAgICB0aGlzLl9jZHIubWFya0ZvckNoZWNrKCk7XG4gICAgfVxuXG4gICAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgICBzZXRMYXN0QnV0dG9uKCkge1xuICAgICAgICB0aGlzLmlzTGFzdCA9IHRydWU7XG4gICAgICAgIHRoaXMuX2Nkci5tYXJrRm9yQ2hlY2soKTtcbiAgICB9XG5cbiAgICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICAgIHJlc2V0Q2xhc3NlcygpIHtcbiAgICAgICAgdGhpcy5pc0ZpcnN0ID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaXNMYXN0ID0gZmFsc2U7XG4gICAgICAgIHRoaXMuX2Nkci5tYXJrRm9yQ2hlY2soKTtcbiAgICB9XG59XG4iLCI8bngtaWNvbiBjbGFzcz1cIm54LXRvZ2dsZS1idXR0b25fX21vYmlsZS1jaGVja1wiIG5hbWU9XCJjaGVja1wiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvbngtaWNvbj5cbjwhLS0gSWYgdGhlcmUgaXMgbm8gbGFiZWwgZGVmaW5lZCwgdXNlIHRoZSBjaXJjbGVUZXh0IGluc3RlYWQgLS0+XG48c3BhbiBjbGFzcz1cIm54LXRvZ2dsZS1idXR0b25fX2xhYmVsLXRleHRcIj48bmctdGVtcGxhdGUgKm5nSWY9XCJsYWJlbDsgdGhlbiBsYWJlbENvbnRlbnQ7IGVsc2UgY2lyY2xlVGV4dENvbnRlbnRcIj48L25nLXRlbXBsYXRlPjwvc3Bhbj5cbjxzcGFuICpuZ0lmPVwiaGludFwiIGNsYXNzPVwibngtdG9nZ2xlLWJ1dHRvbl9fbGFiZWwtaGludFwiPih7eyBoaW50IH19KTwvc3Bhbj5cblxuPG5nLXRlbXBsYXRlICNsYWJlbENvbnRlbnQ+e3sgbGFiZWwgfX08L25nLXRlbXBsYXRlPlxuPG5nLXRlbXBsYXRlICNjaXJjbGVUZXh0Q29udGVudD57eyBjaXJjbGVUZXh0IH19PC9uZy10ZW1wbGF0ZT5cbiJdfQ==