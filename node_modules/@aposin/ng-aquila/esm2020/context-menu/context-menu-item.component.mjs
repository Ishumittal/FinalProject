import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { DOCUMENT } from '@angular/common';
import { ChangeDetectionStrategy, Component, ContentChildren, Inject, Input, Optional, } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/a11y";
import * as i2 from "@aposin/ng-aquila/icon";
import * as i3 from "@angular/common";
/**
 * This directive is intended to be used inside an nx-context-menu tag.
 * It exists mostly to set the role attribute, disabled state and styling.
 */
export class NxContextMenuItemComponent {
    constructor(_elementRef, _document, _cdr, _focusMonitor) {
        this._elementRef = _elementRef;
        this._document = _document;
        this._cdr = _cdr;
        this._focusMonitor = _focusMonitor;
        /** Stream that emits when the context menu item is hovered. */
        this._hovered = new Subject();
        this._disabled = false;
        this._disableCloseOnSelect = false;
        /** Whether the context menu item is highlighted. */
        this._highlighted = false;
        /** Whether the context menu item acts as a trigger for a sub-menu. */
        this._triggersSubmenu = false;
        this._focusMonitor.monitor(this._elementRef);
    }
    /** Whether the context menu item is disabled. */
    set disabled(value) {
        this._disabled = coerceBooleanProperty(value);
        this._cdr.markForCheck();
    }
    get disabled() {
        return this._disabled;
    }
    /** Whether the context menu close on select. */
    set disableCloseOnSelect(value) {
        this._disableCloseOnSelect = coerceBooleanProperty(value);
        this._cdr.markForCheck();
    }
    get disableCloseOnSelect() {
        return this._disableCloseOnSelect;
    }
    /** Focuses this context menu item. */
    focus(origin) {
        if (origin) {
            this._focusMonitor.focusVia(this._getHostElement(), origin);
        }
        else {
            this._getHostElement().focus();
        }
    }
    ngOnDestroy() {
        this._hovered.complete();
        this._focusMonitor.stopMonitoring(this._elementRef);
    }
    /** Used to set the `tabindex`. */
    _getTabIndex() {
        return this.disabled ? '-1' : '0';
    }
    /** Returns the host DOM element. */
    _getHostElement() {
        return this._elementRef.nativeElement;
    }
    /** Prevents the default element actions if it is disabled. */
    _checkDisabled(event) {
        if (this.disableCloseOnSelect) {
            event.stopPropagation();
        }
        if (this.disabled) {
            event.preventDefault();
            event.stopPropagation();
        }
    }
    /** Emits to the hover stream. */
    _handleMouseEnter() {
        this._hovered.next(this);
    }
    /** Gets the label to be used when determining whether the option should be focused. */
    getLabel() {
        const element = this._elementRef.nativeElement.childNodes[0];
        const textNodeType = this._document ? this._document.TEXT_NODE : 3;
        let output = '';
        if (element.childNodes) {
            const length = element.childNodes.length;
            // Go through all the top-level text nodes and extract their text.
            // We skip anything that's not a text node to prevent the text from
            // being thrown off by something like an icon.
            for (let i = 0; i < length; i++) {
                if (element.childNodes[i].nodeType === textNodeType) {
                    output += element.childNodes[i].textContent;
                }
            }
        }
        return output.trim();
    }
}
NxContextMenuItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxContextMenuItemComponent, deps: [{ token: i0.ElementRef }, { token: DOCUMENT, optional: true }, { token: i0.ChangeDetectorRef }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });
NxContextMenuItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxContextMenuItemComponent, selector: "[nxContextMenuItem]", inputs: { disabled: "disabled", disableCloseOnSelect: "disableCloseOnSelect" }, host: { attributes: { "role": "menuitem" }, listeners: { "mouseenter": "_handleMouseEnter()", "click": "_checkDisabled($event)" }, properties: { "class.is-highlighted": "_highlighted", "attr.tabindex": "_getTabIndex()", "attr.aria-disabled": "disabled.toString()", "attr.disabled": "disabled || null" }, classAttribute: "nx-context-menu-item" }, exportAs: ["nxContextMenuItem"], ngImport: i0, template: `
        <div class="nx-context-menu-item__content-wrapper" [class.has-submenu]="_triggersSubmenu">
            <ng-content></ng-content>
            <nx-icon *ngIf="_triggersSubmenu" class="nx-context-menu-item__expand" name="chevron-right-small"> </nx-icon>
        </div>
    `, isInline: true, styles: [":host{font-size:var(--context-menu-font-size);line-height:var(--context-menu-line-height);font-weight:var(--context-menu-font-weight);letter-spacing:var(--context-menu-letter-spacing);display:flex;align-items:center;cursor:pointer;text-align:left;width:100%;-webkit-appearance:none;appearance:none;border:none;outline:none;background:transparent;padding:8px 32px;color:var(--context-menu-item-text-color)}[dir=rtl] :host{padding:8px 32px}@media screen and (-ms-high-contrast: active){:host{-ms-high-contrast-adjust:none;background-color:buttonFace;color:buttonText}}:host:not(:disabled):hover,:host:not(:disabled):active,:host:not(:disabled).is-highlighted{color:var(--context-menu-item-active-color)}@media screen and (-ms-high-contrast: active){:host:not(:disabled):hover,:host:not(:disabled):active,:host:not(:disabled).is-highlighted{background-color:highlight;color:highlightText}}:host:disabled{cursor:not-allowed;color:var(--context-menu-item-disabled-color)}@media screen and (-ms-high-contrast: active){:host:disabled{color:GrayText}}:host::-moz-focus-inner{border:0}:host .nx-context-menu-item__content-wrapper{display:flex;align-items:center}:host .nx-context-menu-item__content-wrapper.has-submenu{width:100%}:host .nx-context-menu-item__content-wrapper ::ng-deep>nx-icon:not(.nx-context-menu-item__expand){margin-right:8px;font-size:var(--context-menu-item-icon-size)}[dir=rtl] :host .nx-context-menu-item__content-wrapper ::ng-deep>nx-icon:not(.nx-context-menu-item__expand){margin-right:0;margin-right:initial;margin-left:8px}:host .nx-context-menu-item__expand{font-size:var(--context-menu-item-expand-icon-size);padding-left:8px;margin-left:auto;margin-right:0;width:1em}[dir=rtl] :host .nx-context-menu-item__expand{margin-right:auto;margin-left:0;transform:rotate(180deg)}:host.cdk-keyboard-focused:focus .nx-context-menu-item__content-wrapper{border-radius:4px;outline:0;box-shadow:var(--focus-box-shadow)}@media screen and (-ms-high-contrast: active),(forced-colors: active){:host.cdk-keyboard-focused:focus .nx-context-menu-item__content-wrapper{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}\n"], components: [{ type: i2.NxIconComponent, selector: "nx-icon", inputs: ["name", "outline", "fill", "size", "font"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxContextMenuItemComponent, decorators: [{
            type: Component,
            args: [{ selector: '[nxContextMenuItem]', exportAs: 'nxContextMenuItem', host: {
                        class: 'nx-context-menu-item',
                        role: 'menuitem',
                        '[class.is-highlighted]': '_highlighted',
                        '[attr.tabindex]': '_getTabIndex()',
                        '[attr.aria-disabled]': 'disabled.toString()',
                        '[attr.disabled]': 'disabled || null',
                        '(mouseenter)': '_handleMouseEnter()',
                        '(click)': '_checkDisabled($event)',
                    }, changeDetection: ChangeDetectionStrategy.OnPush, template: `
        <div class="nx-context-menu-item__content-wrapper" [class.has-submenu]="_triggersSubmenu">
            <ng-content></ng-content>
            <nx-icon *ngIf="_triggersSubmenu" class="nx-context-menu-item__expand" name="chevron-right-small"> </nx-icon>
        </div>
    `, styles: [":host{font-size:var(--context-menu-font-size);line-height:var(--context-menu-line-height);font-weight:var(--context-menu-font-weight);letter-spacing:var(--context-menu-letter-spacing);display:flex;align-items:center;cursor:pointer;text-align:left;width:100%;-webkit-appearance:none;appearance:none;border:none;outline:none;background:transparent;padding:8px 32px;color:var(--context-menu-item-text-color)}[dir=rtl] :host{padding:8px 32px}@media screen and (-ms-high-contrast: active){:host{-ms-high-contrast-adjust:none;background-color:buttonFace;color:buttonText}}:host:not(:disabled):hover,:host:not(:disabled):active,:host:not(:disabled).is-highlighted{color:var(--context-menu-item-active-color)}@media screen and (-ms-high-contrast: active){:host:not(:disabled):hover,:host:not(:disabled):active,:host:not(:disabled).is-highlighted{background-color:highlight;color:highlightText}}:host:disabled{cursor:not-allowed;color:var(--context-menu-item-disabled-color)}@media screen and (-ms-high-contrast: active){:host:disabled{color:GrayText}}:host::-moz-focus-inner{border:0}:host .nx-context-menu-item__content-wrapper{display:flex;align-items:center}:host .nx-context-menu-item__content-wrapper.has-submenu{width:100%}:host .nx-context-menu-item__content-wrapper ::ng-deep>nx-icon:not(.nx-context-menu-item__expand){margin-right:8px;font-size:var(--context-menu-item-icon-size)}[dir=rtl] :host .nx-context-menu-item__content-wrapper ::ng-deep>nx-icon:not(.nx-context-menu-item__expand){margin-right:0;margin-right:initial;margin-left:8px}:host .nx-context-menu-item__expand{font-size:var(--context-menu-item-expand-icon-size);padding-left:8px;margin-left:auto;margin-right:0;width:1em}[dir=rtl] :host .nx-context-menu-item__expand{margin-right:auto;margin-left:0;transform:rotate(180deg)}:host.cdk-keyboard-focused:focus .nx-context-menu-item__content-wrapper{border-radius:4px;outline:0;box-shadow:var(--focus-box-shadow)}@media screen and (-ms-high-contrast: active),(forced-colors: active){:host.cdk-keyboard-focused:focus .nx-context-menu-item__content-wrapper{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: Document, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }]; }, propDecorators: { disabled: [{
                type: Input
            }], disableCloseOnSelect: [{
                type: Input
            }] } });
/**
 * This directive is need when [nx-context-menu-item] is not directly under [nx-context-menu].
 *
 * <nx-context-menu>
 *      <something else> // blocker
 *        <nx-context-menu-item-wrap> // come to rescue
 *          <nx-context-menu-item/>
 *          <nx-context-menu-item/>
 *        </nx-context-menu-item-wrap>
 *      </something else>
 * </nx-context-menu>
 */
export class NxContextMenuItemWrapComponent {
}
NxContextMenuItemWrapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxContextMenuItemWrapComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
NxContextMenuItemWrapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxContextMenuItemWrapComponent, selector: "nx-context-menu-item-wrap", queries: [{ propertyName: "_items", predicate: NxContextMenuItemComponent }], ngImport: i0, template: `<ng-content></ng-content> `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxContextMenuItemWrapComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'nx-context-menu-item-wrap',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: `<ng-content></ng-content> `,
                }]
        }], propDecorators: { _items: [{
                type: ContentChildren,
                args: [NxContextMenuItemComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,