import { animate, group, query, state, style, transition, trigger } from '@angular/animations';
/**
 * Animations used by the NxContextMenuComponent.
 * @docs-private
 */
export const nxContextMenuAnimations = {
    /**
     * This animation controls the context menu panel's entry and exit from the page.
     * When the context menu panel is added to the DOM, it scales in and fades in its border.
     * When the context menu panel is removed from the DOM, it simply fades out.
     */
    transformContextMenu: trigger('transformContextMenu', [
        state('void', style({
            opacity: 0,
            transform: 'scale(0.8)',
        })),
        transition('void => enter', group([
            query('.nx-context-menu__content', animate('100ms linear', style({
                opacity: 1,
            }))),
            animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'scale(1)' })),
        ])),
        transition('* => void', animate('100ms linear', style({ opacity: 0 }))),
    ]),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGV4dC1tZW51LWFuaW1hdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1hcXVpbGEvc3JjL2NvbnRleHQtbWVudS9jb250ZXh0LW1lbnUtYW5pbWF0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUE0QixLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXpIOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUVoQztJQUNBOzs7O09BSUc7SUFDSCxvQkFBb0IsRUFBRSxPQUFPLENBQUMsc0JBQXNCLEVBQUU7UUFDbEQsS0FBSyxDQUNELE1BQU0sRUFDTixLQUFLLENBQUM7WUFDRixPQUFPLEVBQUUsQ0FBQztZQUNWLFNBQVMsRUFBRSxZQUFZO1NBQzFCLENBQUMsQ0FDTDtRQUNELFVBQVUsQ0FDTixlQUFlLEVBQ2YsS0FBSyxDQUFDO1lBQ0YsS0FBSyxDQUNELDJCQUEyQixFQUMzQixPQUFPLENBQ0gsY0FBYyxFQUNkLEtBQUssQ0FBQztnQkFDRixPQUFPLEVBQUUsQ0FBQzthQUNiLENBQUMsQ0FDTCxDQUNKO1lBQ0QsT0FBTyxDQUFDLGtDQUFrQyxFQUFFLEtBQUssQ0FBQyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDO1NBQ2hGLENBQUMsQ0FDTDtRQUNELFVBQVUsQ0FBQyxXQUFXLEVBQUUsT0FBTyxDQUFDLGNBQWMsRUFBRSxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0tBQzFFLENBQUM7Q0FDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYW5pbWF0ZSwgQW5pbWF0aW9uVHJpZ2dlck1ldGFkYXRhLCBncm91cCwgcXVlcnksIHN0YXRlLCBzdHlsZSwgdHJhbnNpdGlvbiwgdHJpZ2dlciB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuXG4vKipcbiAqIEFuaW1hdGlvbnMgdXNlZCBieSB0aGUgTnhDb250ZXh0TWVudUNvbXBvbmVudC5cbiAqIEBkb2NzLXByaXZhdGVcbiAqL1xuZXhwb3J0IGNvbnN0IG54Q29udGV4dE1lbnVBbmltYXRpb25zOiB7XG4gICAgcmVhZG9ubHkgdHJhbnNmb3JtQ29udGV4dE1lbnU6IEFuaW1hdGlvblRyaWdnZXJNZXRhZGF0YTtcbn0gPSB7XG4gICAgLyoqXG4gICAgICogVGhpcyBhbmltYXRpb24gY29udHJvbHMgdGhlIGNvbnRleHQgbWVudSBwYW5lbCdzIGVudHJ5IGFuZCBleGl0IGZyb20gdGhlIHBhZ2UuXG4gICAgICogV2hlbiB0aGUgY29udGV4dCBtZW51IHBhbmVsIGlzIGFkZGVkIHRvIHRoZSBET00sIGl0IHNjYWxlcyBpbiBhbmQgZmFkZXMgaW4gaXRzIGJvcmRlci5cbiAgICAgKiBXaGVuIHRoZSBjb250ZXh0IG1lbnUgcGFuZWwgaXMgcmVtb3ZlZCBmcm9tIHRoZSBET00sIGl0IHNpbXBseSBmYWRlcyBvdXQuXG4gICAgICovXG4gICAgdHJhbnNmb3JtQ29udGV4dE1lbnU6IHRyaWdnZXIoJ3RyYW5zZm9ybUNvbnRleHRNZW51JywgW1xuICAgICAgICBzdGF0ZShcbiAgICAgICAgICAgICd2b2lkJyxcbiAgICAgICAgICAgIHN0eWxlKHtcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogJ3NjYWxlKDAuOCknLFxuICAgICAgICAgICAgfSksXG4gICAgICAgICksXG4gICAgICAgIHRyYW5zaXRpb24oXG4gICAgICAgICAgICAndm9pZCA9PiBlbnRlcicsXG4gICAgICAgICAgICBncm91cChbXG4gICAgICAgICAgICAgICAgcXVlcnkoXG4gICAgICAgICAgICAgICAgICAgICcubngtY29udGV4dC1tZW51X19jb250ZW50JyxcbiAgICAgICAgICAgICAgICAgICAgYW5pbWF0ZShcbiAgICAgICAgICAgICAgICAgICAgICAgICcxMDBtcyBsaW5lYXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgIGFuaW1hdGUoJzEyMG1zIGN1YmljLWJlemllcigwLCAwLCAwLjIsIDEpJywgc3R5bGUoeyB0cmFuc2Zvcm06ICdzY2FsZSgxKScgfSkpLFxuICAgICAgICAgICAgXSksXG4gICAgICAgICksXG4gICAgICAgIHRyYW5zaXRpb24oJyogPT4gdm9pZCcsIGFuaW1hdGUoJzEwMG1zIGxpbmVhcicsIHN0eWxlKHsgb3BhY2l0eTogMCB9KSkpLFxuICAgIF0pLFxufTtcbiJdfQ==