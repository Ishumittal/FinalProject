import { Component, Input } from '@angular/core';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../comparison-table-base";
import * as i2 from "@angular/cdk/a11y";
import * as i3 from "@angular/common";
/**
 * @docs-private
 *
 * Component that is only used internally for displaying a `nxComparisonTableRow`
 * (header, content and footer rows) in desktop and tablet view.
 */
export class NxComparisonTableFlexRow {
    constructor(_table, _elementRef, _focusMonitor) {
        this._table = _table;
        this._elementRef = _elementRef;
        this._focusMonitor = _focusMonitor;
        this._destroyed = new Subject();
        this._focusMonitor
            .monitor(this._elementRef, true)
            .pipe(takeUntil(this._destroyed))
            .subscribe(origin => {
            if (this.row.type !== 'header' && origin === 'keyboard') {
                this._table._scrollElementIntoView(this._elementRef);
            }
        });
    }
    ngOnDestroy() {
        this._destroyed.next();
        this._destroyed.complete();
        this._focusMonitor.stopMonitoring(this._elementRef);
    }
    get elementRef() {
        return this._elementRef;
    }
}
NxComparisonTableFlexRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxComparisonTableFlexRow, deps: [{ token: i1.NxComparisonTableBase }, { token: i0.ElementRef }, { token: i2.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });
NxComparisonTableFlexRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxComparisonTableFlexRow, selector: "nx-comparison-table-flex-row", inputs: { row: "row" }, host: { properties: { "class.is-header-row": "row.type === \"header\"", "class.is-sticky-row": "row.type === \"header\" && row.mayStick", "class.is-footer-row": "row.type === \"footer\"", "class.is-content-row": "row.type === \"content\"", "class.has-intersection": "row.intersectionCell" } }, ngImport: i0, template: "<!-- own row for description cell for tablet view -->\n<div *ngIf=\"row.type === 'content' && row.descriptionCell && _table.viewType === 'tablet'\" class=\"nx-comparison-table__row\" role=\"row\">\n    <ng-container *ngTemplateOutlet=\"row.descriptionCell._content\"></ng-container>\n</div>\n\n<!-- special row for the popular cell -->\n<div *ngIf=\"row.popularCell && (_table.viewType === 'desktop' || _table.viewType === 'tablet')\" class=\"nx-comparison-table__row\" role=\"row\">\n    <!-- this placeholder cell is removed on tablet, as the row header disappears there  -->\n    <div *ngIf=\"!(_table.viewType === 'tablet')\" role=\"cell\" class=\"nx-comparison-table__placeholder-cell is-popular-placeholder-cell\">\n        <div class=\"nx-comparison-table__cell-content\"></div>\n    </div>\n\n    <div\n        *ngFor=\"let emptyCellBeforePopular of [].constructor(row.popularCell.forColumn - 1); let i = index\"\n        role=\"cell\"\n        class=\"nx-comparison-table__placeholder-cell is-popular-placeholder-cell\"\n        [class.is-hidden]=\"_table._hiddenIndexes.indexOf(i) !== -1\"\n    >\n        <div class=\"nx-comparison-table__cell-content\"></div>\n    </div>\n\n    <!-- popular cell content -->\n    <ng-container *ngTemplateOutlet=\"row.popularCell._content\"></ng-container>\n\n    <div\n        *ngFor=\"let emptyCellAfterPopular of [].constructor(row.cells.length - row.popularCell.forColumn); let i = index\"\n        role=\"cell\"\n        class=\"nx-comparison-table__placeholder-cell is-popular-placeholder-cell\"\n        [class.is-hidden]=\"_table._hiddenIndexes.indexOf(row.popularCell.forColumn + i) !== -1\"\n    >\n        <div class=\"nx-comparison-table__cell-content\"></div>\n    </div>\n</div>\n\n<div class=\"nx-comparison-table__row\" role=\"row\">\n    <!-- header row -->\n    <ng-container *ngIf=\"row.type === 'header'\">\n        <div *ngIf=\"_table.viewType === 'desktop'\" role=\"columnheader\" class=\"nx-comparison-table__placeholder-cell\">\n            <div class=\"nx-comparison-table__cell-content\"></div>\n        </div>\n        <ng-container *ngFor=\"let headerCell of row.cells; let i = index\">\n            <ng-container *ngTemplateOutlet=\"headerCell._content\"></ng-container>\n        </ng-container>\n    </ng-container>\n\n    <!-- content row -->\n    <!-- description cell only displayed here if desktop view -->\n    <ng-container *ngIf=\"row.type === 'content'\">\n        <ng-container *ngIf=\"row.descriptionCell && _table.viewType === 'desktop'\">\n            <ng-container *ngTemplateOutlet=\"row.descriptionCell._content\"></ng-container>\n        </ng-container>\n\n        <ng-container *ngFor=\"let cell of row.cells\">\n            <ng-container *ngTemplateOutlet=\"cell._content\"></ng-container>\n        </ng-container>\n\n        <ng-container *ngIf=\"row.intersectionCell\">\n            <ng-container *ngTemplateOutlet=\"row.intersectionCell._content\"></ng-container>\n        </ng-container>\n    </ng-container>\n\n    <!-- footer row -->\n    <ng-container *ngIf=\"row.type === 'footer'\">\n        <div *ngIf=\"_table.viewType === 'desktop'\" class=\"nx-comparison-table__placeholder-cell\" role=\"cell\">\n            <div class=\"nx-comparison-table__cell-content\"></div>\n        </div>\n        <ng-container *ngFor=\"let footerCell of row.cells\">\n            <ng-container *ngTemplateOutlet=\"footerCell._content\"></ng-container>\n        </ng-container>\n    </ng-container>\n</div>\n", styles: [":host{display:block}:host.is-sticky-row{position:-webkit-sticky;position:sticky;top:0;z-index:1}.is-hidden{display:none}\n"], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxComparisonTableFlexRow, decorators: [{
            type: Component,
            args: [{ selector: 'nx-comparison-table-flex-row', host: {
                        '[class.is-header-row]': 'row.type === "header"',
                        '[class.is-sticky-row]': 'row.type === "header" && row.mayStick',
                        '[class.is-footer-row]': 'row.type === "footer"',
                        '[class.is-content-row]': 'row.type === "content"',
                        '[class.has-intersection]': 'row.intersectionCell',
                    }, template: "<!-- own row for description cell for tablet view -->\n<div *ngIf=\"row.type === 'content' && row.descriptionCell && _table.viewType === 'tablet'\" class=\"nx-comparison-table__row\" role=\"row\">\n    <ng-container *ngTemplateOutlet=\"row.descriptionCell._content\"></ng-container>\n</div>\n\n<!-- special row for the popular cell -->\n<div *ngIf=\"row.popularCell && (_table.viewType === 'desktop' || _table.viewType === 'tablet')\" class=\"nx-comparison-table__row\" role=\"row\">\n    <!-- this placeholder cell is removed on tablet, as the row header disappears there  -->\n    <div *ngIf=\"!(_table.viewType === 'tablet')\" role=\"cell\" class=\"nx-comparison-table__placeholder-cell is-popular-placeholder-cell\">\n        <div class=\"nx-comparison-table__cell-content\"></div>\n    </div>\n\n    <div\n        *ngFor=\"let emptyCellBeforePopular of [].constructor(row.popularCell.forColumn - 1); let i = index\"\n        role=\"cell\"\n        class=\"nx-comparison-table__placeholder-cell is-popular-placeholder-cell\"\n        [class.is-hidden]=\"_table._hiddenIndexes.indexOf(i) !== -1\"\n    >\n        <div class=\"nx-comparison-table__cell-content\"></div>\n    </div>\n\n    <!-- popular cell content -->\n    <ng-container *ngTemplateOutlet=\"row.popularCell._content\"></ng-container>\n\n    <div\n        *ngFor=\"let emptyCellAfterPopular of [].constructor(row.cells.length - row.popularCell.forColumn); let i = index\"\n        role=\"cell\"\n        class=\"nx-comparison-table__placeholder-cell is-popular-placeholder-cell\"\n        [class.is-hidden]=\"_table._hiddenIndexes.indexOf(row.popularCell.forColumn + i) !== -1\"\n    >\n        <div class=\"nx-comparison-table__cell-content\"></div>\n    </div>\n</div>\n\n<div class=\"nx-comparison-table__row\" role=\"row\">\n    <!-- header row -->\n    <ng-container *ngIf=\"row.type === 'header'\">\n        <div *ngIf=\"_table.viewType === 'desktop'\" role=\"columnheader\" class=\"nx-comparison-table__placeholder-cell\">\n            <div class=\"nx-comparison-table__cell-content\"></div>\n        </div>\n        <ng-container *ngFor=\"let headerCell of row.cells; let i = index\">\n            <ng-container *ngTemplateOutlet=\"headerCell._content\"></ng-container>\n        </ng-container>\n    </ng-container>\n\n    <!-- content row -->\n    <!-- description cell only displayed here if desktop view -->\n    <ng-container *ngIf=\"row.type === 'content'\">\n        <ng-container *ngIf=\"row.descriptionCell && _table.viewType === 'desktop'\">\n            <ng-container *ngTemplateOutlet=\"row.descriptionCell._content\"></ng-container>\n        </ng-container>\n\n        <ng-container *ngFor=\"let cell of row.cells\">\n            <ng-container *ngTemplateOutlet=\"cell._content\"></ng-container>\n        </ng-container>\n\n        <ng-container *ngIf=\"row.intersectionCell\">\n            <ng-container *ngTemplateOutlet=\"row.intersectionCell._content\"></ng-container>\n        </ng-container>\n    </ng-container>\n\n    <!-- footer row -->\n    <ng-container *ngIf=\"row.type === 'footer'\">\n        <div *ngIf=\"_table.viewType === 'desktop'\" class=\"nx-comparison-table__placeholder-cell\" role=\"cell\">\n            <div class=\"nx-comparison-table__cell-content\"></div>\n        </div>\n        <ng-container *ngFor=\"let footerCell of row.cells\">\n            <ng-container *ngTemplateOutlet=\"footerCell._content\"></ng-container>\n        </ng-container>\n    </ng-container>\n</div>\n", styles: [":host{display:block}:host.is-sticky-row{position:-webkit-sticky;position:sticky;top:0;z-index:1}.is-hidden{display:none}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.NxComparisonTableBase }, { type: i0.ElementRef }, { type: i2.FocusMonitor }]; }, propDecorators: { row: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,