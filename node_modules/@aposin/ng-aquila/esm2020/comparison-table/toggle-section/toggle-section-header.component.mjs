import { ENTER, SPACE } from '@angular/cdk/keycodes';
import { isPlatformBrowser } from '@angular/common';
import { Component, Inject, Input, PLATFORM_ID, ViewChild } from '@angular/core';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { NxToggleSectionAnimations } from './toggle-section-animations';
import * as i0 from "@angular/core";
import * as i1 from "../comparison-table-base";
import * as i2 from "./toggle-section-base";
import * as i3 from "@angular/cdk/a11y";
import * as i4 from "@aposin/ng-aquila/icon";
import * as i5 from "@angular/common";
let nextId = 0;
export class NxToggleSectionHeaderComponent {
    constructor(_table, _toggleSection, _focusMonitor, _ngZone, platformId) {
        this._table = _table;
        this._toggleSection = _toggleSection;
        this._focusMonitor = _focusMonitor;
        this._ngZone = _ngZone;
        this._id = `nx-comparison-table-toggle-section-header-${nextId++}`;
        this._destroyed = new Subject();
        if (isPlatformBrowser(platformId)) {
            this._table.viewTypeChange.pipe(takeUntil(this._destroyed)).subscribe(() => {
                this._updateFocusMonitoringTimeout();
            });
        }
    }
    /** Sets the id of the toggle section header. */
    set id(value) {
        if (this._id !== value) {
            this._id = value;
        }
    }
    get id() {
        return this._id;
    }
    ngAfterViewInit() {
        this._updateFocusMonitoringTimeout();
    }
    ngOnDestroy() {
        this._destroyed.next();
        this._destroyed.complete();
        this._focusMonitor.stopMonitoring(this._wrapperElement);
    }
    _updateFocusMonitoringTimeout() {
        this._ngZone.runOutsideAngular(() => 
        // timeout is needed here so that the focus monitor is updated after the view was updated
        setTimeout(() => this._updateFocusMonitoring()));
    }
    _updateFocusMonitoring() {
        if (this._wrapperElementPrevious && !this._wrapperElement) {
            this._focusMonitor.stopMonitoring(this._wrapperElementPrevious);
            this._wrapperElementPrevious = this._wrapperElement;
        }
        if (!this._wrapperElementPrevious && this._wrapperElement) {
            this._focusMonitor
                .monitor(this._wrapperElement)
                .pipe(takeUntil(this._destroyed))
                .subscribe(origin => {
                if (origin === 'keyboard') {
                    this._table._scrollElementIntoView(this._wrapperElement, 8);
                }
            });
            this._wrapperElementPrevious = this._wrapperElement;
        }
    }
    /** Toggles the toggle section. */
    toggle() {
        if (this._table.viewType !== 'mobile') {
            this._toggleSection.toggleExpanded();
        }
    }
    _onKeydown($event) {
        if ($event && ($event.keyCode === ENTER || $event.keyCode === SPACE)) {
            this.toggle();
            // prevent page from scrolling down
            if ($event.keyCode === SPACE) {
                $event.preventDefault();
            }
        }
    }
    _getMobileClipPathInset() {
        if (this._mobileCell) {
            const cellRect = this._mobileCell.nativeElement.getBoundingClientRect();
            return this._table._getMobileClipPathInset(cellRect);
        }
        return '0';
    }
}
NxToggleSectionHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxToggleSectionHeaderComponent, deps: [{ token: i1.NxComparisonTableBase }, { token: i2.NxToggleSectionBase }, { token: i3.FocusMonitor }, { token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });
NxToggleSectionHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxToggleSectionHeaderComponent, selector: "nx-comparison-table-toggle-section-header", inputs: { id: "id" }, viewQueries: [{ propertyName: "_content", first: true, predicate: ["content"], descendants: true, static: true }, { propertyName: "_mobileCell", first: true, predicate: ["mobileCell"], descendants: true }, { propertyName: "_wrapperElement", first: true, predicate: ["wrapper"], descendants: true }], ngImport: i0, template: "<ng-template #content>\n    <ng-container *ngIf=\"_table.viewType === 'desktop' || _table.viewType === 'tablet'\">\n        <div\n            #wrapper\n            class=\"nx-comparison-table-toggle-section__header-wrapper\"\n            role=\"columnheader\"\n            [attr.aria-colspan]=\"_table.viewType === 'desktop' ? _table._getHeaderCells().length + 1 : _table._getHeaderCells().length\"\n            [attr.aria-expanded]=\"_toggleSection.isExpanded\"\n            [attr.id]=\"id\"\n            (click)=\"toggle()\"\n            [attr.tabindex]=\"0\"\n            (keydown)=\"_onKeydown($event)\"\n        >\n            <div class=\"nx-comparison-table-toggle-section__header-content\">\n                <ng-container *ngTemplateOutlet=\"ngContent\"></ng-container>\n                <nx-icon class=\"nx-expansion-panel__chevron\" [@indicatorRotate]=\"_toggleSection.getOpenState()\" name=\"chevron-down\" aria-hidden=\"true\">\n                </nx-icon>\n            </div>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"_table.viewType === 'mobile'\">\n        <th\n            #mobileCell\n            class=\"nx-comparison-table__mobile-toggle-section-header\"\n            scope=\"col\"\n            [attr.colspan]=\"_toggleSection._numberOfRows()\"\n            [attr.id]=\"id\"\n            [ngStyle]=\"{ 'clip-path': 'inset(' + _getMobileClipPathInset() + ')' }\"\n        >\n            <ng-container *ngTemplateOutlet=\"ngContent\"></ng-container>\n        </th>\n    </ng-container>\n</ng-template>\n\n<ng-template #ngContent>\n    <ng-content></ng-content>\n</ng-template>\n", styles: [".nx-comparison-table__mobile-toggle-section-header{font-size:var(--comparison-table-mobile-section-header-font-size);line-height:var(--comparison-table-mobile-section-header-line-height);font-weight:var(--comparison-table-mobile-section-header-font-weight);letter-spacing:var(--comparison-table-mobile-section-header-letter-spacing);background-color:var(--comparison-table-toggle-section-header-background-color);padding:8px 16px;border-top:1px solid var(--comparison-table-border-color)}.nx-comparison-table-toggle-section__header-wrapper{display:block;width:100%;cursor:pointer}.nx-comparison-table-toggle-section__header-wrapper:focus{outline:0}.nx-comparison-table-toggle-section__header-content{font-size:var(--comparison-table-toggle-section-header-font-size);line-height:var(--comparison-table-toggle-section-header-line-height);font-weight:var(--comparison-table-toggle-section-header-font-weight);letter-spacing:var(--comparison-table-toggle-section-header-letter-spacing);border:1px solid var(--comparison-table-border-color);background-color:var(--comparison-table-toggle-section-header-background-color);display:flex;justify-content:space-between;align-items:center}@media screen and (-ms-high-contrast: active){.nx-comparison-table-toggle-section__header-content{border-color:buttonText;background-color:buttonFace;color:buttonText}}.nx-expansion-panel__chevron{pointer-events:none;font-size:var(--comparison-table-toggle-section-chevron-size);color:var(--comparison-table-toggle-section-chevron-color)}\n"], components: [{ type: i4.NxIconComponent, selector: "nx-icon", inputs: ["name", "outline", "fill", "size", "font"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i5.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }], animations: [NxToggleSectionAnimations.indicatorRotate] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxToggleSectionHeaderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-comparison-table-toggle-section-header', animations: [NxToggleSectionAnimations.indicatorRotate], template: "<ng-template #content>\n    <ng-container *ngIf=\"_table.viewType === 'desktop' || _table.viewType === 'tablet'\">\n        <div\n            #wrapper\n            class=\"nx-comparison-table-toggle-section__header-wrapper\"\n            role=\"columnheader\"\n            [attr.aria-colspan]=\"_table.viewType === 'desktop' ? _table._getHeaderCells().length + 1 : _table._getHeaderCells().length\"\n            [attr.aria-expanded]=\"_toggleSection.isExpanded\"\n            [attr.id]=\"id\"\n            (click)=\"toggle()\"\n            [attr.tabindex]=\"0\"\n            (keydown)=\"_onKeydown($event)\"\n        >\n            <div class=\"nx-comparison-table-toggle-section__header-content\">\n                <ng-container *ngTemplateOutlet=\"ngContent\"></ng-container>\n                <nx-icon class=\"nx-expansion-panel__chevron\" [@indicatorRotate]=\"_toggleSection.getOpenState()\" name=\"chevron-down\" aria-hidden=\"true\">\n                </nx-icon>\n            </div>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"_table.viewType === 'mobile'\">\n        <th\n            #mobileCell\n            class=\"nx-comparison-table__mobile-toggle-section-header\"\n            scope=\"col\"\n            [attr.colspan]=\"_toggleSection._numberOfRows()\"\n            [attr.id]=\"id\"\n            [ngStyle]=\"{ 'clip-path': 'inset(' + _getMobileClipPathInset() + ')' }\"\n        >\n            <ng-container *ngTemplateOutlet=\"ngContent\"></ng-container>\n        </th>\n    </ng-container>\n</ng-template>\n\n<ng-template #ngContent>\n    <ng-content></ng-content>\n</ng-template>\n", styles: [".nx-comparison-table__mobile-toggle-section-header{font-size:var(--comparison-table-mobile-section-header-font-size);line-height:var(--comparison-table-mobile-section-header-line-height);font-weight:var(--comparison-table-mobile-section-header-font-weight);letter-spacing:var(--comparison-table-mobile-section-header-letter-spacing);background-color:var(--comparison-table-toggle-section-header-background-color);padding:8px 16px;border-top:1px solid var(--comparison-table-border-color)}.nx-comparison-table-toggle-section__header-wrapper{display:block;width:100%;cursor:pointer}.nx-comparison-table-toggle-section__header-wrapper:focus{outline:0}.nx-comparison-table-toggle-section__header-content{font-size:var(--comparison-table-toggle-section-header-font-size);line-height:var(--comparison-table-toggle-section-header-line-height);font-weight:var(--comparison-table-toggle-section-header-font-weight);letter-spacing:var(--comparison-table-toggle-section-header-letter-spacing);border:1px solid var(--comparison-table-border-color);background-color:var(--comparison-table-toggle-section-header-background-color);display:flex;justify-content:space-between;align-items:center}@media screen and (-ms-high-contrast: active){.nx-comparison-table-toggle-section__header-content{border-color:buttonText;background-color:buttonFace;color:buttonText}}.nx-expansion-panel__chevron{pointer-events:none;font-size:var(--comparison-table-toggle-section-chevron-size);color:var(--comparison-table-toggle-section-chevron-color)}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.NxComparisonTableBase }, { type: i2.NxToggleSectionBase }, { type: i3.FocusMonitor }, { type: i0.NgZone }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [PLATFORM_ID]
                }] }]; }, propDecorators: { _content: [{
                type: ViewChild,
                args: ['content', { static: true }]
            }], _mobileCell: [{
                type: ViewChild,
                args: ['mobileCell']
            }], _wrapperElement: [{
                type: ViewChild,
                args: ['wrapper']
            }], id: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,