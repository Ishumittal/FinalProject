import { Component, Input, ViewChild } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../comparison-table-base";
import * as i2 from "../comparison-table-row-base";
import * as i3 from "@angular/common";
let nextId = 0;
export class NxComparisonTableDescriptionCell {
    constructor(_table, _row) {
        this._table = _table;
        this._row = _row;
        this._id = `nx-comparison-table-description-cell-${nextId++}`;
        if (this._row.type === 'header' || this._row.type === 'footer') {
            console.warn('`nxComparisonTableRow` should not contain a `nx-comparison-table-description-cell` for type === "header" or type === "footer".');
        }
    }
    /** Sets the Id of the description cell. */
    set id(value) {
        if (this._id !== value) {
            this._id = value;
        }
    }
    get id() {
        return this._id;
    }
    _getMobileClipPathInset() {
        if (this._mobileCell) {
            const cellRect = this._mobileCell.nativeElement.getBoundingClientRect();
            return this._table._getMobileClipPathInset(cellRect);
        }
        return '0';
    }
}
NxComparisonTableDescriptionCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxComparisonTableDescriptionCell, deps: [{ token: i1.NxComparisonTableBase }, { token: i2.NxComparisonTableRowBase }], target: i0.ɵɵFactoryTarget.Component });
NxComparisonTableDescriptionCell.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxComparisonTableDescriptionCell, selector: "nx-comparison-table-description-cell", inputs: { id: "id" }, viewQueries: [{ propertyName: "_content", first: true, predicate: ["content"], descendants: true, static: true }, { propertyName: "_mobileCell", first: true, predicate: ["mobileCell"], descendants: true }], ngImport: i0, template: "<ng-template #content>\n    <ng-container *ngIf=\"_table.viewType === 'desktop' || _table.viewType === 'tablet'\">\n        <div\n            class=\"nx-comparison-table__description-cell\"\n            [attr.role]=\"_table.viewType === 'desktop' ? 'rowheader' : 'columnheader'\"\n            [attr.aria-colspan]=\"_table.viewType === 'tablet' ? _table._infoColumnCount() : '1'\"\n            [attr.id]=\"id\"\n        >\n            <div class=\"nx-comparison-table__cell-content\">\n                <ng-container *ngTemplateOutlet=\"ngContent\"></ng-container>\n            </div>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"_table.viewType === 'mobile'\">\n        <th\n            #mobileCell\n            class=\"nx-comparison-table__description-cell\"\n            [class.is-intersection-column]=\"_row._isIntersectionRow()\"\n            scope=\"col\"\n            [attr.id]=\"id\"\n            [ngStyle]=\"{ 'clip-path': 'inset(' + _getMobileClipPathInset() + ')' }\"\n        >\n            <ng-container *ngTemplateOutlet=\"ngContent\"></ng-container>\n        </th>\n    </ng-container>\n</ng-template>\n\n<ng-template #ngContent>\n    <ng-content></ng-content>\n</ng-template>\n", directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i3.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxComparisonTableDescriptionCell, decorators: [{
            type: Component,
            args: [{ selector: 'nx-comparison-table-description-cell', template: "<ng-template #content>\n    <ng-container *ngIf=\"_table.viewType === 'desktop' || _table.viewType === 'tablet'\">\n        <div\n            class=\"nx-comparison-table__description-cell\"\n            [attr.role]=\"_table.viewType === 'desktop' ? 'rowheader' : 'columnheader'\"\n            [attr.aria-colspan]=\"_table.viewType === 'tablet' ? _table._infoColumnCount() : '1'\"\n            [attr.id]=\"id\"\n        >\n            <div class=\"nx-comparison-table__cell-content\">\n                <ng-container *ngTemplateOutlet=\"ngContent\"></ng-container>\n            </div>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"_table.viewType === 'mobile'\">\n        <th\n            #mobileCell\n            class=\"nx-comparison-table__description-cell\"\n            [class.is-intersection-column]=\"_row._isIntersectionRow()\"\n            scope=\"col\"\n            [attr.id]=\"id\"\n            [ngStyle]=\"{ 'clip-path': 'inset(' + _getMobileClipPathInset() + ')' }\"\n        >\n            <ng-container *ngTemplateOutlet=\"ngContent\"></ng-container>\n        </th>\n    </ng-container>\n</ng-template>\n\n<ng-template #ngContent>\n    <ng-content></ng-content>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.NxComparisonTableBase }, { type: i2.NxComparisonTableRowBase }]; }, propDecorators: { _content: [{
                type: ViewChild,
                args: ['content', { static: true }]
            }], _mobileCell: [{
                type: ViewChild,
                args: ['mobileCell']
            }], id: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVzY3JpcHRpb24tY2VsbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1hcXVpbGEvc3JjL2NvbXBhcmlzb24tdGFibGUvZGVzY3JpcHRpb24tY2VsbC9kZXNjcmlwdGlvbi1jZWxsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWFxdWlsYS9zcmMvY29tcGFyaXNvbi10YWJsZS9kZXNjcmlwdGlvbi1jZWxsL2Rlc2NyaXB0aW9uLWNlbGwuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBYyxLQUFLLEVBQWUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7OztBQUtyRixJQUFJLE1BQU0sR0FBRyxDQUFDLENBQUM7QUFNZixNQUFNLE9BQU8sZ0NBQWdDO0lBaUJ6QyxZQUFtQixNQUE2QixFQUFTLElBQThCO1FBQXBFLFdBQU0sR0FBTixNQUFNLENBQXVCO1FBQVMsU0FBSSxHQUFKLElBQUksQ0FBMEI7UUFiL0UsUUFBRyxHQUFHLHdDQUF3QyxNQUFNLEVBQUUsRUFBRSxDQUFDO1FBYzdELElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssUUFBUSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLFFBQVEsRUFBRTtZQUM1RCxPQUFPLENBQUMsSUFBSSxDQUFDLGdJQUFnSSxDQUFDLENBQUM7U0FDbEo7SUFDTCxDQUFDO0lBZkQsMkNBQTJDO0lBQzNDLElBQ0ksRUFBRSxDQUFDLEtBQWE7UUFDaEIsSUFBSSxJQUFJLENBQUMsR0FBRyxLQUFLLEtBQUssRUFBRTtZQUNwQixJQUFJLENBQUMsR0FBRyxHQUFHLEtBQUssQ0FBQztTQUNwQjtJQUNMLENBQUM7SUFDRCxJQUFJLEVBQUU7UUFDRixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDcEIsQ0FBQztJQVFELHVCQUF1QjtRQUNuQixJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDbEIsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMscUJBQXFCLEVBQUUsQ0FBQztZQUN4RSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsdUJBQXVCLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDeEQ7UUFDRCxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7OzZIQTdCUSxnQ0FBZ0M7aUhBQWhDLGdDQUFnQyxpVENYN0MsOHJDQStCQTsyRkRwQmEsZ0NBQWdDO2tCQUo1QyxTQUFTOytCQUNJLHNDQUFzQzttSkFJUixRQUFRO3NCQUEvQyxTQUFTO3VCQUFDLFNBQVMsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7Z0JBQ2IsV0FBVztzQkFBbkMsU0FBUzt1QkFBQyxZQUFZO2dCQU1uQixFQUFFO3NCQURMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE54Q29tcGFyaXNvblRhYmxlQmFzZSB9IGZyb20gJy4uL2NvbXBhcmlzb24tdGFibGUtYmFzZSc7XG5pbXBvcnQgeyBOeENvbXBhcmlzb25UYWJsZVJvd0Jhc2UgfSBmcm9tICcuLi9jb21wYXJpc29uLXRhYmxlLXJvdy1iYXNlJztcblxubGV0IG5leHRJZCA9IDA7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnbngtY29tcGFyaXNvbi10YWJsZS1kZXNjcmlwdGlvbi1jZWxsJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vZGVzY3JpcHRpb24tY2VsbC5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIE54Q29tcGFyaXNvblRhYmxlRGVzY3JpcHRpb25DZWxsIHtcbiAgICBAVmlld0NoaWxkKCdjb250ZW50JywgeyBzdGF0aWM6IHRydWUgfSkgX2NvbnRlbnQhOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIEBWaWV3Q2hpbGQoJ21vYmlsZUNlbGwnKSBfbW9iaWxlQ2VsbCE6IEVsZW1lbnRSZWY7XG5cbiAgICBwcml2YXRlIF9pZCA9IGBueC1jb21wYXJpc29uLXRhYmxlLWRlc2NyaXB0aW9uLWNlbGwtJHtuZXh0SWQrK31gO1xuXG4gICAgLyoqIFNldHMgdGhlIElkIG9mIHRoZSBkZXNjcmlwdGlvbiBjZWxsLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgc2V0IGlkKHZhbHVlOiBzdHJpbmcpIHtcbiAgICAgICAgaWYgKHRoaXMuX2lkICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgdGhpcy5faWQgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgaWQoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lkO1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBfdGFibGU6IE54Q29tcGFyaXNvblRhYmxlQmFzZSwgcHVibGljIF9yb3c6IE54Q29tcGFyaXNvblRhYmxlUm93QmFzZSkge1xuICAgICAgICBpZiAodGhpcy5fcm93LnR5cGUgPT09ICdoZWFkZXInIHx8IHRoaXMuX3Jvdy50eXBlID09PSAnZm9vdGVyJykge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdgbnhDb21wYXJpc29uVGFibGVSb3dgIHNob3VsZCBub3QgY29udGFpbiBhIGBueC1jb21wYXJpc29uLXRhYmxlLWRlc2NyaXB0aW9uLWNlbGxgIGZvciB0eXBlID09PSBcImhlYWRlclwiIG9yIHR5cGUgPT09IFwiZm9vdGVyXCIuJyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfZ2V0TW9iaWxlQ2xpcFBhdGhJbnNldCgpOiBzdHJpbmcge1xuICAgICAgICBpZiAodGhpcy5fbW9iaWxlQ2VsbCkge1xuICAgICAgICAgICAgY29uc3QgY2VsbFJlY3QgPSB0aGlzLl9tb2JpbGVDZWxsLm5hdGl2ZUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fdGFibGUuX2dldE1vYmlsZUNsaXBQYXRoSW5zZXQoY2VsbFJlY3QpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnMCc7XG4gICAgfVxufVxuIiwiPG5nLXRlbXBsYXRlICNjb250ZW50PlxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJfdGFibGUudmlld1R5cGUgPT09ICdkZXNrdG9wJyB8fCBfdGFibGUudmlld1R5cGUgPT09ICd0YWJsZXQnXCI+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNsYXNzPVwibngtY29tcGFyaXNvbi10YWJsZV9fZGVzY3JpcHRpb24tY2VsbFwiXG4gICAgICAgICAgICBbYXR0ci5yb2xlXT1cIl90YWJsZS52aWV3VHlwZSA9PT0gJ2Rlc2t0b3AnID8gJ3Jvd2hlYWRlcicgOiAnY29sdW1uaGVhZGVyJ1wiXG4gICAgICAgICAgICBbYXR0ci5hcmlhLWNvbHNwYW5dPVwiX3RhYmxlLnZpZXdUeXBlID09PSAndGFibGV0JyA/IF90YWJsZS5faW5mb0NvbHVtbkNvdW50KCkgOiAnMSdcIlxuICAgICAgICAgICAgW2F0dHIuaWRdPVwiaWRcIlxuICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibngtY29tcGFyaXNvbi10YWJsZV9fY2VsbC1jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cIm5nQ29udGVudFwiPjwvbmctY29udGFpbmVyPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvbmctY29udGFpbmVyPlxuXG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIl90YWJsZS52aWV3VHlwZSA9PT0gJ21vYmlsZSdcIj5cbiAgICAgICAgPHRoXG4gICAgICAgICAgICAjbW9iaWxlQ2VsbFxuICAgICAgICAgICAgY2xhc3M9XCJueC1jb21wYXJpc29uLXRhYmxlX19kZXNjcmlwdGlvbi1jZWxsXCJcbiAgICAgICAgICAgIFtjbGFzcy5pcy1pbnRlcnNlY3Rpb24tY29sdW1uXT1cIl9yb3cuX2lzSW50ZXJzZWN0aW9uUm93KClcIlxuICAgICAgICAgICAgc2NvcGU9XCJjb2xcIlxuICAgICAgICAgICAgW2F0dHIuaWRdPVwiaWRcIlxuICAgICAgICAgICAgW25nU3R5bGVdPVwieyAnY2xpcC1wYXRoJzogJ2luc2V0KCcgKyBfZ2V0TW9iaWxlQ2xpcFBhdGhJbnNldCgpICsgJyknIH1cIlxuICAgICAgICA+XG4gICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwibmdDb250ZW50XCI+PC9uZy1jb250YWluZXI+XG4gICAgICAgIDwvdGg+XG4gICAgPC9uZy1jb250YWluZXI+XG48L25nLXRlbXBsYXRlPlxuXG48bmctdGVtcGxhdGUgI25nQ29udGVudD5cbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG48L25nLXRlbXBsYXRlPlxuIl19