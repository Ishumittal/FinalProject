import { Component, Optional, ViewChild } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../comparison-table-base";
import * as i2 from "../comparison-table-row-base";
import * as i3 from "../toggle-section/toggle-section-base";
import * as i4 from "@angular/common";
export class NxComparisonTableIntersectionCell {
    constructor(_table, _row, _toggleSection) {
        this._table = _table;
        this._row = _row;
        this._toggleSection = _toggleSection;
    }
    _getHeaderIds() {
        // description cell + (toggle section)
        let headers = '';
        if (this._toggleSection) {
            headers += this._toggleSection.toggleSectionHeader.id;
        }
        if (this._row.descriptionCell) {
            headers += ' ' + this._row.descriptionCell.id;
        }
        return headers;
    }
    _getMobileRowspan() {
        return this._table._getPopularCell() ? this._table._infoColumnCount() + 1 : this._table._infoColumnCount();
    }
}
NxComparisonTableIntersectionCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxComparisonTableIntersectionCell, deps: [{ token: i1.NxComparisonTableBase }, { token: i2.NxComparisonTableRowBase }, { token: i3.NxToggleSectionBase, optional: true }], target: i0.ɵɵFactoryTarget.Component });
NxComparisonTableIntersectionCell.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxComparisonTableIntersectionCell, selector: "nx-comparison-table-intersection-cell", viewQueries: [{ propertyName: "_content", first: true, predicate: ["content"], descendants: true, static: true }], ngImport: i0, template: "<ng-template #content>\n    <ng-container *ngIf=\"_table.viewType === 'desktop' || _table.viewType === 'tablet'\">\n        <div\n            class=\"nx-comparison-table__intersection-cell\"\n            role=\"cell\"\n            [attr.aria-colspan]=\"_table._infoColumnCount()\"\n            [style.flex-grow]=\"_table._infoColumnCount()\"\n            [attr.headers]=\"_getHeaderIds()\"\n        >\n            <div class=\"nx-comparison-table__cell-content\">\n                <ng-container *ngTemplateOutlet=\"ngContent\"></ng-container>\n            </div>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"_table.viewType === 'mobile'\">\n        <td class=\"nx-comparison-table__intersection-cell\" [attr.rowspan]=\"_getMobileRowspan()\" [attr.headers]=\"_getHeaderIds()\">\n            <ng-container *ngTemplateOutlet=\"ngContent\"></ng-container>\n        </td>\n    </ng-container>\n</ng-template>\n\n<ng-template #ngContent>\n    <ng-content></ng-content>\n</ng-template>\n", directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxComparisonTableIntersectionCell, decorators: [{
            type: Component,
            args: [{ selector: 'nx-comparison-table-intersection-cell', template: "<ng-template #content>\n    <ng-container *ngIf=\"_table.viewType === 'desktop' || _table.viewType === 'tablet'\">\n        <div\n            class=\"nx-comparison-table__intersection-cell\"\n            role=\"cell\"\n            [attr.aria-colspan]=\"_table._infoColumnCount()\"\n            [style.flex-grow]=\"_table._infoColumnCount()\"\n            [attr.headers]=\"_getHeaderIds()\"\n        >\n            <div class=\"nx-comparison-table__cell-content\">\n                <ng-container *ngTemplateOutlet=\"ngContent\"></ng-container>\n            </div>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"_table.viewType === 'mobile'\">\n        <td class=\"nx-comparison-table__intersection-cell\" [attr.rowspan]=\"_getMobileRowspan()\" [attr.headers]=\"_getHeaderIds()\">\n            <ng-container *ngTemplateOutlet=\"ngContent\"></ng-container>\n        </td>\n    </ng-container>\n</ng-template>\n\n<ng-template #ngContent>\n    <ng-content></ng-content>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.NxComparisonTableBase }, { type: i2.NxComparisonTableRowBase }, { type: i3.NxToggleSectionBase, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { _content: [{
                type: ViewChild,
                args: ['content', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJzZWN0aW9uLWNlbGwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctYXF1aWxhL3NyYy9jb21wYXJpc29uLXRhYmxlL2ludGVyc2VjdGlvbi1jZWxsL2ludGVyc2VjdGlvbi1jZWxsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWFxdWlsYS9zcmMvY29tcGFyaXNvbi10YWJsZS9pbnRlcnNlY3Rpb24tY2VsbC9pbnRlcnNlY3Rpb24tY2VsbC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBZSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7OztBQVU1RSxNQUFNLE9BQU8saUNBQWlDO0lBRzFDLFlBQW1CLE1BQTZCLEVBQVMsSUFBOEIsRUFBcUIsY0FBMEM7UUFBbkksV0FBTSxHQUFOLE1BQU0sQ0FBdUI7UUFBUyxTQUFJLEdBQUosSUFBSSxDQUEwQjtRQUFxQixtQkFBYyxHQUFkLGNBQWMsQ0FBNEI7SUFBRyxDQUFDO0lBRTFKLGFBQWE7UUFDVCxzQ0FBc0M7UUFDdEMsSUFBSSxPQUFPLEdBQUcsRUFBRSxDQUFDO1FBRWpCLElBQUksSUFBSSxDQUFDLGNBQWMsRUFBRTtZQUNyQixPQUFPLElBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxtQkFBbUIsQ0FBQyxFQUFFLENBQUM7U0FDekQ7UUFFRCxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQzNCLE9BQU8sSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsRUFBRSxDQUFDO1NBQ2pEO1FBRUQsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQztJQUVELGlCQUFpQjtRQUNiLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxlQUFlLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQy9HLENBQUM7OzhIQXRCUSxpQ0FBaUM7a0hBQWpDLGlDQUFpQyxnTUNWOUMseStCQXdCQTsyRkRkYSxpQ0FBaUM7a0JBSjdDLFNBQVM7K0JBQ0ksdUNBQXVDOzswQkFNeUMsUUFBUTs0Q0FGMUQsUUFBUTtzQkFBL0MsU0FBUzt1QkFBQyxTQUFTLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPcHRpb25hbCwgVGVtcGxhdGVSZWYsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBOeENvbXBhcmlzb25UYWJsZUJhc2UgfSBmcm9tICcuLi9jb21wYXJpc29uLXRhYmxlLWJhc2UnO1xuaW1wb3J0IHsgTnhDb21wYXJpc29uVGFibGVSb3dCYXNlIH0gZnJvbSAnLi4vY29tcGFyaXNvbi10YWJsZS1yb3ctYmFzZSc7XG5pbXBvcnQgeyBOeFRvZ2dsZVNlY3Rpb25CYXNlIH0gZnJvbSAnLi4vdG9nZ2xlLXNlY3Rpb24vdG9nZ2xlLXNlY3Rpb24tYmFzZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnbngtY29tcGFyaXNvbi10YWJsZS1pbnRlcnNlY3Rpb24tY2VsbCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2ludGVyc2VjdGlvbi1jZWxsLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgTnhDb21wYXJpc29uVGFibGVJbnRlcnNlY3Rpb25DZWxsIHtcbiAgICBAVmlld0NoaWxkKCdjb250ZW50JywgeyBzdGF0aWM6IHRydWUgfSkgX2NvbnRlbnQhOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIF90YWJsZTogTnhDb21wYXJpc29uVGFibGVCYXNlLCBwdWJsaWMgX3JvdzogTnhDb21wYXJpc29uVGFibGVSb3dCYXNlLCBAT3B0aW9uYWwoKSBwdWJsaWMgX3RvZ2dsZVNlY3Rpb246IE54VG9nZ2xlU2VjdGlvbkJhc2UgfCBudWxsKSB7fVxuXG4gICAgX2dldEhlYWRlcklkcygpIHtcbiAgICAgICAgLy8gZGVzY3JpcHRpb24gY2VsbCArICh0b2dnbGUgc2VjdGlvbilcbiAgICAgICAgbGV0IGhlYWRlcnMgPSAnJztcblxuICAgICAgICBpZiAodGhpcy5fdG9nZ2xlU2VjdGlvbikge1xuICAgICAgICAgICAgaGVhZGVycyArPSB0aGlzLl90b2dnbGVTZWN0aW9uLnRvZ2dsZVNlY3Rpb25IZWFkZXIuaWQ7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5fcm93LmRlc2NyaXB0aW9uQ2VsbCkge1xuICAgICAgICAgICAgaGVhZGVycyArPSAnICcgKyB0aGlzLl9yb3cuZGVzY3JpcHRpb25DZWxsLmlkO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGhlYWRlcnM7XG4gICAgfVxuXG4gICAgX2dldE1vYmlsZVJvd3NwYW4oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl90YWJsZS5fZ2V0UG9wdWxhckNlbGwoKSA/IHRoaXMuX3RhYmxlLl9pbmZvQ29sdW1uQ291bnQoKSArIDEgOiB0aGlzLl90YWJsZS5faW5mb0NvbHVtbkNvdW50KCk7XG4gICAgfVxufVxuIiwiPG5nLXRlbXBsYXRlICNjb250ZW50PlxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJfdGFibGUudmlld1R5cGUgPT09ICdkZXNrdG9wJyB8fCBfdGFibGUudmlld1R5cGUgPT09ICd0YWJsZXQnXCI+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNsYXNzPVwibngtY29tcGFyaXNvbi10YWJsZV9faW50ZXJzZWN0aW9uLWNlbGxcIlxuICAgICAgICAgICAgcm9sZT1cImNlbGxcIlxuICAgICAgICAgICAgW2F0dHIuYXJpYS1jb2xzcGFuXT1cIl90YWJsZS5faW5mb0NvbHVtbkNvdW50KClcIlxuICAgICAgICAgICAgW3N0eWxlLmZsZXgtZ3Jvd109XCJfdGFibGUuX2luZm9Db2x1bW5Db3VudCgpXCJcbiAgICAgICAgICAgIFthdHRyLmhlYWRlcnNdPVwiX2dldEhlYWRlcklkcygpXCJcbiAgICAgICAgPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm54LWNvbXBhcmlzb24tdGFibGVfX2NlbGwtY29udGVudFwiPlxuICAgICAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJuZ0NvbnRlbnRcIj48L25nLWNvbnRhaW5lcj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiX3RhYmxlLnZpZXdUeXBlID09PSAnbW9iaWxlJ1wiPlxuICAgICAgICA8dGQgY2xhc3M9XCJueC1jb21wYXJpc29uLXRhYmxlX19pbnRlcnNlY3Rpb24tY2VsbFwiIFthdHRyLnJvd3NwYW5dPVwiX2dldE1vYmlsZVJvd3NwYW4oKVwiIFthdHRyLmhlYWRlcnNdPVwiX2dldEhlYWRlcklkcygpXCI+XG4gICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwibmdDb250ZW50XCI+PC9uZy1jb250YWluZXI+XG4gICAgICAgIDwvdGQ+XG4gICAgPC9uZy1jb250YWluZXI+XG48L25nLXRlbXBsYXRlPlxuXG48bmctdGVtcGxhdGUgI25nQ29udGVudD5cbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG48L25nLXRlbXBsYXRlPlxuIl19