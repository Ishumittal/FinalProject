import { ChangeDetectionStrategy, Component, EventEmitter, HostListener, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@aposin/ng-aquila/icon";
import * as i2 from "@angular/common";
let optionId = 0;
/**
 * A single option witin the multi select.
 *
 * @docs-private
 */
export class NxMultiSelectOptionComponent {
    constructor(_cdr, elementRef) {
        this._cdr = _cdr;
        this.elementRef = elementRef;
        this._active = false;
        this.id = `nx-multi-select-option-${optionId++}`;
        this.appearance = 'auto';
        /**
         * Label of this option.
         */
        this.label = '';
        /**
         * Whether this option is selected.
         */
        this.selected = false;
        /**
         * Whether thisoption is disabled.
         */
        this.disabled = false;
        /**
         * Emits an event when this option is selected or unselected by the user.
         */
        this.selectedChange = new EventEmitter();
    }
    /**
     * Sets this option active highlighting it to the user.
     */
    set active(value) {
        this._active = value;
        this._cdr.markForCheck();
    }
    get active() {
        return this._active;
    }
    setActiveStyles() {
        this.active = true;
    }
    setInactiveStyles() {
        this.active = false;
    }
    _onClick() {
        if (!this.disabled) {
            this.selected = !this.selected;
            this.selectedChange.emit(this.selected);
        }
    }
    /**
     * Selects this option as if the user clicked on it.
     */
    selectViaInteraction() {
        this._onClick();
        this._cdr.markForCheck();
    }
}
NxMultiSelectOptionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMultiSelectOptionComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
NxMultiSelectOptionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxMultiSelectOptionComponent, selector: "nx-multi-select-option", inputs: { appearance: "appearance", value: "value", label: "label", selected: "selected", disabled: "disabled" }, outputs: { selectedChange: "selectedChange" }, host: { attributes: { "role": "option" }, listeners: { "click": "_onClick()" }, properties: { "id": "id", "attr.aria-selected": "selected || null", "attr.aria-disabled": "disabled || null", "class.is-outline": "appearance === \"outline\"" } }, ngImport: i0, template: "<div class=\"nx-checkbox\" [class.is-active]=\"active\" [class.is-selected]=\"selected\" [class.is-disabled]=\"disabled\">\n    <span class=\"nx-checkbox__control\">\n        <nx-icon *ngIf=\"selected\" name=\"check\" aria-hidden=\"true\"></nx-icon>\n    </span>\n\n    <span class=\"nx-checkbox__label\">\n        {{ label }}\n    </span>\n</div>\n", styles: [":host{display:flex;width:100%;padding:8px 0}:host.is-outline{padding:8px 0}:host.is-outline .nx-checkbox{font-size:var(--checkbox-small-label-font-size);line-height:var(--checkbox-small-label-line-height);font-weight:var(--checkbox-small-label-font-weight);letter-spacing:var(--checkbox-small-label-letter-spacing)}.nx-checkbox{font-size:var(--checkbox-large-label-font-size);line-height:var(--checkbox-large-label-line-height);font-weight:var(--checkbox-large-label-font-weight);letter-spacing:var(--checkbox-large-label-letter-spacing);color:var(--checkbox-label-color);cursor:pointer;display:flex;align-items:flex-start}.nx-checkbox.is-active{box-shadow:var(--focus-box-shadow);border-radius:4px}@media screen and (-ms-high-contrast: active),(forced-colors: active){.nx-checkbox.is-active{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}.nx-checkbox.is-disabled{cursor:not-allowed}.nx-checkbox.is-disabled .nx-checkbox__control{background-color:var(--checkbox-disabled-background-color);border-color:var(--checkbox-disabled-border-color);color:var(--checkbox-disabled-icon-color)}.nx-checkbox.is-disabled .nx-checkbox__label{color:var(--checkbox-label-disabled-color)}.nx-checkbox.is-selected .nx-checkbox__control{background-color:var(--checkbox-selected-background-color);border-color:var(--checkbox-selected-border-color)}.nx-checkbox__control{background-color:var(--checkbox-background-color);border-style:solid;border-width:var(--checkbox-border-width);border-color:var(--checkbox-border-color);border-radius:var(--checkbox-border-radius);color:var(--checkbox-icon-color);font-size:var(--checkbox-icon-size);height:var(--checkbox-control-size);width:var(--checkbox-control-size);min-width:var(--checkbox-control-size);display:flex;justify-content:center;align-items:flex-start;z-index:0}.nx-checkbox__label{padding:0;margin-left:var(--checkbox-small-label-text-margin-left)}:host-context([dir=rtl]) .nx-checkbox__label{margin-left:0;margin-left:initial;margin-right:var(--checkbox-small-label-text-margin-left)}\n"], components: [{ type: i1.NxIconComponent, selector: "nx-icon", inputs: ["name", "outline", "fill", "size", "font"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMultiSelectOptionComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-multi-select-option', host: {
                        role: 'option',
                        '[id]': 'id',
                        '[attr.aria-selected]': 'selected || null',
                        '[attr.aria-disabled]': 'disabled || null',
                        '[class.is-outline]': 'appearance === "outline"',
                    }, changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"nx-checkbox\" [class.is-active]=\"active\" [class.is-selected]=\"selected\" [class.is-disabled]=\"disabled\">\n    <span class=\"nx-checkbox__control\">\n        <nx-icon *ngIf=\"selected\" name=\"check\" aria-hidden=\"true\"></nx-icon>\n    </span>\n\n    <span class=\"nx-checkbox__label\">\n        {{ label }}\n    </span>\n</div>\n", styles: [":host{display:flex;width:100%;padding:8px 0}:host.is-outline{padding:8px 0}:host.is-outline .nx-checkbox{font-size:var(--checkbox-small-label-font-size);line-height:var(--checkbox-small-label-line-height);font-weight:var(--checkbox-small-label-font-weight);letter-spacing:var(--checkbox-small-label-letter-spacing)}.nx-checkbox{font-size:var(--checkbox-large-label-font-size);line-height:var(--checkbox-large-label-line-height);font-weight:var(--checkbox-large-label-font-weight);letter-spacing:var(--checkbox-large-label-letter-spacing);color:var(--checkbox-label-color);cursor:pointer;display:flex;align-items:flex-start}.nx-checkbox.is-active{box-shadow:var(--focus-box-shadow);border-radius:4px}@media screen and (-ms-high-contrast: active),(forced-colors: active){.nx-checkbox.is-active{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}.nx-checkbox.is-disabled{cursor:not-allowed}.nx-checkbox.is-disabled .nx-checkbox__control{background-color:var(--checkbox-disabled-background-color);border-color:var(--checkbox-disabled-border-color);color:var(--checkbox-disabled-icon-color)}.nx-checkbox.is-disabled .nx-checkbox__label{color:var(--checkbox-label-disabled-color)}.nx-checkbox.is-selected .nx-checkbox__control{background-color:var(--checkbox-selected-background-color);border-color:var(--checkbox-selected-border-color)}.nx-checkbox__control{background-color:var(--checkbox-background-color);border-style:solid;border-width:var(--checkbox-border-width);border-color:var(--checkbox-border-color);border-radius:var(--checkbox-border-radius);color:var(--checkbox-icon-color);font-size:var(--checkbox-icon-size);height:var(--checkbox-control-size);width:var(--checkbox-control-size);min-width:var(--checkbox-control-size);display:flex;justify-content:center;align-items:flex-start;z-index:0}.nx-checkbox__label{padding:0;margin-left:var(--checkbox-small-label-text-margin-left)}:host-context([dir=rtl]) .nx-checkbox__label{margin-left:0;margin-left:initial;margin-right:var(--checkbox-small-label-text-margin-left)}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { appearance: [{
                type: Input
            }], value: [{
                type: Input
            }], label: [{
                type: Input
            }], selected: [{
                type: Input
            }], disabled: [{
                type: Input
            }], selectedChange: [{
                type: Output
            }], _onClick: [{
                type: HostListener,
                args: ['click']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktc2VsZWN0LW9wdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1hcXVpbGEvc3JjL2Ryb3Bkb3duL211bHRpLXNlbGVjdC9tdWx0aS1zZWxlY3Qtb3B0aW9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWFxdWlsYS9zcmMvZHJvcGRvd24vbXVsdGktc2VsZWN0L211bHRpLXNlbGVjdC1vcHRpb24uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLHVCQUF1QixFQUFxQixTQUFTLEVBQWMsWUFBWSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBRzdJLElBQUksUUFBUSxHQUFHLENBQUMsQ0FBQztBQUVqQjs7OztHQUlHO0FBY0gsTUFBTSxPQUFPLDRCQUE0QjtJQWtEckMsWUFBb0IsSUFBdUIsRUFBUyxVQUFzQjtRQUF0RCxTQUFJLEdBQUosSUFBSSxDQUFtQjtRQUFTLGVBQVUsR0FBVixVQUFVLENBQVk7UUFqRGxFLFlBQU8sR0FBRyxLQUFLLENBQUM7UUFFeEIsT0FBRSxHQUFHLDBCQUEwQixRQUFRLEVBQUUsRUFBRSxDQUFDO1FBRzVDLGVBQVUsR0FBbUIsTUFBTSxDQUFDO1FBUXBDOztXQUVHO1FBRUgsVUFBSyxHQUFHLEVBQUUsQ0FBQztRQUVYOztXQUVHO1FBRUgsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUVqQjs7V0FFRztRQUVILGFBQVEsR0FBRyxLQUFLLENBQUM7UUFFakI7O1dBRUc7UUFFSCxtQkFBYyxHQUEwQixJQUFJLFlBQVksRUFBRSxDQUFDO0lBY2tCLENBQUM7SUFaOUU7O09BRUc7SUFDSCxJQUFJLE1BQU0sQ0FBQyxLQUFjO1FBQ3JCLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVELElBQUksTUFBTTtRQUNOLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN4QixDQUFDO0lBSUQsZUFBZTtRQUNYLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxpQkFBaUI7UUFDYixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztJQUN4QixDQUFDO0lBR0QsUUFBUTtRQUNKLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2hCLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQy9CLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUMzQztJQUNMLENBQUM7SUFFRDs7T0FFRztJQUNILG9CQUFvQjtRQUNoQixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUM3QixDQUFDOzt5SEExRVEsNEJBQTRCOzZHQUE1Qiw0QkFBNEIsbWRDeEJ6QywrVkFTQTsyRkRlYSw0QkFBNEI7a0JBYnhDLFNBQVM7K0JBQ0ksd0JBQXdCLFFBRzVCO3dCQUNGLElBQUksRUFBRSxRQUFRO3dCQUNkLE1BQU0sRUFBRSxJQUFJO3dCQUNaLHNCQUFzQixFQUFFLGtCQUFrQjt3QkFDMUMsc0JBQXNCLEVBQUUsa0JBQWtCO3dCQUMxQyxvQkFBb0IsRUFBRSwwQkFBMEI7cUJBQ25ELG1CQUNnQix1QkFBdUIsQ0FBQyxNQUFNO2lJQVEvQyxVQUFVO3NCQURULEtBQUs7Z0JBT04sS0FBSztzQkFESixLQUFLO2dCQU9OLEtBQUs7c0JBREosS0FBSztnQkFPTixRQUFRO3NCQURQLEtBQUs7Z0JBT04sUUFBUTtzQkFEUCxLQUFLO2dCQU9OLGNBQWM7c0JBRGIsTUFBTTtnQkEwQlAsUUFBUTtzQkFEUCxZQUFZO3VCQUFDLE9BQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIaWdobGlnaHRhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2ExMXknO1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSG9zdExpc3RlbmVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBcHBlYXJhbmNlVHlwZSB9IGZyb20gJ0BhcG9zaW4vbmctYXF1aWxhL2Zvcm1maWVsZCc7XG5cbmxldCBvcHRpb25JZCA9IDA7XG5cbi8qKlxuICogQSBzaW5nbGUgb3B0aW9uIHdpdGluIHRoZSBtdWx0aSBzZWxlY3QuXG4gKlxuICogQGRvY3MtcHJpdmF0ZVxuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ254LW11bHRpLXNlbGVjdC1vcHRpb24nLFxuICAgIHN0eWxlVXJsczogWycuL211bHRpLXNlbGVjdC1vcHRpb24uY29tcG9uZW50LnNjc3MnXSxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbXVsdGktc2VsZWN0LW9wdGlvbi5jb21wb25lbnQuaHRtbCcsXG4gICAgaG9zdDoge1xuICAgICAgICByb2xlOiAnb3B0aW9uJyxcbiAgICAgICAgJ1tpZF0nOiAnaWQnLFxuICAgICAgICAnW2F0dHIuYXJpYS1zZWxlY3RlZF0nOiAnc2VsZWN0ZWQgfHwgbnVsbCcsXG4gICAgICAgICdbYXR0ci5hcmlhLWRpc2FibGVkXSc6ICdkaXNhYmxlZCB8fCBudWxsJyxcbiAgICAgICAgJ1tjbGFzcy5pcy1vdXRsaW5lXSc6ICdhcHBlYXJhbmNlID09PSBcIm91dGxpbmVcIicsXG4gICAgfSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgTnhNdWx0aVNlbGVjdE9wdGlvbkNvbXBvbmVudDxUPiBpbXBsZW1lbnRzIEhpZ2hsaWdodGFibGUge1xuICAgIHByaXZhdGUgX2FjdGl2ZSA9IGZhbHNlO1xuXG4gICAgaWQgPSBgbngtbXVsdGktc2VsZWN0LW9wdGlvbi0ke29wdGlvbklkKyt9YDtcblxuICAgIEBJbnB1dCgpXG4gICAgYXBwZWFyYW5jZTogQXBwZWFyYW5jZVR5cGUgPSAnYXV0byc7XG5cbiAgICAvKipcbiAgICAgKiBWYWx1ZSBvZiB0aGlzIG9wdGlvbi5cbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIHZhbHVlPzogVDtcblxuICAgIC8qKlxuICAgICAqIExhYmVsIG9mIHRoaXMgb3B0aW9uLlxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgbGFiZWwgPSAnJztcblxuICAgIC8qKlxuICAgICAqIFdoZXRoZXIgdGhpcyBvcHRpb24gaXMgc2VsZWN0ZWQuXG4gICAgICovXG4gICAgQElucHV0KClcbiAgICBzZWxlY3RlZCA9IGZhbHNlO1xuXG4gICAgLyoqXG4gICAgICogV2hldGhlciB0aGlzb3B0aW9uIGlzIGRpc2FibGVkLlxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgZGlzYWJsZWQgPSBmYWxzZTtcblxuICAgIC8qKlxuICAgICAqIEVtaXRzIGFuIGV2ZW50IHdoZW4gdGhpcyBvcHRpb24gaXMgc2VsZWN0ZWQgb3IgdW5zZWxlY3RlZCBieSB0aGUgdXNlci5cbiAgICAgKi9cbiAgICBAT3V0cHV0KClcbiAgICBzZWxlY3RlZENoYW5nZTogRXZlbnRFbWl0dGVyPGJvb2xlYW4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGlzIG9wdGlvbiBhY3RpdmUgaGlnaGxpZ2h0aW5nIGl0IHRvIHRoZSB1c2VyLlxuICAgICAqL1xuICAgIHNldCBhY3RpdmUodmFsdWU6IGJvb2xlYW4pIHtcbiAgICAgICAgdGhpcy5fYWN0aXZlID0gdmFsdWU7XG4gICAgICAgIHRoaXMuX2Nkci5tYXJrRm9yQ2hlY2soKTtcbiAgICB9XG5cbiAgICBnZXQgYWN0aXZlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYWN0aXZlO1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX2NkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIHB1YmxpYyBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7fVxuXG4gICAgc2V0QWN0aXZlU3R5bGVzKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmFjdGl2ZSA9IHRydWU7XG4gICAgfVxuXG4gICAgc2V0SW5hY3RpdmVTdHlsZXMoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYWN0aXZlID0gZmFsc2U7XG4gICAgfVxuXG4gICAgQEhvc3RMaXN0ZW5lcignY2xpY2snKVxuICAgIF9vbkNsaWNrKCkge1xuICAgICAgICBpZiAoIXRoaXMuZGlzYWJsZWQpIHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWQgPSAhdGhpcy5zZWxlY3RlZDtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRDaGFuZ2UuZW1pdCh0aGlzLnNlbGVjdGVkKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNlbGVjdHMgdGhpcyBvcHRpb24gYXMgaWYgdGhlIHVzZXIgY2xpY2tlZCBvbiBpdC5cbiAgICAgKi9cbiAgICBzZWxlY3RWaWFJbnRlcmFjdGlvbigpIHtcbiAgICAgICAgdGhpcy5fb25DbGljaygpO1xuICAgICAgICB0aGlzLl9jZHIubWFya0ZvckNoZWNrKCk7XG4gICAgfVxufVxuIiwiPGRpdiBjbGFzcz1cIm54LWNoZWNrYm94XCIgW2NsYXNzLmlzLWFjdGl2ZV09XCJhY3RpdmVcIiBbY2xhc3MuaXMtc2VsZWN0ZWRdPVwic2VsZWN0ZWRcIiBbY2xhc3MuaXMtZGlzYWJsZWRdPVwiZGlzYWJsZWRcIj5cbiAgICA8c3BhbiBjbGFzcz1cIm54LWNoZWNrYm94X19jb250cm9sXCI+XG4gICAgICAgIDxueC1pY29uICpuZ0lmPVwic2VsZWN0ZWRcIiBuYW1lPVwiY2hlY2tcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L254LWljb24+XG4gICAgPC9zcGFuPlxuXG4gICAgPHNwYW4gY2xhc3M9XCJueC1jaGVja2JveF9fbGFiZWxcIj5cbiAgICAgICAge3sgbGFiZWwgfX1cbiAgICA8L3NwYW4+XG48L2Rpdj5cbiJdfQ==