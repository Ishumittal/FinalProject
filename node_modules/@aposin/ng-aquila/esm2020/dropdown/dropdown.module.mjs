import { A11yModule } from '@angular/cdk/a11y';
import { ObserversModule } from '@angular/cdk/observers';
import { OverlayModule } from '@angular/cdk/overlay';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { NxButtonModule } from '@aposin/ng-aquila/button';
import { NxCheckboxModule } from '@aposin/ng-aquila/checkbox';
import { NxFormfieldModule } from '@aposin/ng-aquila/formfield';
import { NxIconModule } from '@aposin/ng-aquila/icon';
import { NxInputModule } from '@aposin/ng-aquila/input';
import { NxTooltipModule } from '@aposin/ng-aquila/tooltip';
import { NxDropdownClosedLabelDirective } from './closed-label.directive';
import { NX_DROPDOWN_SCROLL_STRATEGY_PROVIDER, NxDropdownComponent, NxDropdownIntl } from './dropdown';
import { NxDropdownGroupComponent } from './group/dropdown-group';
import { NxDropdownItemComponent } from './item/dropdown-item';
import { NxMultiSelectComponent } from './multi-select/multi-select.component';
import { NxMultiSelectOptionComponent } from './multi-select/multi-select-option.component';
import * as i0 from "@angular/core";
export class NxDropdownModule {
}
NxDropdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxDropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NxDropdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxDropdownModule, declarations: [NxDropdownComponent,
        NxDropdownItemComponent,
        NxDropdownGroupComponent,
        NxDropdownClosedLabelDirective,
        NxMultiSelectComponent,
        NxMultiSelectOptionComponent], imports: [CommonModule,
        NxFormfieldModule,
        NxCheckboxModule,
        OverlayModule,
        A11yModule,
        NxIconModule,
        ObserversModule,
        FormsModule,
        NxTooltipModule,
        NxButtonModule,
        NxInputModule], exports: [NxDropdownComponent, NxDropdownItemComponent, NxDropdownGroupComponent, NxDropdownClosedLabelDirective, NxMultiSelectComponent] });
NxDropdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxDropdownModule, providers: [NxDropdownIntl, NX_DROPDOWN_SCROLL_STRATEGY_PROVIDER], imports: [[
            CommonModule,
            NxFormfieldModule,
            NxCheckboxModule,
            OverlayModule,
            A11yModule,
            NxIconModule,
            ObserversModule,
            FormsModule,
            NxTooltipModule,
            NxButtonModule,
            NxInputModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxDropdownModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        NxFormfieldModule,
                        NxCheckboxModule,
                        OverlayModule,
                        A11yModule,
                        NxIconModule,
                        ObserversModule,
                        FormsModule,
                        NxTooltipModule,
                        NxButtonModule,
                        NxInputModule,
                    ],
                    declarations: [
                        NxDropdownComponent,
                        NxDropdownItemComponent,
                        NxDropdownGroupComponent,
                        NxDropdownClosedLabelDirective,
                        NxMultiSelectComponent,
                        NxMultiSelectOptionComponent,
                    ],
                    providers: [NxDropdownIntl, NX_DROPDOWN_SCROLL_STRATEGY_PROVIDER],
                    exports: [NxDropdownComponent, NxDropdownItemComponent, NxDropdownGroupComponent, NxDropdownClosedLabelDirective, NxMultiSelectComponent],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctYXF1aWxhL3NyYy9kcm9wZG93bi9kcm9wZG93bi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDckQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3hELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUU1RCxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMxRSxPQUFPLEVBQUUsb0NBQW9DLEVBQUUsbUJBQW1CLEVBQUUsY0FBYyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3ZHLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ2xFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQy9FLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDhDQUE4QyxDQUFDOztBQTJCNUYsTUFBTSxPQUFPLGdCQUFnQjs7NkdBQWhCLGdCQUFnQjs4R0FBaEIsZ0JBQWdCLGlCQVZyQixtQkFBbUI7UUFDbkIsdUJBQXVCO1FBQ3ZCLHdCQUF3QjtRQUN4Qiw4QkFBOEI7UUFDOUIsc0JBQXNCO1FBQ3RCLDRCQUE0QixhQWxCNUIsWUFBWTtRQUNaLGlCQUFpQjtRQUNqQixnQkFBZ0I7UUFDaEIsYUFBYTtRQUNiLFVBQVU7UUFDVixZQUFZO1FBQ1osZUFBZTtRQUNmLFdBQVc7UUFDWCxlQUFlO1FBQ2YsY0FBYztRQUNkLGFBQWEsYUFXUCxtQkFBbUIsRUFBRSx1QkFBdUIsRUFBRSx3QkFBd0IsRUFBRSw4QkFBOEIsRUFBRSxzQkFBc0I7OEdBRS9ILGdCQUFnQixhQUhkLENBQUMsY0FBYyxFQUFFLG9DQUFvQyxDQUFDLFlBckJ4RDtZQUNMLFlBQVk7WUFDWixpQkFBaUI7WUFDakIsZ0JBQWdCO1lBQ2hCLGFBQWE7WUFDYixVQUFVO1lBQ1YsWUFBWTtZQUNaLGVBQWU7WUFDZixXQUFXO1lBQ1gsZUFBZTtZQUNmLGNBQWM7WUFDZCxhQUFhO1NBQ2hCOzJGQVlRLGdCQUFnQjtrQkF6QjVCLFFBQVE7bUJBQUM7b0JBQ04sT0FBTyxFQUFFO3dCQUNMLFlBQVk7d0JBQ1osaUJBQWlCO3dCQUNqQixnQkFBZ0I7d0JBQ2hCLGFBQWE7d0JBQ2IsVUFBVTt3QkFDVixZQUFZO3dCQUNaLGVBQWU7d0JBQ2YsV0FBVzt3QkFDWCxlQUFlO3dCQUNmLGNBQWM7d0JBQ2QsYUFBYTtxQkFDaEI7b0JBQ0QsWUFBWSxFQUFFO3dCQUNWLG1CQUFtQjt3QkFDbkIsdUJBQXVCO3dCQUN2Qix3QkFBd0I7d0JBQ3hCLDhCQUE4Qjt3QkFDOUIsc0JBQXNCO3dCQUN0Qiw0QkFBNEI7cUJBQy9CO29CQUNELFNBQVMsRUFBRSxDQUFDLGNBQWMsRUFBRSxvQ0FBb0MsQ0FBQztvQkFDakUsT0FBTyxFQUFFLENBQUMsbUJBQW1CLEVBQUUsdUJBQXVCLEVBQUUsd0JBQXdCLEVBQUUsOEJBQThCLEVBQUUsc0JBQXNCLENBQUM7aUJBQzVJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQTExeU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9hMTF5JztcbmltcG9ydCB7IE9ic2VydmVyc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vYnNlcnZlcnMnO1xuaW1wb3J0IHsgT3ZlcmxheU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBOeEJ1dHRvbk1vZHVsZSB9IGZyb20gJ0BhcG9zaW4vbmctYXF1aWxhL2J1dHRvbic7XG5pbXBvcnQgeyBOeENoZWNrYm94TW9kdWxlIH0gZnJvbSAnQGFwb3Npbi9uZy1hcXVpbGEvY2hlY2tib3gnO1xuaW1wb3J0IHsgTnhGb3JtZmllbGRNb2R1bGUgfSBmcm9tICdAYXBvc2luL25nLWFxdWlsYS9mb3JtZmllbGQnO1xuaW1wb3J0IHsgTnhJY29uTW9kdWxlIH0gZnJvbSAnQGFwb3Npbi9uZy1hcXVpbGEvaWNvbic7XG5pbXBvcnQgeyBOeElucHV0TW9kdWxlIH0gZnJvbSAnQGFwb3Npbi9uZy1hcXVpbGEvaW5wdXQnO1xuaW1wb3J0IHsgTnhUb29sdGlwTW9kdWxlIH0gZnJvbSAnQGFwb3Npbi9uZy1hcXVpbGEvdG9vbHRpcCc7XG5cbmltcG9ydCB7IE54RHJvcGRvd25DbG9zZWRMYWJlbERpcmVjdGl2ZSB9IGZyb20gJy4vY2xvc2VkLWxhYmVsLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBOWF9EUk9QRE9XTl9TQ1JPTExfU1RSQVRFR1lfUFJPVklERVIsIE54RHJvcGRvd25Db21wb25lbnQsIE54RHJvcGRvd25JbnRsIH0gZnJvbSAnLi9kcm9wZG93bic7XG5pbXBvcnQgeyBOeERyb3Bkb3duR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2dyb3VwL2Ryb3Bkb3duLWdyb3VwJztcbmltcG9ydCB7IE54RHJvcGRvd25JdGVtQ29tcG9uZW50IH0gZnJvbSAnLi9pdGVtL2Ryb3Bkb3duLWl0ZW0nO1xuaW1wb3J0IHsgTnhNdWx0aVNlbGVjdENvbXBvbmVudCB9IGZyb20gJy4vbXVsdGktc2VsZWN0L211bHRpLXNlbGVjdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTnhNdWx0aVNlbGVjdE9wdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vbXVsdGktc2VsZWN0L211bHRpLXNlbGVjdC1vcHRpb24uY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgICAgTnhGb3JtZmllbGRNb2R1bGUsXG4gICAgICAgIE54Q2hlY2tib3hNb2R1bGUsXG4gICAgICAgIE92ZXJsYXlNb2R1bGUsXG4gICAgICAgIEExMXlNb2R1bGUsXG4gICAgICAgIE54SWNvbk1vZHVsZSxcbiAgICAgICAgT2JzZXJ2ZXJzTW9kdWxlLFxuICAgICAgICBGb3Jtc01vZHVsZSxcbiAgICAgICAgTnhUb29sdGlwTW9kdWxlLFxuICAgICAgICBOeEJ1dHRvbk1vZHVsZSxcbiAgICAgICAgTnhJbnB1dE1vZHVsZSxcbiAgICBdLFxuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBOeERyb3Bkb3duQ29tcG9uZW50LFxuICAgICAgICBOeERyb3Bkb3duSXRlbUNvbXBvbmVudCxcbiAgICAgICAgTnhEcm9wZG93bkdyb3VwQ29tcG9uZW50LFxuICAgICAgICBOeERyb3Bkb3duQ2xvc2VkTGFiZWxEaXJlY3RpdmUsXG4gICAgICAgIE54TXVsdGlTZWxlY3RDb21wb25lbnQsXG4gICAgICAgIE54TXVsdGlTZWxlY3RPcHRpb25Db21wb25lbnQsXG4gICAgXSxcbiAgICBwcm92aWRlcnM6IFtOeERyb3Bkb3duSW50bCwgTlhfRFJPUERPV05fU0NST0xMX1NUUkFURUdZX1BST1ZJREVSXSxcbiAgICBleHBvcnRzOiBbTnhEcm9wZG93bkNvbXBvbmVudCwgTnhEcm9wZG93bkl0ZW1Db21wb25lbnQsIE54RHJvcGRvd25Hcm91cENvbXBvbmVudCwgTnhEcm9wZG93bkNsb3NlZExhYmVsRGlyZWN0aXZlLCBOeE11bHRpU2VsZWN0Q29tcG9uZW50XSxcbn0pXG5leHBvcnQgY2xhc3MgTnhEcm9wZG93bk1vZHVsZSB7fVxuIl19