import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output, ViewChild, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/a11y";
import * as i2 from "@aposin/ng-aquila/icon";
import * as i3 from "@angular/common";
const ICONS = {
    info: 'info-circle',
    error: 'exclamation-triangle',
    success: 'check-circle',
    warning: 'exclamation-circle-warning',
};
export class NxMessageComponent {
    constructor(_cdr, _focusMonitor) {
        this._cdr = _cdr;
        this._focusMonitor = _focusMonitor;
        this._context = 'regular';
        this._allowedContexts = ['regular', 'info', 'error', 'warning', 'success'];
        this._closable = false;
        this._closeButtonLabel = 'Close dialog';
        /** Event emitted when the close icon of the message has been clicked. */
        this.closeEvent = new EventEmitter();
    }
    get _isInfo() {
        return this._context === 'info';
    }
    get _isSuccess() {
        return this._context === 'success';
    }
    get _isWarning() {
        return this._context === 'warning';
    }
    get _isError() {
        return this._context === 'error';
    }
    /**
     * Sets the context of the message.
     * The message box will color accordingly. Default: 'regular' */
    set context(value) {
        this._updateContext(value);
    }
    get context() {
        return this._context;
    }
    /** Whether a message should have a close icon in order to be dismissed. */
    set closable(value) {
        const newValue = coerceBooleanProperty(value);
        if (newValue !== this._closable) {
            this._closable = newValue;
            this._cdr.markForCheck();
        }
    }
    get closable() {
        return this._closable;
    }
    /** Sets the label of the close button of the message. */
    set closeButtonLabel(value) {
        if (value !== this._closeButtonLabel) {
            this._closeButtonLabel = value;
            this._cdr.markForCheck();
        }
    }
    get closeButtonLabel() {
        return this._closeButtonLabel;
    }
    ngAfterViewInit() {
        if (this.closable) {
            this._focusMonitor.monitor(this._closeButton);
        }
    }
    ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._closeButton);
    }
    _emitCloseEvent() {
        this.closeEvent.emit();
    }
    get _iconName() {
        const context = this._allowedContexts.includes(this._context) ? this._context : this._allowedContexts[0];
        return ICONS[context];
    }
    _updateContext(value) {
        if (value !== this._context) {
            this._context = value;
            this._cdr.markForCheck();
        }
    }
}
NxMessageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMessageComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });
NxMessageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxMessageComponent, selector: "nx-message", inputs: { context: ["nxContext", "context"], closable: "closable", closeButtonLabel: "closeButtonLabel" }, outputs: { closeEvent: "close" }, host: { properties: { "class.context-info": "this._isInfo", "class.context-success": "this._isSuccess", "class.context-warning": "this._isWarning", "class.context-error": "this._isError", "class.nx-message--closable": "this.closable" } }, viewQueries: [{ propertyName: "_closeButton", first: true, predicate: ["closeButton"], descendants: true }], exportAs: ["nxMessage"], ngImport: i0, template: "<nx-icon *ngIf=\"_iconName\" class=\"nx-message__icon\" [name]=\"_iconName\" size=\"s\" aria-hidden=\"true\"> </nx-icon>\n\n<button\n    #closeButton\n    *ngIf=\"closable\"\n    (click)=\"_emitCloseEvent()\"\n    [attr.aria-label]=\"closeButtonLabel\"\n    tabindex=\"0\"\n    class=\"nx-message__close-icon\"\n    type=\"button\"\n>\n    <nx-icon name=\"close\" size=\"s\" aria-hidden=\"true\"> </nx-icon>\n</button>\n\n<div class=\"nx-message__content\">\n    <ng-content></ng-content>\n</div>\n", styles: [":host{font-size:var(--message-font-size);line-height:var(--message-line-height);font-weight:var(--message-font-weight);letter-spacing:var(--message-letter-spacing);color:var(--message-text-color);border-radius:var(--message-border-radius);width:100%;display:flex;align-items:flex-start;text-align:left;position:relative;border:1px solid;padding:23px}@media (max-width: 703px){:host{display:block}}[dir=rtl] :host{text-align:right}:host,:host(.context-regular){border-color:var(--message-regular-border-color);background-color:var(--message-regular-background-color)}:host(.context-info){border-color:var(--message-info-border-color);background-color:var(--message-info-background-color)}:host(.context-info) .nx-message__icon{color:var(--message-info-icon-color)}:host(.context-error){border-color:var(--message-error-border-color);background-color:var(--message-error-background-color)}:host(.context-error) .nx-message__icon{color:var(--message-error-icon-color)}:host(.context-success){border-color:var(--message-success-border-color);background-color:var(--message-success-background-color)}:host(.context-success) .nx-message__icon{color:var(--message-success-icon-color)}:host(.context-warning){border-color:var(--message-warning-border-color);background-color:var(--message-warning-background-color)}:host(.context-warning) .nx-message__icon{color:var(--message-warning-icon-color)}@media screen and (-ms-high-contrast: active){.nx-message__icon{color:windowText}}.nx-message__icon{margin-right:16px}@media (max-width: 703px){.nx-message__icon{float:left;margin-right:8px}}:host-context([dir=rtl]) .nx-message__icon{float:right;margin-right:0;margin-right:initial;margin-left:16px}@media (max-width: 703px){:host-context([dir=rtl]) .nx-message__icon{margin-left:8px}}:host(.nx-message--closable){padding-right:39px}@media (max-width: 703px){:host(.nx-message--closable){padding-right:31px}}[dir=rtl] :host(.nx-message--closable){padding-right:23px;padding-left:39px}@media (max-width: 703px){[dir=rtl] :host(.nx-message--closable){padding-left:31px}}.nx-message__close-icon{position:absolute;top:16px;right:16px;cursor:pointer;background-color:transparent;border:none;outline:none;padding:0;display:flex;align-items:center}.nx-message__close-icon nx-icon{color:var(--message-close-icon-color)}:host-context([dir=rtl]) .nx-message__close-icon{right:auto;left:16px}.nx-message__close-icon.cdk-keyboard-focused{box-shadow:var(--focus-box-shadow);border-radius:4px}@media screen and (-ms-high-contrast: active),(forced-colors: active){.nx-message__close-icon.cdk-keyboard-focused{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}\n"], components: [{ type: i2.NxIconComponent, selector: "nx-icon", inputs: ["name", "outline", "fill", "size", "font"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMessageComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-message', changeDetection: ChangeDetectionStrategy.OnPush, exportAs: 'nxMessage', template: "<nx-icon *ngIf=\"_iconName\" class=\"nx-message__icon\" [name]=\"_iconName\" size=\"s\" aria-hidden=\"true\"> </nx-icon>\n\n<button\n    #closeButton\n    *ngIf=\"closable\"\n    (click)=\"_emitCloseEvent()\"\n    [attr.aria-label]=\"closeButtonLabel\"\n    tabindex=\"0\"\n    class=\"nx-message__close-icon\"\n    type=\"button\"\n>\n    <nx-icon name=\"close\" size=\"s\" aria-hidden=\"true\"> </nx-icon>\n</button>\n\n<div class=\"nx-message__content\">\n    <ng-content></ng-content>\n</div>\n", styles: [":host{font-size:var(--message-font-size);line-height:var(--message-line-height);font-weight:var(--message-font-weight);letter-spacing:var(--message-letter-spacing);color:var(--message-text-color);border-radius:var(--message-border-radius);width:100%;display:flex;align-items:flex-start;text-align:left;position:relative;border:1px solid;padding:23px}@media (max-width: 703px){:host{display:block}}[dir=rtl] :host{text-align:right}:host,:host(.context-regular){border-color:var(--message-regular-border-color);background-color:var(--message-regular-background-color)}:host(.context-info){border-color:var(--message-info-border-color);background-color:var(--message-info-background-color)}:host(.context-info) .nx-message__icon{color:var(--message-info-icon-color)}:host(.context-error){border-color:var(--message-error-border-color);background-color:var(--message-error-background-color)}:host(.context-error) .nx-message__icon{color:var(--message-error-icon-color)}:host(.context-success){border-color:var(--message-success-border-color);background-color:var(--message-success-background-color)}:host(.context-success) .nx-message__icon{color:var(--message-success-icon-color)}:host(.context-warning){border-color:var(--message-warning-border-color);background-color:var(--message-warning-background-color)}:host(.context-warning) .nx-message__icon{color:var(--message-warning-icon-color)}@media screen and (-ms-high-contrast: active){.nx-message__icon{color:windowText}}.nx-message__icon{margin-right:16px}@media (max-width: 703px){.nx-message__icon{float:left;margin-right:8px}}:host-context([dir=rtl]) .nx-message__icon{float:right;margin-right:0;margin-right:initial;margin-left:16px}@media (max-width: 703px){:host-context([dir=rtl]) .nx-message__icon{margin-left:8px}}:host(.nx-message--closable){padding-right:39px}@media (max-width: 703px){:host(.nx-message--closable){padding-right:31px}}[dir=rtl] :host(.nx-message--closable){padding-right:23px;padding-left:39px}@media (max-width: 703px){[dir=rtl] :host(.nx-message--closable){padding-left:31px}}.nx-message__close-icon{position:absolute;top:16px;right:16px;cursor:pointer;background-color:transparent;border:none;outline:none;padding:0;display:flex;align-items:center}.nx-message__close-icon nx-icon{color:var(--message-close-icon-color)}:host-context([dir=rtl]) .nx-message__close-icon{right:auto;left:16px}.nx-message__close-icon.cdk-keyboard-focused{box-shadow:var(--focus-box-shadow);border-radius:4px}@media screen and (-ms-high-contrast: active),(forced-colors: active){.nx-message__close-icon.cdk-keyboard-focused{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }]; }, propDecorators: { _isInfo: [{
                type: HostBinding,
                args: ['class.context-info']
            }], _isSuccess: [{
                type: HostBinding,
                args: ['class.context-success']
            }], _isWarning: [{
                type: HostBinding,
                args: ['class.context-warning']
            }], _isError: [{
                type: HostBinding,
                args: ['class.context-error']
            }], _closeButton: [{
                type: ViewChild,
                args: ['closeButton']
            }], context: [{
                type: Input,
                args: ['nxContext']
            }], closable: [{
                type: HostBinding,
                args: ['class.nx-message--closable']
            }, {
                type: Input
            }], closeButtonLabel: [{
                type: Input
            }], closeEvent: [{
                type: Output,
                args: ['close']
            }] } });
//# sourceMappingURL=data:application/json;base64,