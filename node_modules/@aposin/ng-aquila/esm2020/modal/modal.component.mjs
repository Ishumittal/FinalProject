import { animateChild, query, transition, trigger, useAnimation } from '@angular/animations';
import { ChangeDetectionStrategy, Component, Directive, EventEmitter, Input, Output, ViewChild, } from '@angular/core';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { fadeIn, fadeOut, scaleDown, scaleUp } from './animations';
import * as i0 from "@angular/core";
import * as i1 from "./modal.service";
import * as i2 from "@angular/platform-browser";
import * as i3 from "@angular/cdk/a11y";
import * as i4 from "@aposin/ng-aquila/icon";
import * as i5 from "@angular/common";
import * as i6 from "@angular/cdk/scrolling";
/** Container for the action buttons in a modal. Has a fixed position at the bottom of the modal on scroll. */
export class NxModalActionsDirective {
}
NxModalActionsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxModalActionsDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
NxModalActionsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.1", type: NxModalActionsDirective, selector: "[nxModalActions]", host: { properties: { "class.nx-modal__actions": "true" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxModalActionsDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[nxModalActions]',
                    host: {
                        '[class.nx-modal__actions]': 'true',
                    },
                }]
        }] });
/** Scrollable container for the content of a modal. */
export class NxModalContentDirective {
}
NxModalContentDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxModalContentDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
NxModalContentDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.1", type: NxModalContentDirective, selector: "[nxModalContent]", host: { properties: { "class.nx-modal__content": "true" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxModalContentDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[nxModalContent]',
                    host: {
                        '[class.nx-modal__content]': 'true',
                    },
                }]
        }] });
export class NxModalComponent {
    constructor(modalService, eventManager, _cdr, _focusMonitor) {
        this.modalService = modalService;
        this.eventManager = eventManager;
        this._cdr = _cdr;
        this._focusMonitor = _focusMonitor;
        this._closeButtonLabel = 'Close dialog';
        /**
         * Whether the modal view should close when the user hits the escape key.
         * Default is true.
         */
        this.hideOnEsc = true;
        /**
         * Whether the modal view should close when the user clicks on the backdrop.
         * Default is true.
         */
        this.hideOnClickOutside = true;
        /**
         * Whether the modal view should have a close icon in the upper right corner.
         * Default is true.
         */
        this.showCloseIcon = true;
        /**
         * Controls the width of the dialog.
         * On `auto` the width is controlled by the content width,
         * on `fixed` the dialog gets a fixed width of 736px if the viewport is big enough. */
        this.size = 'auto';
        /**
         * An event emitted when the user clicks on the backdrop or uses the built-in close button.
         * This event can be applied in conjunction with the custom open state handling
         * of a modal to close it when requested by the user.
         */
        this.closeEvent = new EventEmitter();
        this._destroyed = new Subject();
    }
    /** Sets the 'aria-label' of the modal close button needed for accessibility.
     *
     * Default value is 'Close dialog'.
     */
    set closeButtonLabel(value) {
        if (value !== this._closeButtonLabel) {
            this._closeButtonLabel = value;
            this._cdr.markForCheck();
        }
    }
    get closeButtonLabel() {
        return this._closeButtonLabel;
    }
    ngOnInit() {
        this.modalService.close$.pipe(takeUntil(this._destroyed)).subscribe(() => this.closeEvent.emit());
        this.removeEventListener = this.eventManager.addGlobalEventListener('window', 'keyup.esc', () => {
            if (this.hideOnEsc) {
                this.modalService.close();
            }
        });
    }
    ngAfterViewInit() {
        if (this.showCloseIcon) {
            this._focusMonitor.monitor(this._closeButton);
        }
    }
    ngOnDestroy() {
        this._destroyed.next();
        this._destroyed.complete();
        this.removeEventListener();
        this._focusMonitor.stopMonitoring(this._closeButton);
    }
    /** @docs-private */
    clickOutsideModal() {
        if (this.hideOnClickOutside) {
            this.modalService.close();
        }
    }
    /** @docs-private */
    closeButtonClick() {
        this.modalService.close();
    }
    /** @docs-private */
    cancelClick(evt) {
        evt.stopPropagation();
    }
}
NxModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxModalComponent, deps: [{ token: i1.NxModalService }, { token: i2.EventManager }, { token: i0.ChangeDetectorRef }, { token: i3.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });
NxModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxModalComponent, selector: "nx-modal", inputs: { closeButtonLabel: "closeButtonLabel", body: ["nxBody", "body"], hideOnEsc: ["nxHideOnEsc", "hideOnEsc"], hideOnClickOutside: ["nxHideOnClickOutside", "hideOnClickOutside"], showCloseIcon: ["nxShowCloseIcon", "showCloseIcon"], size: ["nxSize", "size"] }, outputs: { closeEvent: "nxClose" }, host: { properties: { "@fadeInOut": "", "class.nx-modal--fixed-width": "size === \"fixed\"" } }, viewQueries: [{ propertyName: "_closeButton", first: true, predicate: ["closeButton"], descendants: true }], ngImport: i0, template: "<div class=\"nx-modal\" role=\"dialog\" cdkTrapFocus cdkTrapFocusAutoCapture cdkFocusInitial>\n    <div class=\"nx-modal__backdrop\" (click)=\"clickOutsideModal()\">\n        <div class=\"nx-modal__position\">\n            <div class=\"nx-modal__container\" (click)=\"cancelClick($event)\" [@scaleUpDown]>\n                <button\n                    #closeButton\n                    (click)=\"closeButtonClick()\"\n                    *ngIf=\"showCloseIcon\"\n                    [attr.aria-label]=\"closeButtonLabel\"\n                    class=\"nx-modal__close\"\n                    type=\"button\"\n                >\n                    <nx-icon name=\"close\"></nx-icon>\n                </button>\n\n                <div class=\"nx-modal__content-wrapper\" cdkScrollable>\n                    <ng-container *ngIf=\"body; else projectContent\">\n                        <ng-container *ngTemplateOutlet=\"body\"></ng-container>\n                    </ng-container>\n\n                    <ng-template #projectContent>\n                        <ng-content></ng-content>\n                    </ng-template>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n", styles: [":host{position:relative;z-index:1000}.nx-modal{display:flex;position:fixed;width:100vw;height:100vh;top:0;bottom:0;left:0;right:0;z-index:1000;align-items:center;justify-content:center;transition:opacity .3s ease}.nx-modal__backdrop{background-color:#00000059;height:100%;left:0;position:absolute;top:0;width:100%;z-index:-1}.nx-modal__position{position:absolute;display:inline-block;top:50%;left:50%;transform:translate(-50%,-50%);z-index:20}.nx-modal__container{border-radius:4px;box-shadow:var(--shadow-large);background:var(--modal-background-color);color:var(--modal-text-color)}.nx-modal__content-wrapper{padding:40px 40px 48px;max-height:calc(100vh - 48px);overflow-y:auto}@media (max-width: 703px){.nx-modal__content-wrapper{max-height:70vh;padding:40px 32px 48px}}.nx-modal__close{background-color:transparent;border:none;cursor:pointer;position:absolute;top:16px;right:16px;height:24px;outline:none;padding:0;color:var(--modal-close-icon-color)}.nx-modal__close nx-icon{font-size:24px}.nx-modal__close::-moz-focus-inner{border:0}:host-context([dir=rtl]) .nx-modal__close{right:auto;left:16px}.nx-modal__close.cdk-keyboard-focused{box-shadow:var(--focus-box-shadow);border-radius:4px}@media screen and (-ms-high-contrast: active),(forced-colors: active){.nx-modal__close.cdk-keyboard-focused{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}@media (max-width: 703px){.nx-modal__position{width:100%}.nx-modal__container{position:relative;max-width:calc(100vw - 16px);max-height:70vh;margin:0 auto}}:host(.nx-modal--fixed-width) .nx-modal__container{width:736px;max-width:calc(100vw - 16px)}::ng-deep .nx-modal__actions{height:72px;border-top:1px solid var(--modal-actions-border-color);display:flex;align-items:center;justify-content:flex-end;padding:0 40px;position:absolute;bottom:0;left:0;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px;background:var(--modal-actions-background-color)}::ng-deep .nx-modal__content{overflow-y:auto;max-height:calc(100vh - 120px);padding:0 40px;margin:0 -40px}@media (max-width: 703px){::ng-deep .nx-modal__content{max-height:calc(70vh - 120px);margin:0 -32px}}@media screen and (-ms-high-contrast: active){.nx-modal__content-wrapper,::ng-deep .nx-modal__actions{border:2px solid windowText}}\n"], components: [{ type: i4.NxIconComponent, selector: "nx-icon", inputs: ["name", "outline", "fill", "size", "font"] }], directives: [{ type: i3.CdkTrapFocus, selector: "[cdkTrapFocus]", inputs: ["cdkTrapFocus", "cdkTrapFocusAutoCapture"], exportAs: ["cdkTrapFocus"] }, { type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i6.CdkScrollable, selector: "[cdk-scrollable], [cdkScrollable]" }, { type: i5.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], animations: [
        trigger('fadeInOut', [
            transition(':enter', [useAnimation(fadeIn), query('@scaleUpDown', [animateChild()])]),
            transition(':leave', [query('@scaleUpDown', [animateChild()]), useAnimation(fadeOut)]),
        ]),
        trigger('scaleUpDown', [transition(':enter', useAnimation(scaleDown)), transition(':leave', useAnimation(scaleUp))]),
    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxModalComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-modal', changeDetection: ChangeDetectionStrategy.OnPush, animations: [
                        trigger('fadeInOut', [
                            transition(':enter', [useAnimation(fadeIn), query('@scaleUpDown', [animateChild()])]),
                            transition(':leave', [query('@scaleUpDown', [animateChild()]), useAnimation(fadeOut)]),
                        ]),
                        trigger('scaleUpDown', [transition(':enter', useAnimation(scaleDown)), transition(':leave', useAnimation(scaleUp))]),
                    ], host: {
                        '[@fadeInOut]': '',
                        '[class.nx-modal--fixed-width]': 'size === "fixed"',
                    }, template: "<div class=\"nx-modal\" role=\"dialog\" cdkTrapFocus cdkTrapFocusAutoCapture cdkFocusInitial>\n    <div class=\"nx-modal__backdrop\" (click)=\"clickOutsideModal()\">\n        <div class=\"nx-modal__position\">\n            <div class=\"nx-modal__container\" (click)=\"cancelClick($event)\" [@scaleUpDown]>\n                <button\n                    #closeButton\n                    (click)=\"closeButtonClick()\"\n                    *ngIf=\"showCloseIcon\"\n                    [attr.aria-label]=\"closeButtonLabel\"\n                    class=\"nx-modal__close\"\n                    type=\"button\"\n                >\n                    <nx-icon name=\"close\"></nx-icon>\n                </button>\n\n                <div class=\"nx-modal__content-wrapper\" cdkScrollable>\n                    <ng-container *ngIf=\"body; else projectContent\">\n                        <ng-container *ngTemplateOutlet=\"body\"></ng-container>\n                    </ng-container>\n\n                    <ng-template #projectContent>\n                        <ng-content></ng-content>\n                    </ng-template>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n", styles: [":host{position:relative;z-index:1000}.nx-modal{display:flex;position:fixed;width:100vw;height:100vh;top:0;bottom:0;left:0;right:0;z-index:1000;align-items:center;justify-content:center;transition:opacity .3s ease}.nx-modal__backdrop{background-color:#00000059;height:100%;left:0;position:absolute;top:0;width:100%;z-index:-1}.nx-modal__position{position:absolute;display:inline-block;top:50%;left:50%;transform:translate(-50%,-50%);z-index:20}.nx-modal__container{border-radius:4px;box-shadow:var(--shadow-large);background:var(--modal-background-color);color:var(--modal-text-color)}.nx-modal__content-wrapper{padding:40px 40px 48px;max-height:calc(100vh - 48px);overflow-y:auto}@media (max-width: 703px){.nx-modal__content-wrapper{max-height:70vh;padding:40px 32px 48px}}.nx-modal__close{background-color:transparent;border:none;cursor:pointer;position:absolute;top:16px;right:16px;height:24px;outline:none;padding:0;color:var(--modal-close-icon-color)}.nx-modal__close nx-icon{font-size:24px}.nx-modal__close::-moz-focus-inner{border:0}:host-context([dir=rtl]) .nx-modal__close{right:auto;left:16px}.nx-modal__close.cdk-keyboard-focused{box-shadow:var(--focus-box-shadow);border-radius:4px}@media screen and (-ms-high-contrast: active),(forced-colors: active){.nx-modal__close.cdk-keyboard-focused{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}@media (max-width: 703px){.nx-modal__position{width:100%}.nx-modal__container{position:relative;max-width:calc(100vw - 16px);max-height:70vh;margin:0 auto}}:host(.nx-modal--fixed-width) .nx-modal__container{width:736px;max-width:calc(100vw - 16px)}::ng-deep .nx-modal__actions{height:72px;border-top:1px solid var(--modal-actions-border-color);display:flex;align-items:center;justify-content:flex-end;padding:0 40px;position:absolute;bottom:0;left:0;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px;background:var(--modal-actions-background-color)}::ng-deep .nx-modal__content{overflow-y:auto;max-height:calc(100vh - 120px);padding:0 40px;margin:0 -40px}@media (max-width: 703px){::ng-deep .nx-modal__content{max-height:calc(70vh - 120px);margin:0 -32px}}@media screen and (-ms-high-contrast: active){.nx-modal__content-wrapper,::ng-deep .nx-modal__actions{border:2px solid windowText}}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.NxModalService }, { type: i2.EventManager }, { type: i0.ChangeDetectorRef }, { type: i3.FocusMonitor }]; }, propDecorators: { _closeButton: [{
                type: ViewChild,
                args: ['closeButton']
            }], closeButtonLabel: [{
                type: Input
            }], body: [{
                type: Input,
                args: ['nxBody']
            }], hideOnEsc: [{
                type: Input,
                args: ['nxHideOnEsc']
            }], hideOnClickOutside: [{
                type: Input,
                args: ['nxHideOnClickOutside']
            }], showCloseIcon: [{
                type: Input,
                args: ['nxShowCloseIcon']
            }], size: [{
                type: Input,
                args: ['nxSize']
            }], closeEvent: [{
                type: Output,
                args: ['nxClose']
            }] } });
//# sourceMappingURL=data:application/json;base64,