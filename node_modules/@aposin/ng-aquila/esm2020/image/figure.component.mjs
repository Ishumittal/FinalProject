import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
const DEFAULT_SIZE = 'auto';
export class NxFigureComponent {
    constructor() {
        /** @docs-private */
        this.rounded = false;
        /** @docs-private */
        this.size = DEFAULT_SIZE;
    }
    /**
     * Sets the type of the visual appearance of the image.
     * The default value  is 'auto'.
     */
    set classNames(value) {
        if (this._classNames === value) {
            return;
        }
        this._classNames = value; // TODO properly coerce input value
        // TODO kick null safe-guards after setter value or any calling input values are properly coerced as string
        const sizeRegex = /^(auto|1by1|1dot8by1|1dot2by1|1by1dot1|2dot6by1)$/;
        const [size = null] = this._classNames?.match(sizeRegex) || [DEFAULT_SIZE];
        this.size = size;
        this.rounded = !!this._classNames?.match(/rounded/);
    }
    get classNames() {
        return this._classNames;
    }
}
NxFigureComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxFigureComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
NxFigureComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxFigureComponent, selector: "figure[nxFigure]", inputs: { classNames: ["nxFigure", "classNames"] }, host: { properties: { "class.nx-image": "true", "class.nx-image--auto": "size === \"auto\" && !rounded", "class.nx-image--1by1": "size === \"1by1\"", "class.nx-image--1dot8by1": "size === \"1dot8by1\"", "class.nx-image--1dot2by1": "size === \"1dot2by1\"", "class.nx-image--1by1dot1": "size === \"1by1dot1\"", "class.nx-image--2dot6by1": "size === \"2dot6by1\"", "class.nx-image--rounded": "rounded" } }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [":host{display:block;position:relative;line-height:0}:host ::ng-deep img{display:block;font-family:\"object-fit: cover;\";-o-object-fit:cover;object-fit:cover;height:100%;width:100%}:host(.nx-image--auto) ::ng-deep img{height:auto}:host(:not(.nx-image--auto)) ::ng-deep img{position:absolute;top:0;left:0}[dir=rtl] :host(:not(.nx-image--auto)) ::ng-deep img{right:0;left:auto}:host(.nx-image--rounded){padding-top:100%}:host(.nx-image--rounded) ::ng-deep img{border-radius:50%;bottom:0;left:0;position:absolute;right:0;top:0}:host(.nx-image--1by1){padding-top:100%}:host(.nx-image--1dot8by1){padding-top:55.5555555556%}:host(.nx-image--1dot2by1){padding-top:83.3333333333%}:host(.nx-image--1by1dot1){padding-top:110%}:host(.nx-image--2dot6by1){padding-top:38.4615384615%}:host(.nx-image--1by1dot4){padding-top:140%}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxFigureComponent, decorators: [{
            type: Component,
            args: [{ selector: 'figure[nxFigure]', template: '<ng-content></ng-content>', changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        '[class.nx-image]': 'true',
                        '[class.nx-image--auto]': 'size === "auto" && !rounded',
                        '[class.nx-image--1by1]': 'size === "1by1"',
                        '[class.nx-image--1dot8by1]': 'size === "1dot8by1"',
                        '[class.nx-image--1dot2by1]': 'size === "1dot2by1"',
                        '[class.nx-image--1by1dot1]': 'size === "1by1dot1"',
                        '[class.nx-image--2dot6by1]': 'size === "2dot6by1"',
                        '[class.nx-image--rounded]': 'rounded',
                    }, styles: [":host{display:block;position:relative;line-height:0}:host ::ng-deep img{display:block;font-family:\"object-fit: cover;\";-o-object-fit:cover;object-fit:cover;height:100%;width:100%}:host(.nx-image--auto) ::ng-deep img{height:auto}:host(:not(.nx-image--auto)) ::ng-deep img{position:absolute;top:0;left:0}[dir=rtl] :host(:not(.nx-image--auto)) ::ng-deep img{right:0;left:auto}:host(.nx-image--rounded){padding-top:100%}:host(.nx-image--rounded) ::ng-deep img{border-radius:50%;bottom:0;left:0;position:absolute;right:0;top:0}:host(.nx-image--1by1){padding-top:100%}:host(.nx-image--1dot8by1){padding-top:55.5555555556%}:host(.nx-image--1dot2by1){padding-top:83.3333333333%}:host(.nx-image--1by1dot1){padding-top:110%}:host(.nx-image--2dot6by1){padding-top:38.4615384615%}:host(.nx-image--1by1dot4){padding-top:140%}\n"] }]
        }], propDecorators: { classNames: [{
                type: Input,
                args: ['nxFigure']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlndXJlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWFxdWlsYS9zcmMvaW1hZ2UvZmlndXJlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFPMUUsTUFBTSxZQUFZLEdBQUcsTUFBTSxDQUFDO0FBa0I1QixNQUFNLE9BQU8saUJBQWlCO0lBaEI5QjtRQW1CSSxvQkFBb0I7UUFDcEIsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUVoQixvQkFBb0I7UUFDcEIsU0FBSSxHQUFnQixZQUFZLENBQUM7S0F3QnBDO0lBdEJHOzs7T0FHRztJQUNILElBQ0ksVUFBVSxDQUFDLEtBQTZDO1FBQ3hELElBQUksSUFBSSxDQUFDLFdBQVcsS0FBSyxLQUFLLEVBQUU7WUFDNUIsT0FBTztTQUNWO1FBQ0QsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFtQixDQUFDLENBQUMsbUNBQW1DO1FBRTNFLDJHQUEyRztRQUMzRyxNQUFNLFNBQVMsR0FBRyxtREFBbUQsQ0FBQztRQUN0RSxNQUFNLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFXLENBQUM7UUFFeEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVELElBQUksVUFBVTtRQUNWLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUM1QixDQUFDOzs4R0E5QlEsaUJBQWlCO2tHQUFqQixpQkFBaUIsZ2dCQWRoQiwyQkFBMkI7MkZBYzVCLGlCQUFpQjtrQkFoQjdCLFNBQVM7K0JBQ0ksa0JBQWtCLFlBQ2xCLDJCQUEyQixtQkFDcEIsdUJBQXVCLENBQUMsTUFBTSxRQUV6Qzt3QkFDRixrQkFBa0IsRUFBRSxNQUFNO3dCQUMxQix3QkFBd0IsRUFBRSw2QkFBNkI7d0JBQ3ZELHdCQUF3QixFQUFFLGlCQUFpQjt3QkFDM0MsNEJBQTRCLEVBQUUscUJBQXFCO3dCQUNuRCw0QkFBNEIsRUFBRSxxQkFBcUI7d0JBQ25ELDRCQUE0QixFQUFFLHFCQUFxQjt3QkFDbkQsNEJBQTRCLEVBQUUscUJBQXFCO3dCQUNuRCwyQkFBMkIsRUFBRSxTQUFTO3FCQUN6Qzs4QkFnQkcsVUFBVTtzQkFEYixLQUFLO3VCQUFDLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKiogVHlwZXMgb2YgZmlndXJlcy4gKi9cbmV4cG9ydCB0eXBlIEZpZ3VyZVR5cGUgPSAnYXV0bycgfCAnMWJ5MScgfCAnMWRvdDhieTEnIHwgJzFkb3QyYnkxJyB8ICcxYnkxZG90MScgfCAnMmRvdDZieTEnIHwgJ3JvdW5kZWQnO1xuLyoqIEBkb2NzLXByaXZhdGUgKi9cbmV4cG9ydCB0eXBlIGZpZ3VyZVNpemVzID0gJ2F1dG8nIHwgJzFieTEnIHwgJzFkb3Q4YnkxJyB8ICcxZG90MmJ5MScgfCAnMWJ5MWRvdDEnIHwgJzJkb3Q2YnkxJztcblxuY29uc3QgREVGQVVMVF9TSVpFID0gJ2F1dG8nO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2ZpZ3VyZVtueEZpZ3VyZV0nLFxuICAgIHRlbXBsYXRlOiAnPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PicsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgc3R5bGVVcmxzOiBbJy4vZmlndXJlLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgaG9zdDoge1xuICAgICAgICAnW2NsYXNzLm54LWltYWdlXSc6ICd0cnVlJyxcbiAgICAgICAgJ1tjbGFzcy5ueC1pbWFnZS0tYXV0b10nOiAnc2l6ZSA9PT0gXCJhdXRvXCIgJiYgIXJvdW5kZWQnLFxuICAgICAgICAnW2NsYXNzLm54LWltYWdlLS0xYnkxXSc6ICdzaXplID09PSBcIjFieTFcIicsXG4gICAgICAgICdbY2xhc3MubngtaW1hZ2UtLTFkb3Q4YnkxXSc6ICdzaXplID09PSBcIjFkb3Q4YnkxXCInLFxuICAgICAgICAnW2NsYXNzLm54LWltYWdlLS0xZG90MmJ5MV0nOiAnc2l6ZSA9PT0gXCIxZG90MmJ5MVwiJyxcbiAgICAgICAgJ1tjbGFzcy5ueC1pbWFnZS0tMWJ5MWRvdDFdJzogJ3NpemUgPT09IFwiMWJ5MWRvdDFcIicsXG4gICAgICAgICdbY2xhc3MubngtaW1hZ2UtLTJkb3Q2YnkxXSc6ICdzaXplID09PSBcIjJkb3Q2YnkxXCInLFxuICAgICAgICAnW2NsYXNzLm54LWltYWdlLS1yb3VuZGVkXSc6ICdyb3VuZGVkJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBOeEZpZ3VyZUNvbXBvbmVudCB7XG4gICAgcHJpdmF0ZSBfY2xhc3NOYW1lcyE6IEZpZ3VyZVR5cGU7XG5cbiAgICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICAgIHJvdW5kZWQgPSBmYWxzZTtcblxuICAgIC8qKiBAZG9jcy1wcml2YXRlICovXG4gICAgc2l6ZTogZmlndXJlU2l6ZXMgPSBERUZBVUxUX1NJWkU7XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSB0eXBlIG9mIHRoZSB2aXN1YWwgYXBwZWFyYW5jZSBvZiB0aGUgaW1hZ2UuXG4gICAgICogVGhlIGRlZmF1bHQgdmFsdWUgIGlzICdhdXRvJy5cbiAgICAgKi9cbiAgICBASW5wdXQoJ254RmlndXJlJylcbiAgICBzZXQgY2xhc3NOYW1lcyh2YWx1ZTogRmlndXJlVHlwZSB8IHN0cmluZyB8IG51bGwgfCB1bmRlZmluZWQpIHtcbiAgICAgICAgaWYgKHRoaXMuX2NsYXNzTmFtZXMgPT09IHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fY2xhc3NOYW1lcyA9IHZhbHVlIGFzIEZpZ3VyZVR5cGU7IC8vIFRPRE8gcHJvcGVybHkgY29lcmNlIGlucHV0IHZhbHVlXG5cbiAgICAgICAgLy8gVE9ETyBraWNrIG51bGwgc2FmZS1ndWFyZHMgYWZ0ZXIgc2V0dGVyIHZhbHVlIG9yIGFueSBjYWxsaW5nIGlucHV0IHZhbHVlcyBhcmUgcHJvcGVybHkgY29lcmNlZCBhcyBzdHJpbmdcbiAgICAgICAgY29uc3Qgc2l6ZVJlZ2V4ID0gL14oYXV0b3wxYnkxfDFkb3Q4YnkxfDFkb3QyYnkxfDFieTFkb3QxfDJkb3Q2YnkxKSQvO1xuICAgICAgICBjb25zdCBbc2l6ZSA9IG51bGxdID0gdGhpcy5fY2xhc3NOYW1lcz8ubWF0Y2goc2l6ZVJlZ2V4KSB8fCBbREVGQVVMVF9TSVpFXTtcbiAgICAgICAgdGhpcy5zaXplID0gc2l6ZSBhcyBhbnk7XG5cbiAgICAgICAgdGhpcy5yb3VuZGVkID0gISF0aGlzLl9jbGFzc05hbWVzPy5tYXRjaCgvcm91bmRlZC8pO1xuICAgIH1cblxuICAgIGdldCBjbGFzc05hbWVzKCk6IEZpZ3VyZVR5cGUge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xhc3NOYW1lcztcbiAgICB9XG59XG4iXX0=