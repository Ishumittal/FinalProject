import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NxCopytextModule } from '@aposin/ng-aquila/copytext';
import { NxIconModule } from '@aposin/ng-aquila/icon';
import { NxSwipebarModule } from '@aposin/ng-aquila/swipebar';
import { NxExpandableTableDirective } from './expandable/expandable-table.directive';
import { NxExpandableTableCellComponent } from './expandable/expandable-table-cell.component';
import { NxExpandableTableRowComponent } from './expandable/expandable-table-row.component';
import { NxToggleButtonComponent } from './expandable/toggle-button.component';
import { NxHeaderCellDirective } from './header-cell.directive';
import { NxSortDirective } from './sort-header/sort.directive';
import { NxSortHeaderComponent } from './sort-header/sort-header.component';
import { NxSortHeaderIntl } from './sort-header/sort-header-intl';
import { NxTableComponent } from './table.component';
import { NxTableCellComponent } from './table-cell.component';
import { NxTableRowComponent } from './table-row.component';
import * as i0 from "@angular/core";
const EXPORTED_DECLARED_ELEMENTS = [
    NxHeaderCellDirective,
    NxTableComponent,
    NxTableCellComponent,
    NxTableComponent,
    NxTableRowComponent,
    NxToggleButtonComponent,
    NxExpandableTableDirective,
    NxExpandableTableRowComponent,
    NxExpandableTableCellComponent,
    NxSortHeaderComponent,
    NxSortDirective,
];
export class NxTableModule {
}
NxTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NxTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxTableModule, declarations: [NxHeaderCellDirective,
        NxTableComponent,
        NxTableCellComponent,
        NxTableComponent,
        NxTableRowComponent,
        NxToggleButtonComponent,
        NxExpandableTableDirective,
        NxExpandableTableRowComponent,
        NxExpandableTableCellComponent,
        NxSortHeaderComponent,
        NxSortDirective], imports: [CommonModule, NxIconModule, NxCopytextModule, NxSwipebarModule], exports: [NxHeaderCellDirective,
        NxTableComponent,
        NxTableCellComponent,
        NxTableComponent,
        NxTableRowComponent,
        NxToggleButtonComponent,
        NxExpandableTableDirective,
        NxExpandableTableRowComponent,
        NxExpandableTableCellComponent,
        NxSortHeaderComponent,
        NxSortDirective, NxSwipebarModule] });
NxTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxTableModule, providers: [NxSortHeaderIntl], imports: [[CommonModule, NxIconModule, NxCopytextModule, NxSwipebarModule], NxSwipebarModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxTableModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: EXPORTED_DECLARED_ELEMENTS,
                    exports: [...EXPORTED_DECLARED_ELEMENTS, NxSwipebarModule],
                    imports: [CommonModule, NxIconModule, NxCopytextModule, NxSwipebarModule],
                    providers: [NxSortHeaderIntl],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctYXF1aWxhL3NyYy90YWJsZS90YWJsZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRTlELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQzlGLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQzVGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMvRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUM1RSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNsRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM5RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7QUFFNUQsTUFBTSwwQkFBMEIsR0FBRztJQUMvQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLG9CQUFvQjtJQUNwQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLHVCQUF1QjtJQUN2QiwwQkFBMEI7SUFDMUIsNkJBQTZCO0lBQzdCLDhCQUE4QjtJQUM5QixxQkFBcUI7SUFDckIsZUFBZTtDQUNsQixDQUFDO0FBUUYsTUFBTSxPQUFPLGFBQWE7OzBHQUFiLGFBQWE7MkdBQWIsYUFBYSxpQkFuQnRCLHFCQUFxQjtRQUNyQixnQkFBZ0I7UUFDaEIsb0JBQW9CO1FBQ3BCLGdCQUFnQjtRQUNoQixtQkFBbUI7UUFDbkIsdUJBQXVCO1FBQ3ZCLDBCQUEwQjtRQUMxQiw2QkFBNkI7UUFDN0IsOEJBQThCO1FBQzlCLHFCQUFxQjtRQUNyQixlQUFlLGFBTUwsWUFBWSxFQUFFLFlBQVksRUFBRSxnQkFBZ0IsRUFBRSxnQkFBZ0IsYUFoQnhFLHFCQUFxQjtRQUNyQixnQkFBZ0I7UUFDaEIsb0JBQW9CO1FBQ3BCLGdCQUFnQjtRQUNoQixtQkFBbUI7UUFDbkIsdUJBQXVCO1FBQ3ZCLDBCQUEwQjtRQUMxQiw2QkFBNkI7UUFDN0IsOEJBQThCO1FBQzlCLHFCQUFxQjtRQUNyQixlQUFlLEVBSzBCLGdCQUFnQjsyR0FJaEQsYUFBYSxhQUZYLENBQUMsZ0JBQWdCLENBQUMsWUFEcEIsQ0FBQyxZQUFZLEVBQUUsWUFBWSxFQUFFLGdCQUFnQixFQUFFLGdCQUFnQixDQUFDLEVBRGhDLGdCQUFnQjsyRkFJaEQsYUFBYTtrQkFOekIsUUFBUTttQkFBQztvQkFDTixZQUFZLEVBQUUsMEJBQTBCO29CQUN4QyxPQUFPLEVBQUUsQ0FBQyxHQUFHLDBCQUEwQixFQUFFLGdCQUFnQixDQUFDO29CQUMxRCxPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsWUFBWSxFQUFFLGdCQUFnQixFQUFFLGdCQUFnQixDQUFDO29CQUN6RSxTQUFTLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQztpQkFDaEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE54Q29weXRleHRNb2R1bGUgfSBmcm9tICdAYXBvc2luL25nLWFxdWlsYS9jb3B5dGV4dCc7XG5pbXBvcnQgeyBOeEljb25Nb2R1bGUgfSBmcm9tICdAYXBvc2luL25nLWFxdWlsYS9pY29uJztcbmltcG9ydCB7IE54U3dpcGViYXJNb2R1bGUgfSBmcm9tICdAYXBvc2luL25nLWFxdWlsYS9zd2lwZWJhcic7XG5cbmltcG9ydCB7IE54RXhwYW5kYWJsZVRhYmxlRGlyZWN0aXZlIH0gZnJvbSAnLi9leHBhbmRhYmxlL2V4cGFuZGFibGUtdGFibGUuZGlyZWN0aXZlJztcbmltcG9ydCB7IE54RXhwYW5kYWJsZVRhYmxlQ2VsbENvbXBvbmVudCB9IGZyb20gJy4vZXhwYW5kYWJsZS9leHBhbmRhYmxlLXRhYmxlLWNlbGwuY29tcG9uZW50JztcbmltcG9ydCB7IE54RXhwYW5kYWJsZVRhYmxlUm93Q29tcG9uZW50IH0gZnJvbSAnLi9leHBhbmRhYmxlL2V4cGFuZGFibGUtdGFibGUtcm93LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOeFRvZ2dsZUJ1dHRvbkNvbXBvbmVudCB9IGZyb20gJy4vZXhwYW5kYWJsZS90b2dnbGUtYnV0dG9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOeEhlYWRlckNlbGxEaXJlY3RpdmUgfSBmcm9tICcuL2hlYWRlci1jZWxsLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBOeFNvcnREaXJlY3RpdmUgfSBmcm9tICcuL3NvcnQtaGVhZGVyL3NvcnQuZGlyZWN0aXZlJztcbmltcG9ydCB7IE54U29ydEhlYWRlckNvbXBvbmVudCB9IGZyb20gJy4vc29ydC1oZWFkZXIvc29ydC1oZWFkZXIuY29tcG9uZW50JztcbmltcG9ydCB7IE54U29ydEhlYWRlckludGwgfSBmcm9tICcuL3NvcnQtaGVhZGVyL3NvcnQtaGVhZGVyLWludGwnO1xuaW1wb3J0IHsgTnhUYWJsZUNvbXBvbmVudCB9IGZyb20gJy4vdGFibGUuY29tcG9uZW50JztcbmltcG9ydCB7IE54VGFibGVDZWxsQ29tcG9uZW50IH0gZnJvbSAnLi90YWJsZS1jZWxsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOeFRhYmxlUm93Q29tcG9uZW50IH0gZnJvbSAnLi90YWJsZS1yb3cuY29tcG9uZW50JztcblxuY29uc3QgRVhQT1JURURfREVDTEFSRURfRUxFTUVOVFMgPSBbXG4gICAgTnhIZWFkZXJDZWxsRGlyZWN0aXZlLFxuICAgIE54VGFibGVDb21wb25lbnQsXG4gICAgTnhUYWJsZUNlbGxDb21wb25lbnQsXG4gICAgTnhUYWJsZUNvbXBvbmVudCxcbiAgICBOeFRhYmxlUm93Q29tcG9uZW50LFxuICAgIE54VG9nZ2xlQnV0dG9uQ29tcG9uZW50LFxuICAgIE54RXhwYW5kYWJsZVRhYmxlRGlyZWN0aXZlLFxuICAgIE54RXhwYW5kYWJsZVRhYmxlUm93Q29tcG9uZW50LFxuICAgIE54RXhwYW5kYWJsZVRhYmxlQ2VsbENvbXBvbmVudCxcbiAgICBOeFNvcnRIZWFkZXJDb21wb25lbnQsXG4gICAgTnhTb3J0RGlyZWN0aXZlLFxuXTtcblxuQE5nTW9kdWxlKHtcbiAgICBkZWNsYXJhdGlvbnM6IEVYUE9SVEVEX0RFQ0xBUkVEX0VMRU1FTlRTLFxuICAgIGV4cG9ydHM6IFsuLi5FWFBPUlRFRF9ERUNMQVJFRF9FTEVNRU5UUywgTnhTd2lwZWJhck1vZHVsZV0sXG4gICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgTnhJY29uTW9kdWxlLCBOeENvcHl0ZXh0TW9kdWxlLCBOeFN3aXBlYmFyTW9kdWxlXSxcbiAgICBwcm92aWRlcnM6IFtOeFNvcnRIZWFkZXJJbnRsXSxcbn0pXG5leHBvcnQgY2xhc3MgTnhUYWJsZU1vZHVsZSB7fVxuIl19