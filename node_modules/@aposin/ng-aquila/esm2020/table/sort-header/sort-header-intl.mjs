import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
export class NxSortHeaderIntl {
    constructor() {
        /**
         * Stream that emits whenever the labels here are changed. Use this to notify
         * components if the labels have changed after initialization.
         */
        this.changes = new Subject();
        /** The aria label for a header that can be clicked to sort ascending. */
        this.sortAscendingAriaLabel = 'click to sort ascending';
        /** The aria label for a header that can be clicked to sort descending. */
        this.sortDescendingAriaLabel = 'click to sort descending';
        /** The aria label for a column that is sorted ascending. */
        this.sortedAscendingAriaLabel = 'sorted ascending by';
        /** The aria label for a column that is sorted descending. */
        this.sortedDescendingAriaLabel = 'sorted descending by';
    }
}
NxSortHeaderIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxSortHeaderIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
NxSortHeaderIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxSortHeaderIntl });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxSortHeaderIntl, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydC1oZWFkZXItaW50bC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWFxdWlsYS9zcmMvdGFibGUvc29ydC1oZWFkZXIvc29ydC1oZWFkZXItaW50bC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7O0FBRy9CLE1BQU0sT0FBTyxnQkFBZ0I7SUFEN0I7UUFFSTs7O1dBR0c7UUFDTSxZQUFPLEdBQWtCLElBQUksT0FBTyxFQUFRLENBQUM7UUFFdEQseUVBQXlFO1FBQ3pFLDJCQUFzQixHQUFHLHlCQUF5QixDQUFDO1FBQ25ELDBFQUEwRTtRQUMxRSw0QkFBdUIsR0FBRywwQkFBMEIsQ0FBQztRQUNyRCw0REFBNEQ7UUFDNUQsNkJBQXdCLEdBQUcscUJBQXFCLENBQUM7UUFDakQsNkRBQTZEO1FBQzdELDhCQUF5QixHQUFHLHNCQUFzQixDQUFDO0tBQ3REOzs2R0FmWSxnQkFBZ0I7aUhBQWhCLGdCQUFnQjsyRkFBaEIsZ0JBQWdCO2tCQUQ1QixVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTnhTb3J0SGVhZGVySW50bCB7XG4gICAgLyoqXG4gICAgICogU3RyZWFtIHRoYXQgZW1pdHMgd2hlbmV2ZXIgdGhlIGxhYmVscyBoZXJlIGFyZSBjaGFuZ2VkLiBVc2UgdGhpcyB0byBub3RpZnlcbiAgICAgKiBjb21wb25lbnRzIGlmIHRoZSBsYWJlbHMgaGF2ZSBjaGFuZ2VkIGFmdGVyIGluaXRpYWxpemF0aW9uLlxuICAgICAqL1xuICAgIHJlYWRvbmx5IGNoYW5nZXM6IFN1YmplY3Q8dm9pZD4gPSBuZXcgU3ViamVjdDx2b2lkPigpO1xuXG4gICAgLyoqIFRoZSBhcmlhIGxhYmVsIGZvciBhIGhlYWRlciB0aGF0IGNhbiBiZSBjbGlja2VkIHRvIHNvcnQgYXNjZW5kaW5nLiAqL1xuICAgIHNvcnRBc2NlbmRpbmdBcmlhTGFiZWwgPSAnY2xpY2sgdG8gc29ydCBhc2NlbmRpbmcnO1xuICAgIC8qKiBUaGUgYXJpYSBsYWJlbCBmb3IgYSBoZWFkZXIgdGhhdCBjYW4gYmUgY2xpY2tlZCB0byBzb3J0IGRlc2NlbmRpbmcuICovXG4gICAgc29ydERlc2NlbmRpbmdBcmlhTGFiZWwgPSAnY2xpY2sgdG8gc29ydCBkZXNjZW5kaW5nJztcbiAgICAvKiogVGhlIGFyaWEgbGFiZWwgZm9yIGEgY29sdW1uIHRoYXQgaXMgc29ydGVkIGFzY2VuZGluZy4gKi9cbiAgICBzb3J0ZWRBc2NlbmRpbmdBcmlhTGFiZWwgPSAnc29ydGVkIGFzY2VuZGluZyBieSc7XG4gICAgLyoqIFRoZSBhcmlhIGxhYmVsIGZvciBhIGNvbHVtbiB0aGF0IGlzIHNvcnRlZCBkZXNjZW5kaW5nLiAqL1xuICAgIHNvcnRlZERlc2NlbmRpbmdBcmlhTGFiZWwgPSAnc29ydGVkIGRlc2NlbmRpbmcgYnknO1xufVxuIl19