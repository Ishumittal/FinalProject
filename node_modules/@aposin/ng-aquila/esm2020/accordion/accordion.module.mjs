import { PortalModule } from '@angular/cdk/portal';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NxIconModule } from '@aposin/ng-aquila/icon';
import { NxAccordionDirective } from './accordion';
import { NxExpansionPanelComponent } from './expansion-panel';
import { NxExpansionPanelBodyDirective } from './expansion-panel-body';
import { NxExpansionPanelDescriptionDirective, NxExpansionPanelHeaderComponent, NxExpansionPanelTitleDirective } from './expansion-panel-header';
import * as i0 from "@angular/core";
export class NxAccordionModule {
}
NxAccordionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NxAccordionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxAccordionModule, declarations: [NxAccordionDirective,
        NxExpansionPanelComponent,
        NxExpansionPanelHeaderComponent,
        NxExpansionPanelDescriptionDirective,
        NxExpansionPanelTitleDirective,
        NxExpansionPanelBodyDirective], imports: [CommonModule, PortalModule, NxIconModule], exports: [NxAccordionDirective,
        NxExpansionPanelComponent,
        NxExpansionPanelHeaderComponent,
        NxExpansionPanelDescriptionDirective,
        NxExpansionPanelTitleDirective,
        NxExpansionPanelBodyDirective] });
NxAccordionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxAccordionModule, providers: [], imports: [[CommonModule, PortalModule, NxIconModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxAccordionModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, PortalModule, NxIconModule],
                    exports: [
                        NxAccordionDirective,
                        NxExpansionPanelComponent,
                        NxExpansionPanelHeaderComponent,
                        NxExpansionPanelDescriptionDirective,
                        NxExpansionPanelTitleDirective,
                        NxExpansionPanelBodyDirective,
                    ],
                    declarations: [
                        NxAccordionDirective,
                        NxExpansionPanelComponent,
                        NxExpansionPanelHeaderComponent,
                        NxExpansionPanelDescriptionDirective,
                        NxExpansionPanelTitleDirective,
                        NxExpansionPanelBodyDirective,
                    ],
                    providers: [],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWFxdWlsYS9zcmMvYWNjb3JkaW9uL2FjY29yZGlvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUV0RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDbkQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDOUQsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdkUsT0FBTyxFQUFFLG9DQUFvQyxFQUFFLCtCQUErQixFQUFFLDhCQUE4QixFQUFFLE1BQU0sMEJBQTBCLENBQUM7O0FBc0JqSixNQUFNLE9BQU8saUJBQWlCOzs4R0FBakIsaUJBQWlCOytHQUFqQixpQkFBaUIsaUJBVHRCLG9CQUFvQjtRQUNwQix5QkFBeUI7UUFDekIsK0JBQStCO1FBQy9CLG9DQUFvQztRQUNwQyw4QkFBOEI7UUFDOUIsNkJBQTZCLGFBZnZCLFlBQVksRUFBRSxZQUFZLEVBQUUsWUFBWSxhQUU5QyxvQkFBb0I7UUFDcEIseUJBQXlCO1FBQ3pCLCtCQUErQjtRQUMvQixvQ0FBb0M7UUFDcEMsOEJBQThCO1FBQzlCLDZCQUE2QjsrR0FZeEIsaUJBQWlCLGFBRmYsRUFBRSxZQWpCSixDQUFDLFlBQVksRUFBRSxZQUFZLEVBQUUsWUFBWSxDQUFDOzJGQW1CMUMsaUJBQWlCO2tCQXBCN0IsUUFBUTttQkFBQztvQkFDTixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsWUFBWSxFQUFFLFlBQVksQ0FBQztvQkFDbkQsT0FBTyxFQUFFO3dCQUNMLG9CQUFvQjt3QkFDcEIseUJBQXlCO3dCQUN6QiwrQkFBK0I7d0JBQy9CLG9DQUFvQzt3QkFDcEMsOEJBQThCO3dCQUM5Qiw2QkFBNkI7cUJBQ2hDO29CQUNELFlBQVksRUFBRTt3QkFDVixvQkFBb0I7d0JBQ3BCLHlCQUF5Qjt3QkFDekIsK0JBQStCO3dCQUMvQixvQ0FBb0M7d0JBQ3BDLDhCQUE4Qjt3QkFDOUIsNkJBQTZCO3FCQUNoQztvQkFDRCxTQUFTLEVBQUUsRUFBRTtpQkFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb3J0YWxNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvcG9ydGFsJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTnhJY29uTW9kdWxlIH0gZnJvbSAnQGFwb3Npbi9uZy1hcXVpbGEvaWNvbic7XG5cbmltcG9ydCB7IE54QWNjb3JkaW9uRGlyZWN0aXZlIH0gZnJvbSAnLi9hY2NvcmRpb24nO1xuaW1wb3J0IHsgTnhFeHBhbnNpb25QYW5lbENvbXBvbmVudCB9IGZyb20gJy4vZXhwYW5zaW9uLXBhbmVsJztcbmltcG9ydCB7IE54RXhwYW5zaW9uUGFuZWxCb2R5RGlyZWN0aXZlIH0gZnJvbSAnLi9leHBhbnNpb24tcGFuZWwtYm9keSc7XG5pbXBvcnQgeyBOeEV4cGFuc2lvblBhbmVsRGVzY3JpcHRpb25EaXJlY3RpdmUsIE54RXhwYW5zaW9uUGFuZWxIZWFkZXJDb21wb25lbnQsIE54RXhwYW5zaW9uUGFuZWxUaXRsZURpcmVjdGl2ZSB9IGZyb20gJy4vZXhwYW5zaW9uLXBhbmVsLWhlYWRlcic7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgUG9ydGFsTW9kdWxlLCBOeEljb25Nb2R1bGVdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgTnhBY2NvcmRpb25EaXJlY3RpdmUsXG4gICAgICAgIE54RXhwYW5zaW9uUGFuZWxDb21wb25lbnQsXG4gICAgICAgIE54RXhwYW5zaW9uUGFuZWxIZWFkZXJDb21wb25lbnQsXG4gICAgICAgIE54RXhwYW5zaW9uUGFuZWxEZXNjcmlwdGlvbkRpcmVjdGl2ZSxcbiAgICAgICAgTnhFeHBhbnNpb25QYW5lbFRpdGxlRGlyZWN0aXZlLFxuICAgICAgICBOeEV4cGFuc2lvblBhbmVsQm9keURpcmVjdGl2ZSxcbiAgICBdLFxuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBOeEFjY29yZGlvbkRpcmVjdGl2ZSxcbiAgICAgICAgTnhFeHBhbnNpb25QYW5lbENvbXBvbmVudCxcbiAgICAgICAgTnhFeHBhbnNpb25QYW5lbEhlYWRlckNvbXBvbmVudCxcbiAgICAgICAgTnhFeHBhbnNpb25QYW5lbERlc2NyaXB0aW9uRGlyZWN0aXZlLFxuICAgICAgICBOeEV4cGFuc2lvblBhbmVsVGl0bGVEaXJlY3RpdmUsXG4gICAgICAgIE54RXhwYW5zaW9uUGFuZWxCb2R5RGlyZWN0aXZlLFxuICAgIF0sXG4gICAgcHJvdmlkZXJzOiBbXSxcbn0pXG5leHBvcnQgY2xhc3MgTnhBY2NvcmRpb25Nb2R1bGUge31cbiJdfQ==