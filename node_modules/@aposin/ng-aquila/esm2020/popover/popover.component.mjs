import { ENTER, SPACE } from '@angular/cdk/keycodes';
import { ChangeDetectionStrategy, Component, ContentChild, EventEmitter, Output, TemplateRef, ViewChild, } from '@angular/core';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { NxPopoverContentDirective } from './popover-content';
import * as i0 from "@angular/core";
import * as i1 from "./popover-intl";
import * as i2 from "@aposin/ng-aquila/icon";
import * as i3 from "@angular/common";
export class NxPopoverComponent {
    constructor(_intl, _cdr) {
        this._intl = _intl;
        this._cdr = _cdr;
        /** Event emitted when the popover is closed. */
        this.closed = new EventEmitter();
        /** @docs-private */
        this.closeButtonClick = new Subject();
        /** @docs-private */
        this.showCloseButton = false;
        /** @docs-private */
        this.arrowStyle = {};
        this._destroyed = new Subject();
    }
    ngOnInit() {
        this._intl.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {
            this._cdr.markForCheck();
        });
    }
    ngOnDestroy() {
        this._destroyed.next();
        this._destroyed.complete();
        this.closed.complete();
    }
    /**
     * Emits event to notify the popover trigger directive that the close button was clicked.
     * @docs-private
     */
    emitCloseButtonClick() {
        this.closeButtonClick.next();
    }
    /** @docs-private */
    _onCloseKeyup($event) {
        if ($event && ($event.keyCode === ENTER || $event.keyCode === SPACE)) {
            this.emitCloseButtonClick();
        }
        $event.preventDefault();
    }
    /** @docs-private */
    emitClosedEvent() {
        this.closed.emit();
    }
    /** @docs-private */
    get classList() {
        if (this.direction) {
            // Returning an array here caused an error that the classes were not set
            // after a prod build. Couldn't reproduce it properly in an isolated way.
            // As it doesn't make sense to return an array for a single value anyway
            // changed it to a string and that seems to work.
            return `nx-popover--${this.direction}`;
        }
        return '';
    }
    /** Prevent the popover from closing when the user clicks on the popover content. */
    _onClick(event) {
        event.stopPropagation();
    }
}
NxPopoverComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPopoverComponent, deps: [{ token: i1.NxPopoverIntl }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
NxPopoverComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxPopoverComponent, selector: "nx-popover", outputs: { closed: "nxClosed" }, queries: [{ propertyName: "_lazyContent", first: true, predicate: NxPopoverContentDirective, descendants: true }], viewQueries: [{ propertyName: "templateRef", first: true, predicate: TemplateRef, descendants: true }], exportAs: ["nxPopover"], ngImport: i0, template: "<ng-template>\n    <div [ngClass]=\"classList\" class=\"nx-popover\" role=\"tooltip\" aria-hidden=\"false\" (click)=\"_onClick($event)\">\n        <div class=\"nx-popover__content\" tabindex=\"0\">\n            <div class=\"nx-popover__arrow\" [ngStyle]=\"arrowStyle\"></div>\n            <span\n                [attr.aria-label]=\"_intl.closeIconLabel\"\n                tabindex=\"0\"\n                role=\"button\"\n                class=\"nx-popover__close-icon\"\n                (click)=\"emitCloseButtonClick()\"\n                (keyup)=\"_onCloseKeyup($event)\"\n                *ngIf=\"showCloseButton\"\n            >\n                <nx-icon aria-hidden=\"true\" name=\"close\"></nx-icon>\n            </span>\n\n            <span [id]=\"id\">\n                <ng-content></ng-content>\n                <ng-container [ngTemplateOutlet]=\"_lazyContent?._template ?? null\"></ng-container>\n            </span>\n        </div>\n    </div>\n</ng-template>\n", styles: [".nx-popover__content{font-size:var(--popover-content-font-size);line-height:var(--popover-content-line-height);font-weight:var(--popover-content-font-weight);letter-spacing:var(--popover-content-letter-spacing);background-color:var(--popover-background-color);color:var(--popover-text-color);border:1px solid var(--popover-border-color);border-radius:4px;box-shadow:var(--shadow-small);padding:23px;display:block}.nx-popover__content:focus{outline:none}.nx-popover__content::-moz-focus-inner{border:0}.nx-popover__close-icon{display:flex;position:absolute;top:4px;right:4px;cursor:pointer;font-size:var(--popover-close-icon-size);color:var(--popover-close-icon-color);border-radius:2px}[dir=rtl] .nx-popover__close-icon{right:auto;left:4px}.nx-popover__close-icon:focus{outline:none}.nx-popover__close-icon::-moz-focus-inner{border:0}@media screen and (-ms-high-contrast: active){.nx-popover__close-icon{color:buttonText}}.nx-popover__content.cdk-keyboard-focused,.nx-popover__close-icon.cdk-keyboard-focused{box-shadow:var(--focus-box-shadow)}@media screen and (-ms-high-contrast: active),(forced-colors: active){.nx-popover__content.cdk-keyboard-focused,.nx-popover__close-icon.cdk-keyboard-focused{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}.nx-popover__arrow{width:12px;height:12px;background-color:inherit;position:absolute;transform:translate(-50%);border-top:1px solid var(--popover-border-color);border-left:1px solid var(--popover-border-color)}.nx-popover--top .nx-popover__arrow{transform:translate(-50%) rotate(225deg);bottom:-5px;box-shadow:2px 2px 1px 1px var(--popover-background-color),-2px -2px -4px var(--shadow-small-color)}.nx-popover--right .nx-popover__arrow{transform:translateY(-50%) rotate(-45deg);left:-5px}.nx-popover--bottom .nx-popover__arrow{transform:translate(-50%) rotate(45deg);top:-5px}.nx-popover--left .nx-popover__arrow{transform:translateY(-50%) rotate(135deg);right:-5px}\n"], components: [{ type: i2.NxIconComponent, selector: "nx-icon", inputs: ["name", "outline", "fill", "size", "font"] }], directives: [{ type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i3.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPopoverComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-popover', changeDetection: ChangeDetectionStrategy.OnPush, exportAs: 'nxPopover', template: "<ng-template>\n    <div [ngClass]=\"classList\" class=\"nx-popover\" role=\"tooltip\" aria-hidden=\"false\" (click)=\"_onClick($event)\">\n        <div class=\"nx-popover__content\" tabindex=\"0\">\n            <div class=\"nx-popover__arrow\" [ngStyle]=\"arrowStyle\"></div>\n            <span\n                [attr.aria-label]=\"_intl.closeIconLabel\"\n                tabindex=\"0\"\n                role=\"button\"\n                class=\"nx-popover__close-icon\"\n                (click)=\"emitCloseButtonClick()\"\n                (keyup)=\"_onCloseKeyup($event)\"\n                *ngIf=\"showCloseButton\"\n            >\n                <nx-icon aria-hidden=\"true\" name=\"close\"></nx-icon>\n            </span>\n\n            <span [id]=\"id\">\n                <ng-content></ng-content>\n                <ng-container [ngTemplateOutlet]=\"_lazyContent?._template ?? null\"></ng-container>\n            </span>\n        </div>\n    </div>\n</ng-template>\n", styles: [".nx-popover__content{font-size:var(--popover-content-font-size);line-height:var(--popover-content-line-height);font-weight:var(--popover-content-font-weight);letter-spacing:var(--popover-content-letter-spacing);background-color:var(--popover-background-color);color:var(--popover-text-color);border:1px solid var(--popover-border-color);border-radius:4px;box-shadow:var(--shadow-small);padding:23px;display:block}.nx-popover__content:focus{outline:none}.nx-popover__content::-moz-focus-inner{border:0}.nx-popover__close-icon{display:flex;position:absolute;top:4px;right:4px;cursor:pointer;font-size:var(--popover-close-icon-size);color:var(--popover-close-icon-color);border-radius:2px}[dir=rtl] .nx-popover__close-icon{right:auto;left:4px}.nx-popover__close-icon:focus{outline:none}.nx-popover__close-icon::-moz-focus-inner{border:0}@media screen and (-ms-high-contrast: active){.nx-popover__close-icon{color:buttonText}}.nx-popover__content.cdk-keyboard-focused,.nx-popover__close-icon.cdk-keyboard-focused{box-shadow:var(--focus-box-shadow)}@media screen and (-ms-high-contrast: active),(forced-colors: active){.nx-popover__content.cdk-keyboard-focused,.nx-popover__close-icon.cdk-keyboard-focused{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}.nx-popover__arrow{width:12px;height:12px;background-color:inherit;position:absolute;transform:translate(-50%);border-top:1px solid var(--popover-border-color);border-left:1px solid var(--popover-border-color)}.nx-popover--top .nx-popover__arrow{transform:translate(-50%) rotate(225deg);bottom:-5px;box-shadow:2px 2px 1px 1px var(--popover-background-color),-2px -2px -4px var(--shadow-small-color)}.nx-popover--right .nx-popover__arrow{transform:translateY(-50%) rotate(-45deg);left:-5px}.nx-popover--bottom .nx-popover__arrow{transform:translate(-50%) rotate(45deg);top:-5px}.nx-popover--left .nx-popover__arrow{transform:translateY(-50%) rotate(135deg);right:-5px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.NxPopoverIntl }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { templateRef: [{
                type: ViewChild,
                args: [TemplateRef]
            }], _lazyContent: [{
                type: ContentChild,
                args: [NxPopoverContentDirective]
            }], closed: [{
                type: Output,
                args: ['nxClosed']
            }] } });
//# sourceMappingURL=data:application/json;base64,