import { ChangeDetectionStrategy, Component, ContentChildren, Input, Optional, ViewChildren, } from '@angular/core';
import { takeUntil } from 'rxjs/operators';
import { NxProgressStepperDirective } from '../progress-stepper.component';
import { NxMultiStepperGroupComponent } from './multi-step-group.component';
import { NxMultiStepItemComponent } from './multi-step-item.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/bidi";
import * as i2 from "./multi-step-item.component";
import * as i3 from "@angular/common";
export class NxMultiStepperComponent extends NxProgressStepperDirective {
    constructor(_cdr, _dir, _el) {
        super(_cdr, _dir, _el);
        this._direction = 'horizontal';
    }
    /** Sets the direction of the multi stepper. */
    get direction() {
        return this._direction;
    }
    set direction(value) {
        this._direction = value;
    }
    ngAfterViewChecked() {
        // the _keyManager is currently private in the CdkStepper and the CDK/Material way
        // is to create to separate components for the vertical and horizontal stepper with no
        // possibility to change it during runtime
        // opened a ticket: https://github.com/angular/components/issues/21874
        // for now the quick solution is the hacky way to access the private property
        this['_keyManager'].withVerticalOrientation(this._direction === 'vertical');
    }
    ngAfterContentInit() {
        super.ngAfterContentInit();
        if (this.groups.length) {
            this.steps.reset(this._stepsInGroups);
            this.steps.notifyOnChanges();
        }
        this.groups.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {
            this.steps.reset(this._stepsInGroups);
            this.steps.notifyOnChanges();
        });
    }
    ngOnDestroy() {
        this._destroyed.next();
        this._destroyed.complete();
    }
    _stepDisabled(index) {
        const steps = this.steps.toArray();
        if (this.linear && index >= 0) {
            return steps.slice(0, index).some(step => {
                const control = step.stepControl;
                const isIncomplete = control ? control.invalid || control.pending || !step.interacted : !step.completed;
                return isIncomplete && !step.optional;
            });
        }
        return false;
    }
    get _stepsInGroups() {
        if (this.groups.length) {
            return this.groups.reduce((steps, group) => steps.concat(group.steps.toArray()), []);
        }
        return [];
    }
    // Returns the index of a certain step
    _getIndex(step) {
        return this.steps.toArray().indexOf(step);
    }
    _isGroupActive(groupIndex) {
        return this.selectedIndex >= this.getGroupItemIndex(groupIndex);
    }
    _isGroupDisabled(groupIndex) {
        return this._stepDisabled(this.getGroupItemIndex(groupIndex));
    }
    getGroupItemIndex(groupIndex) {
        let count = 0;
        const groups = this.groups.toArray();
        for (let i = 0; i < groupIndex; i++) {
            count += groups[i].steps.length;
        }
        return count;
    }
}
NxMultiStepperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMultiStepperComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.Directionality, optional: true }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
NxMultiStepperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxMultiStepperComponent, selector: "nx-multi-stepper", inputs: { direction: "direction" }, host: { properties: { "class.nx-multi-stepper--vertical": "direction === \"vertical\"" } }, providers: [{ provide: NxProgressStepperDirective, useExisting: NxMultiStepperComponent }], queries: [{ propertyName: "groups", predicate: NxMultiStepperGroupComponent, descendants: true }], viewQueries: [{ propertyName: "_stepHeader", predicate: NxMultiStepItemComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<span class=\"nx-progress-stepper__title\" *ngIf=\"direction === 'horizontal'\">\n    <ng-content select=\"nx-label\"></ng-content>\n</span>\n\n<div class=\"nx-multi-stepper__items\" role=\"tablist\">\n    <ng-container *ngIf=\"groups.length === 0 || direction === 'horizontal'; else groupsTemplate\">\n        <ng-container *ngFor=\"let step of steps; let i = index; let isLast = last; let isFirst = first\">\n            <nx-multi-step-item\n                (click)=\"!_stepDisabled(i) && step.select()\"\n                (keydown)=\"_onKeydown($event)\"\n                [last]=\"isLast\"\n                [tabindex]=\"_getFocusIndex() === i ? 0 : -1\"\n                [label]=\"step.stepLabel || step.label\"\n                [completed]=\"step.completed\"\n                [selected]=\"selectedIndex === i\"\n                [active]=\"selectedIndex > i\"\n                [disabled]=\"_stepDisabled(i)\"\n                [direction]=\"direction\"\n            >\n            </nx-multi-step-item>\n        </ng-container>\n    </ng-container>\n</div>\n\n<div class=\"labels-container\" *ngIf=\"direction === 'horizontal'\" role=\"tablist\">\n    <div\n        class=\"label\"\n        role=\"tab\"\n        tabindex=\"-1\"\n        [attr.aria-selected]=\"selectedIndex === i\"\n        *ngFor=\"let step of steps; let i = index\"\n        [ngClass]=\"{ 'is-disabled': _stepDisabled(i), 'is-selected': selectedIndex === i }\"\n        (click)=\"!_stepDisabled(i) && step.select()\"\n    >\n        <span>{{ step.label }}</span>\n    </div>\n</div>\n\n<div class=\"nx-progress-stepper__mobile-label\">\n    {{ currentLabel }}\n</div>\n\n<div\n    *ngFor=\"let step of steps; let i = index\"\n    class=\"nx-progress-stepper__content\"\n    role=\"tabpanel\"\n    [id]=\"_getStepContentId(i)\"\n    [attr.aria-label]=\"currentLabel\"\n    [attr.aria-expanded]=\"selectedIndex === i\"\n>\n    <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n\n<ng-template #groupsTemplate>\n    <ng-container *ngFor=\"let group of groups; let i = index\">\n        <div class=\"nx-multi-stepper__group\">\n            <div class=\"nx-multi-stepper__group-label\" [class.is-active]=\"_isGroupActive(i)\" [class.is-disabled]=\"_isGroupDisabled(i)\">\n                {{ group.label }}\n            </div>\n\n            <div class=\"nx-multi-stepper__group-items\">\n                <ng-container *ngFor=\"let step of group.steps; let isLast = last\">\n                    <nx-multi-step-item\n                        (click)=\"!_stepDisabled(_getIndex(step)) && step.select()\"\n                        (keydown)=\"_onKeydown($event)\"\n                        [tabindex]=\"_getFocusIndex() === _getIndex(step) ? 0 : -1\"\n                        [last]=\"isLast\"\n                        [label]=\"step.stepLabel || step.label\"\n                        [completed]=\"step.completed\"\n                        [selected]=\"selectedIndex === _getIndex(step)\"\n                        [active]=\"selectedIndex > _getIndex(step)\"\n                        [disabled]=\"_stepDisabled(_getIndex(step))\"\n                        [direction]=\"direction\"\n                    >\n                    </nx-multi-step-item>\n                </ng-container>\n            </div>\n        </div>\n    </ng-container>\n</ng-template>\n", styles: [":host{display:block}.nx-progress-stepper__content[aria-expanded=false]{height:0;overflow:hidden;visibility:hidden}.nx-progress-stepper__mobile-label{display:none;color:var(--progress-indicator-mobile-color);font-size:var(--progress-indicator-mobile-font-size);line-height:var(--progress-indicator-mobile-line-height);font-weight:var(--progress-indicator-mobile-font-weight);letter-spacing:var(--progress-indicator-mobile-letter-spacing)}@media (max-width: 703px){.nx-progress-stepper__mobile-label{display:block;text-align:center}}.nx-progress-stepper__title{display:block}.nx-progress-stepper__title ::ng-deep nx-label{margin-bottom:24px}\n", ":host{width:100%}@media (min-width: 704px){:host.nx-multi-stepper--vertical{display:flex}}:host.nx-multi-stepper--vertical .nx-progress-stepper__content[aria-expanded=false]{width:0}:host.nx-multi-stepper--vertical .nx-multi-stepper__items{align-items:flex-start;flex-direction:column;margin:0 56px 0 0;max-width:100%}[dir=rtl] :host.nx-multi-stepper--vertical .nx-multi-stepper__items{margin:0 0 0 56px}:host.nx-multi-stepper--vertical .nx-multi-stepper__group-items{flex-direction:column;max-width:100%}:host.nx-multi-stepper--vertical .nx-multi-stepper__group-label{transform:none;border-left:4px solid transparent;margin-bottom:16px;margin-left:6px;padding-left:22px}[dir=rtl] :host.nx-multi-stepper--vertical .nx-multi-stepper__group-label{margin-left:0;margin-left:initial;padding-left:0;padding-left:initial;margin-right:6px;padding-right:22px}:host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label{padding-top:16px;margin-top:16px;border-left-style:dotted;border-left-color:var(--multi-stepper-line-color)}:host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label.is-active{padding-top:36px;padding-bottom:20px;margin-top:-nx-spacer(3xs);margin-bottom:-nx-spacer(3xs);border-left-style:solid;border-left-color:var(--multi-stepper-line-filled-color)}[dir=rtl] :host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label{border-left-style:none;border-right-style:dotted;border-right-color:var(--multi-stepper-line-color)}[dir=rtl] :host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label.is-active{border-left-style:none;border-right-style:solid;border-right-color:var(--multi-stepper-line-filled-color)}:host .labels-container{width:100%;flex:1 1 100%;display:flex;margin:0 auto;vertical-align:top;align-self:flex-start;align-items:flex-start}@media (max-width: 703px){:host .labels-container{display:none}}:host .labels-container .label{flex:1 1 100%;display:flex;align-items:center;justify-content:center;position:relative;font-size:var(--multi-stepper-step-font-size);line-height:var(--multi-stepper-step-line-height);font-weight:var(--multi-stepper-step-font-weight);letter-spacing:var(--multi-stepper-step-letter-spacing);color:var(--multi-stepper-step-color);cursor:pointer;text-align:center}:host .labels-container .label.is-disabled{color:var(--multi-stepper-step-disabled-color);cursor:not-allowed}@media screen and (-ms-high-contrast: active){:host .labels-container .label{color:buttonText}:host .labels-container .label.is-disabled{color:GrayText}:host .labels-container .label:not(.is-disabled){color:buttonText}:host .labels-container .label span{-ms-high-contrast-adjust:none;background-color:buttonFace;border-radius:4px;box-shadow:0 0 0 2px buttonFace}:host .labels-container .label.is-selected span{background-color:highlight;border-radius:4px;box-shadow:0 0 0 2px highlight;color:highlightText}}.nx-multi-stepper__items{display:flex;margin:0 auto;align-items:center}@media (max-width: 703px){.nx-multi-stepper__items{display:none}}.nx-multi-stepper__group-items{display:flex}.nx-multi-stepper__group{display:flex;flex-direction:column;flex:1 1 auto;max-width:100%}.nx-multi-stepper__group-label{font-size:var(--multi-stepper-group-font-size);line-height:var(--multi-stepper-group-line-height);font-weight:var(--multi-stepper-group-font-weight);letter-spacing:var(--multi-stepper-group-letter-spacing);color:var(--multi-stepper-group-color)}.nx-multi-stepper__group-label.is-disabled{color:var(--multi-stepper-group-disabled-color)}\n"], components: [{ type: i2.NxMultiStepItemComponent, selector: "nx-multi-step-item", inputs: ["direction", "label", "selected", "active", "disabled", "last", "completed"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMultiStepperComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-multi-stepper', providers: [{ provide: NxProgressStepperDirective, useExisting: NxMultiStepperComponent }], changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        '[class.nx-multi-stepper--vertical]': 'direction === "vertical"',
                    }, template: "<span class=\"nx-progress-stepper__title\" *ngIf=\"direction === 'horizontal'\">\n    <ng-content select=\"nx-label\"></ng-content>\n</span>\n\n<div class=\"nx-multi-stepper__items\" role=\"tablist\">\n    <ng-container *ngIf=\"groups.length === 0 || direction === 'horizontal'; else groupsTemplate\">\n        <ng-container *ngFor=\"let step of steps; let i = index; let isLast = last; let isFirst = first\">\n            <nx-multi-step-item\n                (click)=\"!_stepDisabled(i) && step.select()\"\n                (keydown)=\"_onKeydown($event)\"\n                [last]=\"isLast\"\n                [tabindex]=\"_getFocusIndex() === i ? 0 : -1\"\n                [label]=\"step.stepLabel || step.label\"\n                [completed]=\"step.completed\"\n                [selected]=\"selectedIndex === i\"\n                [active]=\"selectedIndex > i\"\n                [disabled]=\"_stepDisabled(i)\"\n                [direction]=\"direction\"\n            >\n            </nx-multi-step-item>\n        </ng-container>\n    </ng-container>\n</div>\n\n<div class=\"labels-container\" *ngIf=\"direction === 'horizontal'\" role=\"tablist\">\n    <div\n        class=\"label\"\n        role=\"tab\"\n        tabindex=\"-1\"\n        [attr.aria-selected]=\"selectedIndex === i\"\n        *ngFor=\"let step of steps; let i = index\"\n        [ngClass]=\"{ 'is-disabled': _stepDisabled(i), 'is-selected': selectedIndex === i }\"\n        (click)=\"!_stepDisabled(i) && step.select()\"\n    >\n        <span>{{ step.label }}</span>\n    </div>\n</div>\n\n<div class=\"nx-progress-stepper__mobile-label\">\n    {{ currentLabel }}\n</div>\n\n<div\n    *ngFor=\"let step of steps; let i = index\"\n    class=\"nx-progress-stepper__content\"\n    role=\"tabpanel\"\n    [id]=\"_getStepContentId(i)\"\n    [attr.aria-label]=\"currentLabel\"\n    [attr.aria-expanded]=\"selectedIndex === i\"\n>\n    <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n\n<ng-template #groupsTemplate>\n    <ng-container *ngFor=\"let group of groups; let i = index\">\n        <div class=\"nx-multi-stepper__group\">\n            <div class=\"nx-multi-stepper__group-label\" [class.is-active]=\"_isGroupActive(i)\" [class.is-disabled]=\"_isGroupDisabled(i)\">\n                {{ group.label }}\n            </div>\n\n            <div class=\"nx-multi-stepper__group-items\">\n                <ng-container *ngFor=\"let step of group.steps; let isLast = last\">\n                    <nx-multi-step-item\n                        (click)=\"!_stepDisabled(_getIndex(step)) && step.select()\"\n                        (keydown)=\"_onKeydown($event)\"\n                        [tabindex]=\"_getFocusIndex() === _getIndex(step) ? 0 : -1\"\n                        [last]=\"isLast\"\n                        [label]=\"step.stepLabel || step.label\"\n                        [completed]=\"step.completed\"\n                        [selected]=\"selectedIndex === _getIndex(step)\"\n                        [active]=\"selectedIndex > _getIndex(step)\"\n                        [disabled]=\"_stepDisabled(_getIndex(step))\"\n                        [direction]=\"direction\"\n                    >\n                    </nx-multi-step-item>\n                </ng-container>\n            </div>\n        </div>\n    </ng-container>\n</ng-template>\n", styles: [":host{display:block}.nx-progress-stepper__content[aria-expanded=false]{height:0;overflow:hidden;visibility:hidden}.nx-progress-stepper__mobile-label{display:none;color:var(--progress-indicator-mobile-color);font-size:var(--progress-indicator-mobile-font-size);line-height:var(--progress-indicator-mobile-line-height);font-weight:var(--progress-indicator-mobile-font-weight);letter-spacing:var(--progress-indicator-mobile-letter-spacing)}@media (max-width: 703px){.nx-progress-stepper__mobile-label{display:block;text-align:center}}.nx-progress-stepper__title{display:block}.nx-progress-stepper__title ::ng-deep nx-label{margin-bottom:24px}\n", ":host{width:100%}@media (min-width: 704px){:host.nx-multi-stepper--vertical{display:flex}}:host.nx-multi-stepper--vertical .nx-progress-stepper__content[aria-expanded=false]{width:0}:host.nx-multi-stepper--vertical .nx-multi-stepper__items{align-items:flex-start;flex-direction:column;margin:0 56px 0 0;max-width:100%}[dir=rtl] :host.nx-multi-stepper--vertical .nx-multi-stepper__items{margin:0 0 0 56px}:host.nx-multi-stepper--vertical .nx-multi-stepper__group-items{flex-direction:column;max-width:100%}:host.nx-multi-stepper--vertical .nx-multi-stepper__group-label{transform:none;border-left:4px solid transparent;margin-bottom:16px;margin-left:6px;padding-left:22px}[dir=rtl] :host.nx-multi-stepper--vertical .nx-multi-stepper__group-label{margin-left:0;margin-left:initial;padding-left:0;padding-left:initial;margin-right:6px;padding-right:22px}:host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label{padding-top:16px;margin-top:16px;border-left-style:dotted;border-left-color:var(--multi-stepper-line-color)}:host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label.is-active{padding-top:36px;padding-bottom:20px;margin-top:-nx-spacer(3xs);margin-bottom:-nx-spacer(3xs);border-left-style:solid;border-left-color:var(--multi-stepper-line-filled-color)}[dir=rtl] :host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label{border-left-style:none;border-right-style:dotted;border-right-color:var(--multi-stepper-line-color)}[dir=rtl] :host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label.is-active{border-left-style:none;border-right-style:solid;border-right-color:var(--multi-stepper-line-filled-color)}:host .labels-container{width:100%;flex:1 1 100%;display:flex;margin:0 auto;vertical-align:top;align-self:flex-start;align-items:flex-start}@media (max-width: 703px){:host .labels-container{display:none}}:host .labels-container .label{flex:1 1 100%;display:flex;align-items:center;justify-content:center;position:relative;font-size:var(--multi-stepper-step-font-size);line-height:var(--multi-stepper-step-line-height);font-weight:var(--multi-stepper-step-font-weight);letter-spacing:var(--multi-stepper-step-letter-spacing);color:var(--multi-stepper-step-color);cursor:pointer;text-align:center}:host .labels-container .label.is-disabled{color:var(--multi-stepper-step-disabled-color);cursor:not-allowed}@media screen and (-ms-high-contrast: active){:host .labels-container .label{color:buttonText}:host .labels-container .label.is-disabled{color:GrayText}:host .labels-container .label:not(.is-disabled){color:buttonText}:host .labels-container .label span{-ms-high-contrast-adjust:none;background-color:buttonFace;border-radius:4px;box-shadow:0 0 0 2px buttonFace}:host .labels-container .label.is-selected span{background-color:highlight;border-radius:4px;box-shadow:0 0 0 2px highlight;color:highlightText}}.nx-multi-stepper__items{display:flex;margin:0 auto;align-items:center}@media (max-width: 703px){.nx-multi-stepper__items{display:none}}.nx-multi-stepper__group-items{display:flex}.nx-multi-stepper__group{display:flex;flex-direction:column;flex:1 1 auto;max-width:100%}.nx-multi-stepper__group-label{font-size:var(--multi-stepper-group-font-size);line-height:var(--multi-stepper-group-line-height);font-weight:var(--multi-stepper-group-font-weight);letter-spacing:var(--multi-stepper-group-letter-spacing);color:var(--multi-stepper-group-color)}.nx-multi-stepper__group-label.is-disabled{color:var(--multi-stepper-group-disabled-color)}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.Directionality, decorators: [{
                    type: Optional
                }] }, { type: i0.ElementRef }]; }, propDecorators: { _stepHeader: [{
                type: ViewChildren,
                args: [NxMultiStepItemComponent]
            }], groups: [{
                type: ContentChildren,
                args: [NxMultiStepperGroupComponent, { descendants: true }]
            }], direction: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,