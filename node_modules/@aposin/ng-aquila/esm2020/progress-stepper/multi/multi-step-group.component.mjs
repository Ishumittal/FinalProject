import { ChangeDetectionStrategy, Component, ContentChildren, Input } from '@angular/core';
import { NxStepComponent } from '../progress-stepper.component';
import * as i0 from "@angular/core";
export class NxMultiStepperGroupComponent {
    constructor(_cdr) {
        this._cdr = _cdr;
    }
    /** Sets the label of a group that is shown to the user. */
    set label(value) {
        this._label = value;
        this._cdr.markForCheck();
    }
    get label() {
        return this._label;
    }
}
NxMultiStepperGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMultiStepperGroupComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
NxMultiStepperGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxMultiStepperGroupComponent, selector: "nx-step-group", inputs: { label: "label" }, queries: [{ propertyName: "steps", predicate: NxStepComponent, descendants: true }], ngImport: i0, template: "<ng-template><ng-content></ng-content></ng-template>\n", changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMultiStepperGroupComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-step-group', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-template><ng-content></ng-content></ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { steps: [{
                type: ContentChildren,
                args: [NxStepComponent, { descendants: true }]
            }], label: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktc3RlcC1ncm91cC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1hcXVpbGEvc3JjL3Byb2dyZXNzLXN0ZXBwZXIvbXVsdGkvbXVsdGktc3RlcC1ncm91cC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1hcXVpbGEvc3JjL3Byb2dyZXNzLXN0ZXBwZXIvbXVsdGkvbXVsdGktc3RlcC1ncm91cC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQXFCLFNBQVMsRUFBRSxlQUFlLEVBQUUsS0FBSyxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBRXpILE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQzs7QUFPaEUsTUFBTSxPQUFPLDRCQUE0QjtJQWVyQyxZQUFvQixJQUF1QjtRQUF2QixTQUFJLEdBQUosSUFBSSxDQUFtQjtJQUFHLENBQUM7SUFYL0MsMkRBQTJEO0lBQzNELElBQ0ksS0FBSyxDQUFDLEtBQWE7UUFDbkIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUM3QixDQUFDO0lBQ0QsSUFBSSxLQUFLO1FBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7O3lIQVpRLDRCQUE0Qjs2R0FBNUIsNEJBQTRCLHVHQUVwQixlQUFlLGdEQ1hwQyx3REFDQTsyRkRRYSw0QkFBNEI7a0JBTHhDLFNBQVM7K0JBRUksZUFBZSxtQkFDUix1QkFBdUIsQ0FBQyxNQUFNO3dHQUlVLEtBQUs7c0JBQTdELGVBQWU7dUJBQUMsZUFBZSxFQUFFLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRTtnQkFJbkQsS0FBSztzQkFEUixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIENvbnRlbnRDaGlsZHJlbiwgSW5wdXQsIFF1ZXJ5TGlzdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBOeFN0ZXBDb21wb25lbnQgfSBmcm9tICcuLi9wcm9ncmVzcy1zdGVwcGVyLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICAgIHRlbXBsYXRlVXJsOiAnLi9tdWx0aS1zdGVwLWdyb3VwLmNvbXBvbmVudC5odG1sJyxcbiAgICBzZWxlY3RvcjogJ254LXN0ZXAtZ3JvdXAnLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBOeE11bHRpU3RlcHBlckdyb3VwQ29tcG9uZW50IHtcbiAgICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICAgIEBDb250ZW50Q2hpbGRyZW4oTnhTdGVwQ29tcG9uZW50LCB7IGRlc2NlbmRhbnRzOiB0cnVlIH0pIHN0ZXBzITogUXVlcnlMaXN0PE54U3RlcENvbXBvbmVudD47XG5cbiAgICAvKiogU2V0cyB0aGUgbGFiZWwgb2YgYSBncm91cCB0aGF0IGlzIHNob3duIHRvIHRoZSB1c2VyLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgc2V0IGxhYmVsKHZhbHVlOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5fbGFiZWwgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5fY2RyLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cbiAgICBnZXQgbGFiZWwoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xhYmVsO1xuICAgIH1cbiAgICBwcml2YXRlIF9sYWJlbCE6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX2NkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHt9XG59XG4iLCI8bmctdGVtcGxhdGU+PG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PjwvbmctdGVtcGxhdGU+XG4iXX0=