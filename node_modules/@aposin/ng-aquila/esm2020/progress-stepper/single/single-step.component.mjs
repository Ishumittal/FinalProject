import { ChangeDetectionStrategy, Component, Input, Optional } from '@angular/core';
import { NxProgressStepperDirective } from '../progress-stepper.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/bidi";
import * as i2 from "@aposin/ng-aquila/progressbar";
import * as i3 from "@angular/common";
export class NxSingleStepperComponent extends NxProgressStepperDirective {
    constructor(_cdr, _dir, _el) {
        super(_cdr, _dir, _el);
        this._rightLabel = 'Next step:';
    }
    /** Sets the label on the right showing the next step. */
    get rightLabel() {
        return this._rightLabel;
    }
    set rightLabel(v) {
        this._rightLabel = v;
    }
    /** @docs-private */
    get progress() {
        return (this.selectedIndex + 1) / this.count;
    }
    /** @docs-private */
    get currentLabel() {
        const step = this.currentStep;
        const label = step.stepLabel || step.label;
        return `
    ${this.currentStepLabel} ${this.selectedIndex + 1}/${this.count}: ${label}
    `;
    }
    /** @docs-private */
    get nextLabel() {
        const step = this.nextStep;
        if (step) {
            const label = step.stepLabel || step.label;
            return `
        ${this.rightLabel} ${label}
      `;
        }
        return null;
    }
}
NxSingleStepperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxSingleStepperComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.Directionality, optional: true }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
NxSingleStepperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxSingleStepperComponent, selector: "nx-single-stepper", inputs: { rightLabel: ["nextLabel", "rightLabel"] }, providers: [{ provide: NxProgressStepperDirective, useExisting: NxSingleStepperComponent }], usesInheritance: true, ngImport: i0, template: "<div class=\"nx-single-step-container\">\n    <span class=\"nx-progress-stepper__title\">\n        <ng-content select=\"nx-label\"></ng-content>\n    </span>\n\n    <nx-progressbar [value]=\"progress\"></nx-progressbar>\n\n    <div class=\"nx-single-step__infos\">\n        <div class=\"nx-single-step__current\">\n            {{ currentLabel }}\n        </div>\n        <div class=\"nx-single-step__next\">\n            {{ nextLabel }}\n        </div>\n    </div>\n\n    <div class=\"nx-progress-stepper__mobile-label\">\n        {{ currentLabel }}\n    </div>\n</div>\n\n<div\n    *ngFor=\"let step of steps; let i = index\"\n    class=\"nx-progress-stepper__content\"\n    role=\"tabpanel\"\n    [id]=\"_getStepContentId(i)\"\n    [attr.aria-label]=\"currentLabel\"\n    [attr.aria-expanded]=\"selectedIndex === i\"\n>\n    <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n", styles: [":host{display:block}.nx-progress-stepper__content[aria-expanded=false]{height:0;overflow:hidden;visibility:hidden}.nx-progress-stepper__mobile-label{display:none;color:var(--progress-indicator-mobile-color);font-size:var(--progress-indicator-mobile-font-size);line-height:var(--progress-indicator-mobile-line-height);font-weight:var(--progress-indicator-mobile-font-weight);letter-spacing:var(--progress-indicator-mobile-letter-spacing)}@media (max-width: 703px){.nx-progress-stepper__mobile-label{display:block;text-align:center}}.nx-progress-stepper__title{display:block}.nx-progress-stepper__title ::ng-deep nx-label{margin-bottom:24px}\n", ":host{display:block}.nx-single-step__infos{display:flex;font-size:var(--single-stepper-step-font-size);line-height:var(--single-stepper-step-line-height);font-weight:var(--single-stepper-step-font-weight);letter-spacing:var(--single-stepper-step-letter-spacing);color:var(--single-stepper-step-color);margin-top:8px}nx-progressbar{margin-bottom:8px;display:block}@media (max-width: 703px){nx-progressbar,.nx-single-step__infos{display:none}}.nx-single-step__next{margin-left:auto}:host-context([dir=rtl]) .nx-single-step__next{margin-right:auto;margin-left:0;margin-left:initial}@media (max-width: 703px){.nx-single-step__next{display:none}}\n"], components: [{ type: i2.NxProgressbarComponent, selector: "nx-progressbar", inputs: ["value"] }], directives: [{ type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxSingleStepperComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-single-stepper', providers: [{ provide: NxProgressStepperDirective, useExisting: NxSingleStepperComponent }], changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"nx-single-step-container\">\n    <span class=\"nx-progress-stepper__title\">\n        <ng-content select=\"nx-label\"></ng-content>\n    </span>\n\n    <nx-progressbar [value]=\"progress\"></nx-progressbar>\n\n    <div class=\"nx-single-step__infos\">\n        <div class=\"nx-single-step__current\">\n            {{ currentLabel }}\n        </div>\n        <div class=\"nx-single-step__next\">\n            {{ nextLabel }}\n        </div>\n    </div>\n\n    <div class=\"nx-progress-stepper__mobile-label\">\n        {{ currentLabel }}\n    </div>\n</div>\n\n<div\n    *ngFor=\"let step of steps; let i = index\"\n    class=\"nx-progress-stepper__content\"\n    role=\"tabpanel\"\n    [id]=\"_getStepContentId(i)\"\n    [attr.aria-label]=\"currentLabel\"\n    [attr.aria-expanded]=\"selectedIndex === i\"\n>\n    <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n", styles: [":host{display:block}.nx-progress-stepper__content[aria-expanded=false]{height:0;overflow:hidden;visibility:hidden}.nx-progress-stepper__mobile-label{display:none;color:var(--progress-indicator-mobile-color);font-size:var(--progress-indicator-mobile-font-size);line-height:var(--progress-indicator-mobile-line-height);font-weight:var(--progress-indicator-mobile-font-weight);letter-spacing:var(--progress-indicator-mobile-letter-spacing)}@media (max-width: 703px){.nx-progress-stepper__mobile-label{display:block;text-align:center}}.nx-progress-stepper__title{display:block}.nx-progress-stepper__title ::ng-deep nx-label{margin-bottom:24px}\n", ":host{display:block}.nx-single-step__infos{display:flex;font-size:var(--single-stepper-step-font-size);line-height:var(--single-stepper-step-line-height);font-weight:var(--single-stepper-step-font-weight);letter-spacing:var(--single-stepper-step-letter-spacing);color:var(--single-stepper-step-color);margin-top:8px}nx-progressbar{margin-bottom:8px;display:block}@media (max-width: 703px){nx-progressbar,.nx-single-step__infos{display:none}}.nx-single-step__next{margin-left:auto}:host-context([dir=rtl]) .nx-single-step__next{margin-right:auto;margin-left:0;margin-left:initial}@media (max-width: 703px){.nx-single-step__next{display:none}}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.Directionality, decorators: [{
                    type: Optional
                }] }, { type: i0.ElementRef }]; }, propDecorators: { rightLabel: [{
                type: Input,
                args: ['nextLabel']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xlLXN0ZXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctYXF1aWxhL3NyYy9wcm9ncmVzcy1zdGVwcGVyL3NpbmdsZS9zaW5nbGUtc3RlcC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1hcXVpbGEvc3JjL3Byb2dyZXNzLXN0ZXBwZXIvc2luZ2xlL3NpbmdsZS1zdGVwLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSx1QkFBdUIsRUFBcUIsU0FBUyxFQUFjLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbkgsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sK0JBQStCLENBQUM7Ozs7O0FBUzNFLE1BQU0sT0FBTyx3QkFBeUIsU0FBUSwwQkFBMEI7SUEwQ3BFLFlBQVksSUFBdUIsRUFBYyxJQUEyQixFQUFFLEdBQTRCO1FBQ3RHLEtBQUssQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBakNuQixnQkFBVyxHQUFHLFlBQVksQ0FBQztJQWtDbkMsQ0FBQztJQTNDRCx5REFBeUQ7SUFDekQsSUFDSSxVQUFVO1FBQ1YsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzVCLENBQUM7SUFDRCxJQUFJLFVBQVUsQ0FBQyxDQUFDO1FBQ1osSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7SUFDekIsQ0FBQztJQUlELG9CQUFvQjtJQUNwQixJQUFJLFFBQVE7UUFDUixPQUFPLENBQUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ2pELENBQUM7SUFFRCxvQkFBb0I7SUFDcEIsSUFBSSxZQUFZO1FBQ1osTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUM5QixNQUFNLEtBQUssR0FBRyxJQUFLLENBQUMsU0FBUyxJQUFJLElBQUssQ0FBQyxLQUFLLENBQUM7UUFFN0MsT0FBTztNQUNULElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLEtBQUs7S0FDeEUsQ0FBQztJQUNGLENBQUM7SUFFRCxvQkFBb0I7SUFDcEIsSUFBSSxTQUFTO1FBQ1QsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUUzQixJQUFJLElBQUksRUFBRTtZQUNOLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQztZQUUzQyxPQUFPO1VBQ1QsSUFBSSxDQUFDLFVBQVUsSUFBSSxLQUFLO09BQzNCLENBQUM7U0FDQztRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7O3FIQXhDUSx3QkFBd0I7eUdBQXhCLHdCQUF3QixpR0FIdEIsQ0FBQyxFQUFFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxXQUFXLEVBQUUsd0JBQXdCLEVBQUUsQ0FBQyxpRENUL0YsdzRCQStCQTsyRkRuQmEsd0JBQXdCO2tCQVBwQyxTQUFTOytCQUNJLG1CQUFtQixhQUdsQixDQUFDLEVBQUUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLFdBQVcsMEJBQTBCLEVBQUUsQ0FBQyxtQkFDMUUsdUJBQXVCLENBQUMsTUFBTTs7MEJBNENULFFBQVE7cUVBdkMxQyxVQUFVO3NCQURiLEtBQUs7dUJBQUMsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGlvbmFsaXR5IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2JpZGknO1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBOeFByb2dyZXNzU3RlcHBlckRpcmVjdGl2ZSB9IGZyb20gJy4uL3Byb2dyZXNzLXN0ZXBwZXIuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdueC1zaW5nbGUtc3RlcHBlcicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3NpbmdsZS1zdGVwLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi4vcHJvZ3Jlc3Mtc3RlcHBlci5jb21wb25lbnQuc2NzcycsICcuL3NpbmdsZS1zdGVwLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBOeFByb2dyZXNzU3RlcHBlckRpcmVjdGl2ZSwgdXNlRXhpc3Rpbmc6IE54U2luZ2xlU3RlcHBlckNvbXBvbmVudCB9XSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgTnhTaW5nbGVTdGVwcGVyQ29tcG9uZW50IGV4dGVuZHMgTnhQcm9ncmVzc1N0ZXBwZXJEaXJlY3RpdmUge1xuICAgIC8qKiBTZXRzIHRoZSBsYWJlbCBvbiB0aGUgcmlnaHQgc2hvd2luZyB0aGUgbmV4dCBzdGVwLiAqL1xuICAgIEBJbnB1dCgnbmV4dExhYmVsJylcbiAgICBnZXQgcmlnaHRMYWJlbCgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5fcmlnaHRMYWJlbDtcbiAgICB9XG4gICAgc2V0IHJpZ2h0TGFiZWwodikge1xuICAgICAgICB0aGlzLl9yaWdodExhYmVsID0gdjtcbiAgICB9XG5cbiAgICBwcml2YXRlIF9yaWdodExhYmVsID0gJ05leHQgc3RlcDonO1xuXG4gICAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgICBnZXQgcHJvZ3Jlc3MoKSB7XG4gICAgICAgIHJldHVybiAodGhpcy5zZWxlY3RlZEluZGV4ICsgMSkgLyB0aGlzLmNvdW50O1xuICAgIH1cblxuICAgIC8qKiBAZG9jcy1wcml2YXRlICovXG4gICAgZ2V0IGN1cnJlbnRMYWJlbCgpIHtcbiAgICAgICAgY29uc3Qgc3RlcCA9IHRoaXMuY3VycmVudFN0ZXA7XG4gICAgICAgIGNvbnN0IGxhYmVsID0gc3RlcCEuc3RlcExhYmVsIHx8IHN0ZXAhLmxhYmVsO1xuXG4gICAgICAgIHJldHVybiBgXG4gICAgJHt0aGlzLmN1cnJlbnRTdGVwTGFiZWx9ICR7dGhpcy5zZWxlY3RlZEluZGV4ICsgMX0vJHt0aGlzLmNvdW50fTogJHtsYWJlbH1cbiAgICBgO1xuICAgIH1cblxuICAgIC8qKiBAZG9jcy1wcml2YXRlICovXG4gICAgZ2V0IG5leHRMYWJlbCgpIHtcbiAgICAgICAgY29uc3Qgc3RlcCA9IHRoaXMubmV4dFN0ZXA7XG5cbiAgICAgICAgaWYgKHN0ZXApIHtcbiAgICAgICAgICAgIGNvbnN0IGxhYmVsID0gc3RlcC5zdGVwTGFiZWwgfHwgc3RlcC5sYWJlbDtcblxuICAgICAgICAgICAgcmV0dXJuIGBcbiAgICAgICAgJHt0aGlzLnJpZ2h0TGFiZWx9ICR7bGFiZWx9XG4gICAgICBgO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoX2NkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIEBPcHRpb25hbCgpIF9kaXI6IERpcmVjdGlvbmFsaXR5IHwgbnVsbCwgX2VsOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50Pikge1xuICAgICAgICBzdXBlcihfY2RyLCBfZGlyLCBfZWwpO1xuICAgIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJueC1zaW5nbGUtc3RlcC1jb250YWluZXJcIj5cbiAgICA8c3BhbiBjbGFzcz1cIm54LXByb2dyZXNzLXN0ZXBwZXJfX3RpdGxlXCI+XG4gICAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIm54LWxhYmVsXCI+PC9uZy1jb250ZW50PlxuICAgIDwvc3Bhbj5cblxuICAgIDxueC1wcm9ncmVzc2JhciBbdmFsdWVdPVwicHJvZ3Jlc3NcIj48L254LXByb2dyZXNzYmFyPlxuXG4gICAgPGRpdiBjbGFzcz1cIm54LXNpbmdsZS1zdGVwX19pbmZvc1wiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwibngtc2luZ2xlLXN0ZXBfX2N1cnJlbnRcIj5cbiAgICAgICAgICAgIHt7IGN1cnJlbnRMYWJlbCB9fVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm54LXNpbmdsZS1zdGVwX19uZXh0XCI+XG4gICAgICAgICAgICB7eyBuZXh0TGFiZWwgfX1cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwibngtcHJvZ3Jlc3Mtc3RlcHBlcl9fbW9iaWxlLWxhYmVsXCI+XG4gICAgICAgIHt7IGN1cnJlbnRMYWJlbCB9fVxuICAgIDwvZGl2PlxuPC9kaXY+XG5cbjxkaXZcbiAgICAqbmdGb3I9XCJsZXQgc3RlcCBvZiBzdGVwczsgbGV0IGkgPSBpbmRleFwiXG4gICAgY2xhc3M9XCJueC1wcm9ncmVzcy1zdGVwcGVyX19jb250ZW50XCJcbiAgICByb2xlPVwidGFicGFuZWxcIlxuICAgIFtpZF09XCJfZ2V0U3RlcENvbnRlbnRJZChpKVwiXG4gICAgW2F0dHIuYXJpYS1sYWJlbF09XCJjdXJyZW50TGFiZWxcIlxuICAgIFthdHRyLmFyaWEtZXhwYW5kZWRdPVwic2VsZWN0ZWRJbmRleCA9PT0gaVwiXG4+XG4gICAgPG5nLWNvbnRhaW5lciBbbmdUZW1wbGF0ZU91dGxldF09XCJzdGVwLmNvbnRlbnRcIj48L25nLWNvbnRhaW5lcj5cbjwvZGl2PlxuIl19