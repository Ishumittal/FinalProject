import { NgModule } from '@angular/core';
import { getScrollStrategyDefaultProviders, getScrollStrategyFactoryProviders } from './nx-scroll-strategy.helpers';
import * as i0 from "@angular/core";
/**
 * Provide a specific scroll strategy for a select collection of overlay-based components:
 *
 * - autocomplete
 * - context-menu
 * - datepicker
 * - dropdown
 * - notification-panel
 *
 * These components will be affected only if configured separately in the `extraComponents` property:
 *
 * - dialog
 * - overlay
 * - popover
 * - tooltip
 *
 * @example
 * NxScrollStrategyModule.withConfig({
 *   scrollStrategy: 'close',
 *   scrollStrategyOptions: { threshold: 100 },
 * })
 *
 * @example
 * NxScrollStrategyModule.withFactory({
 *   scrollStrategyFactory: overlay => () => overlay.scrollStrategies.close({ threshold: 100 }),
 * })
 */
export class NxScrollStrategyModule {
    static withConfig(config) {
        return {
            ngModule: NxScrollStrategyModule,
            providers: getScrollStrategyDefaultProviders(config),
        };
    }
    static withFactory(config) {
        return {
            ngModule: NxScrollStrategyModule,
            providers: getScrollStrategyFactoryProviders(config),
        };
    }
}
NxScrollStrategyModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxScrollStrategyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NxScrollStrategyModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxScrollStrategyModule });
NxScrollStrategyModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxScrollStrategyModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxScrollStrategyModule, decorators: [{
            type: NgModule
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibngtc2Nyb2xsLXN0cmF0ZWd5Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWFxdWlsYS9zcmMvY29uZmlnL254LXNjcm9sbC1zdHJhdGVneS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0sOEJBQThCLENBQUM7O0FBR3BIOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQTBCRztBQUVILE1BQU0sT0FBTyxzQkFBc0I7SUFDL0IsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFxQztRQUNuRCxPQUFPO1lBQ0gsUUFBUSxFQUFFLHNCQUFzQjtZQUNoQyxTQUFTLEVBQUUsaUNBQWlDLENBQUMsTUFBTSxDQUFDO1NBQ3ZELENBQUM7SUFDTixDQUFDO0lBRUQsTUFBTSxDQUFDLFdBQVcsQ0FBQyxNQUFxQztRQUNwRCxPQUFPO1lBQ0gsUUFBUSxFQUFFLHNCQUFzQjtZQUNoQyxTQUFTLEVBQUUsaUNBQWlDLENBQUMsTUFBTSxDQUFDO1NBQ3ZELENBQUM7SUFDTixDQUFDOzttSEFiUSxzQkFBc0I7b0hBQXRCLHNCQUFzQjtvSEFBdEIsc0JBQXNCOzJGQUF0QixzQkFBc0I7a0JBRGxDLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBnZXRTY3JvbGxTdHJhdGVneURlZmF1bHRQcm92aWRlcnMsIGdldFNjcm9sbFN0cmF0ZWd5RmFjdG9yeVByb3ZpZGVycyB9IGZyb20gJy4vbngtc2Nyb2xsLXN0cmF0ZWd5LmhlbHBlcnMnO1xuaW1wb3J0IHsgTnhTY3JvbGxTdHJhdGVneURlZmF1bHRDb25maWcsIE54U2Nyb2xsU3RyYXRlZ3lGYWN0b3J5Q29uZmlnIH0gZnJvbSAnLi9ueC1zY3JvbGwtc3RyYXRlZ3kubW9kZWxzJztcblxuLyoqXG4gKiBQcm92aWRlIGEgc3BlY2lmaWMgc2Nyb2xsIHN0cmF0ZWd5IGZvciBhIHNlbGVjdCBjb2xsZWN0aW9uIG9mIG92ZXJsYXktYmFzZWQgY29tcG9uZW50czpcbiAqXG4gKiAtIGF1dG9jb21wbGV0ZVxuICogLSBjb250ZXh0LW1lbnVcbiAqIC0gZGF0ZXBpY2tlclxuICogLSBkcm9wZG93blxuICogLSBub3RpZmljYXRpb24tcGFuZWxcbiAqXG4gKiBUaGVzZSBjb21wb25lbnRzIHdpbGwgYmUgYWZmZWN0ZWQgb25seSBpZiBjb25maWd1cmVkIHNlcGFyYXRlbHkgaW4gdGhlIGBleHRyYUNvbXBvbmVudHNgIHByb3BlcnR5OlxuICpcbiAqIC0gZGlhbG9nXG4gKiAtIG92ZXJsYXlcbiAqIC0gcG9wb3ZlclxuICogLSB0b29sdGlwXG4gKlxuICogQGV4YW1wbGVcbiAqIE54U2Nyb2xsU3RyYXRlZ3lNb2R1bGUud2l0aENvbmZpZyh7XG4gKiAgIHNjcm9sbFN0cmF0ZWd5OiAnY2xvc2UnLFxuICogICBzY3JvbGxTdHJhdGVneU9wdGlvbnM6IHsgdGhyZXNob2xkOiAxMDAgfSxcbiAqIH0pXG4gKlxuICogQGV4YW1wbGVcbiAqIE54U2Nyb2xsU3RyYXRlZ3lNb2R1bGUud2l0aEZhY3Rvcnkoe1xuICogICBzY3JvbGxTdHJhdGVneUZhY3Rvcnk6IG92ZXJsYXkgPT4gKCkgPT4gb3ZlcmxheS5zY3JvbGxTdHJhdGVnaWVzLmNsb3NlKHsgdGhyZXNob2xkOiAxMDAgfSksXG4gKiB9KVxuICovXG5ATmdNb2R1bGUoKVxuZXhwb3J0IGNsYXNzIE54U2Nyb2xsU3RyYXRlZ3lNb2R1bGUge1xuICAgIHN0YXRpYyB3aXRoQ29uZmlnKGNvbmZpZzogTnhTY3JvbGxTdHJhdGVneURlZmF1bHRDb25maWcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPE54U2Nyb2xsU3RyYXRlZ3lNb2R1bGU+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5nTW9kdWxlOiBOeFNjcm9sbFN0cmF0ZWd5TW9kdWxlLFxuICAgICAgICAgICAgcHJvdmlkZXJzOiBnZXRTY3JvbGxTdHJhdGVneURlZmF1bHRQcm92aWRlcnMoY29uZmlnKSxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBzdGF0aWMgd2l0aEZhY3RvcnkoY29uZmlnOiBOeFNjcm9sbFN0cmF0ZWd5RmFjdG9yeUNvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnM8TnhTY3JvbGxTdHJhdGVneU1vZHVsZT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IE54U2Nyb2xsU3RyYXRlZ3lNb2R1bGUsXG4gICAgICAgICAgICBwcm92aWRlcnM6IGdldFNjcm9sbFN0cmF0ZWd5RmFjdG9yeVByb3ZpZGVycyhjb25maWcpLFxuICAgICAgICB9O1xuICAgIH1cbn1cbiJdfQ==