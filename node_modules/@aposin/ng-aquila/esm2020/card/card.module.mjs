import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NxErrorModule } from '@aposin/ng-aquila/base';
import { NxCheckboxModule } from '@aposin/ng-aquila/checkbox';
import { NxIconModule } from '@aposin/ng-aquila/icon';
import { NxCardComponent } from './card.component';
import { NxCardFooterComponent } from './card-footer.component';
import { NxCardHeaderComponent } from './card-header.component';
import { NxSelectableCardComponent } from './selectable-card.component';
import * as i0 from "@angular/core";
export class NxCardModule {
}
NxCardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxCardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NxCardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxCardModule, declarations: [NxCardComponent, NxSelectableCardComponent, NxCardHeaderComponent, NxCardFooterComponent], imports: [CommonModule, NxIconModule, NxErrorModule, NxCheckboxModule], exports: [NxCardComponent, NxSelectableCardComponent, NxCardHeaderComponent, NxCardFooterComponent, NxErrorModule] });
NxCardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxCardModule, imports: [[CommonModule, NxIconModule, NxErrorModule, NxCheckboxModule], NxErrorModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxCardModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NxCardComponent, NxSelectableCardComponent, NxCardHeaderComponent, NxCardFooterComponent],
                    exports: [NxCardComponent, NxSelectableCardComponent, NxCardHeaderComponent, NxCardFooterComponent, NxErrorModule],
                    imports: [CommonModule, NxIconModule, NxErrorModule, NxCheckboxModule],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1hcXVpbGEvc3JjL2NhcmQvY2FyZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUV0RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDbkQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDaEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDaEUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7O0FBT3hFLE1BQU0sT0FBTyxZQUFZOzt5R0FBWixZQUFZOzBHQUFaLFlBQVksaUJBSk4sZUFBZSxFQUFFLHlCQUF5QixFQUFFLHFCQUFxQixFQUFFLHFCQUFxQixhQUU3RixZQUFZLEVBQUUsWUFBWSxFQUFFLGFBQWEsRUFBRSxnQkFBZ0IsYUFEM0QsZUFBZSxFQUFFLHlCQUF5QixFQUFFLHFCQUFxQixFQUFFLHFCQUFxQixFQUFFLGFBQWE7MEdBR3hHLFlBQVksWUFGWixDQUFDLFlBQVksRUFBRSxZQUFZLEVBQUUsYUFBYSxFQUFFLGdCQUFnQixDQUFDLEVBRDhCLGFBQWE7MkZBR3hHLFlBQVk7a0JBTHhCLFFBQVE7bUJBQUM7b0JBQ04sWUFBWSxFQUFFLENBQUMsZUFBZSxFQUFFLHlCQUF5QixFQUFFLHFCQUFxQixFQUFFLHFCQUFxQixDQUFDO29CQUN4RyxPQUFPLEVBQUUsQ0FBQyxlQUFlLEVBQUUseUJBQXlCLEVBQUUscUJBQXFCLEVBQUUscUJBQXFCLEVBQUUsYUFBYSxDQUFDO29CQUNsSCxPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsWUFBWSxFQUFFLGFBQWEsRUFBRSxnQkFBZ0IsQ0FBQztpQkFDekUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE54RXJyb3JNb2R1bGUgfSBmcm9tICdAYXBvc2luL25nLWFxdWlsYS9iYXNlJztcbmltcG9ydCB7IE54Q2hlY2tib3hNb2R1bGUgfSBmcm9tICdAYXBvc2luL25nLWFxdWlsYS9jaGVja2JveCc7XG5pbXBvcnQgeyBOeEljb25Nb2R1bGUgfSBmcm9tICdAYXBvc2luL25nLWFxdWlsYS9pY29uJztcblxuaW1wb3J0IHsgTnhDYXJkQ29tcG9uZW50IH0gZnJvbSAnLi9jYXJkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOeENhcmRGb290ZXJDb21wb25lbnQgfSBmcm9tICcuL2NhcmQtZm9vdGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOeENhcmRIZWFkZXJDb21wb25lbnQgfSBmcm9tICcuL2NhcmQtaGVhZGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOeFNlbGVjdGFibGVDYXJkQ29tcG9uZW50IH0gZnJvbSAnLi9zZWxlY3RhYmxlLWNhcmQuY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgICBkZWNsYXJhdGlvbnM6IFtOeENhcmRDb21wb25lbnQsIE54U2VsZWN0YWJsZUNhcmRDb21wb25lbnQsIE54Q2FyZEhlYWRlckNvbXBvbmVudCwgTnhDYXJkRm9vdGVyQ29tcG9uZW50XSxcbiAgICBleHBvcnRzOiBbTnhDYXJkQ29tcG9uZW50LCBOeFNlbGVjdGFibGVDYXJkQ29tcG9uZW50LCBOeENhcmRIZWFkZXJDb21wb25lbnQsIE54Q2FyZEZvb3RlckNvbXBvbmVudCwgTnhFcnJvck1vZHVsZV0sXG4gICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgTnhJY29uTW9kdWxlLCBOeEVycm9yTW9kdWxlLCBOeENoZWNrYm94TW9kdWxlXSxcbn0pXG5leHBvcnQgY2xhc3MgTnhDYXJkTW9kdWxlIHt9XG4iXX0=