import { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';
import { BACKSPACE, DELETE, ENTER } from '@angular/cdk/keycodes';
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/a11y";
import * as i2 from "@aposin/ng-aquila/icon";
import * as i3 from "@angular/common";
export class NxTagComponent {
    constructor(_cdr, _elementRef, _focusMonitor) {
        this._cdr = _cdr;
        this._elementRef = _elementRef;
        this._focusMonitor = _focusMonitor;
        this._tabindex = -1;
        /** An event is dispatched each time when the tag is clicked. */
        this.clicked = new EventEmitter();
        /** An event is dispatched each time when the tag is removed. */
        this.removed = new EventEmitter();
        this._focusMonitor.monitor(this._elementRef);
    }
    /** Whether the tag is removeable. */
    set removable(value) {
        this._removable = coerceBooleanProperty(value);
        this._cdr.markForCheck();
    }
    get removable() {
        return this._removable;
    }
    /**
     * Sets the tab-index of a tag. Default value: -1.
     *
     * If `nxAllowTagDeletion` of the taglist is set to true, the default value is 0.
     */
    set tabindex(value) {
        this._tabindex = coerceNumberProperty(value);
        this._cdr.markForCheck();
    }
    get tabindex() {
        return this.removable ? 0 : this._tabindex;
    }
    /** Sets the value of the tag. */
    set value(value) {
        if (this._value !== value) {
            this._value = value;
            this._cdr.markForCheck();
        }
    }
    get value() {
        return this._value;
    }
    ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef);
    }
    /** @docs-private */
    // Emit the removed event that the parent can remove the value
    removeClickHandler(event) {
        event.stopPropagation();
        this.removed.emit(this.value);
    }
    /** @docs-private */
    removeKeyHandler(event) {
        if (this.removable && (event.keyCode === DELETE || event.keyCode === BACKSPACE)) {
            event.preventDefault();
            event.stopPropagation();
            this.removed.emit(this.value);
        }
        if (event.keyCode === ENTER) {
            this.clicked.emit(this.value);
        }
    }
    /** @docs-private */
    tagClickHandler() {
        this.clicked.emit(this.value);
    }
}
NxTagComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxTagComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });
NxTagComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxTagComponent, selector: "nx-tag", inputs: { removable: "removable", tabindex: "tabindex", value: "value" }, outputs: { clicked: "clicked", removed: "removed" }, host: { listeners: { "click": "tagClickHandler()", "keydown": "removeKeyHandler($event)" }, properties: { "attr.tabindex": "tabindex" } }, ngImport: i0, template: "{{ value }}\n<span role=\"link\" aria-label=\"close\" class=\"nx-tag__close\" *ngIf=\"removable\" (click)=\"removeClickHandler($event)\">\n    <nx-icon class=\"nx-tag__close-icon\" name=\"close\"></nx-icon>\n</span>\n", styles: [":host{font-size:var(--taglist-font-size);line-height:var(--taglist-line-height);font-weight:var(--taglist-font-weight);letter-spacing:var(--taglist-letter-spacing);height:auto;max-width:100%;color:var(--taglist-color);background-color:var(--taglist-background-color);padding:6px 14px;display:flex;align-items:center;border:2px solid var(--taglist-border-color);border-radius:4px;-webkit-user-select:none;user-select:none;transition:background-color .2s ease,box-shadow .2s ease;cursor:pointer}:host:hover{border-color:var(--taglist-hover-border-color);color:var(--taglist-hover-color);background-color:var(--taglist-hover-background-color)}:host:focus{outline:2px solid transparent}:host.cdk-keyboard-focused{box-shadow:var(--focus-box-shadow)}@media screen and (-ms-high-contrast: active),(forced-colors: active){:host.cdk-keyboard-focused{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}.nx-tag__close-icon{outline:none;display:block;font-size:var(--taglist-close-icon-size)}.nx-tag__close{margin-left:8px}:host-context([dir=rtl]) .nx-tag__close{margin-right:8px;margin-left:0;margin-left:initial}:host-context(.nx-taglist--keyword){padding:14px 22px}@media screen and (-ms-high-contrast: active){:host,:host:hover,:host:focus{color:buttonText;background-color:buttonFace;border-color:buttonText;-ms-high-contrast-adjust:none}}\n"], components: [{ type: i2.NxIconComponent, selector: "nx-icon", inputs: ["name", "outline", "fill", "size", "font"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxTagComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-tag', changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        '(click)': 'tagClickHandler()',
                        '(keydown)': 'removeKeyHandler($event)',
                        '[attr.tabindex]': 'tabindex',
                    }, template: "{{ value }}\n<span role=\"link\" aria-label=\"close\" class=\"nx-tag__close\" *ngIf=\"removable\" (click)=\"removeClickHandler($event)\">\n    <nx-icon class=\"nx-tag__close-icon\" name=\"close\"></nx-icon>\n</span>\n", styles: [":host{font-size:var(--taglist-font-size);line-height:var(--taglist-line-height);font-weight:var(--taglist-font-weight);letter-spacing:var(--taglist-letter-spacing);height:auto;max-width:100%;color:var(--taglist-color);background-color:var(--taglist-background-color);padding:6px 14px;display:flex;align-items:center;border:2px solid var(--taglist-border-color);border-radius:4px;-webkit-user-select:none;user-select:none;transition:background-color .2s ease,box-shadow .2s ease;cursor:pointer}:host:hover{border-color:var(--taglist-hover-border-color);color:var(--taglist-hover-color);background-color:var(--taglist-hover-background-color)}:host:focus{outline:2px solid transparent}:host.cdk-keyboard-focused{box-shadow:var(--focus-box-shadow)}@media screen and (-ms-high-contrast: active),(forced-colors: active){:host.cdk-keyboard-focused{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}.nx-tag__close-icon{outline:none;display:block;font-size:var(--taglist-close-icon-size)}.nx-tag__close{margin-left:8px}:host-context([dir=rtl]) .nx-tag__close{margin-right:8px;margin-left:0;margin-left:initial}:host-context(.nx-taglist--keyword){padding:14px 22px}@media screen and (-ms-high-contrast: active){:host,:host:hover,:host:focus{color:buttonText;background-color:buttonFace;border-color:buttonText;-ms-high-contrast-adjust:none}}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i1.FocusMonitor }]; }, propDecorators: { removable: [{
                type: Input
            }], tabindex: [{
                type: Input
            }], value: [{
                type: Input
            }], clicked: [{
                type: Output
            }], removed: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWFxdWlsYS9zcmMvdGFnbGlzdC90YWcuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctYXF1aWxhL3NyYy90YWdsaXN0L3RhZy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQWdCLHFCQUFxQixFQUFFLG9CQUFvQixFQUFlLE1BQU0sdUJBQXVCLENBQUM7QUFDL0csT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDakUsT0FBTyxFQUFFLHVCQUF1QixFQUFxQixTQUFTLEVBQWMsWUFBWSxFQUFFLEtBQUssRUFBYSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7O0FBYTFJLE1BQU0sT0FBTyxjQUFjO0lBOEN2QixZQUFvQixJQUF1QixFQUFVLFdBQXVCLEVBQVUsYUFBMkI7UUFBN0YsU0FBSSxHQUFKLElBQUksQ0FBbUI7UUFBVSxnQkFBVyxHQUFYLFdBQVcsQ0FBWTtRQUFVLGtCQUFhLEdBQWIsYUFBYSxDQUFjO1FBakN6RyxjQUFTLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUE0QnZCLGdFQUFnRTtRQUM3QyxZQUFPLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFDeEUsZ0VBQWdFO1FBQzdDLFlBQU8sR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUdwRSxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDakQsQ0FBQztJQTdDRCxxQ0FBcUM7SUFDckMsSUFDSSxTQUFTLENBQUMsS0FBbUI7UUFDN0IsSUFBSSxDQUFDLFVBQVUsR0FBRyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMvQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFDRCxJQUFJLFNBQVM7UUFDVCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDM0IsQ0FBQztJQUdEOzs7O09BSUc7SUFDSCxJQUNJLFFBQVEsQ0FBQyxLQUFrQjtRQUMzQixJQUFJLENBQUMsU0FBUyxHQUFHLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUNELElBQUksUUFBUTtRQUNSLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQy9DLENBQUM7SUFHRCxpQ0FBaUM7SUFDakMsSUFDSSxLQUFLLENBQUMsS0FBYTtRQUNuQixJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssS0FBSyxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1lBQ3BCLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7U0FDNUI7SUFDTCxDQUFDO0lBQ0QsSUFBSSxLQUFLO1FBQ0wsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFXRCxXQUFXO1FBQ1AsSUFBSSxDQUFDLGFBQWEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFFRCxvQkFBb0I7SUFDcEIsOERBQThEO0lBQzlELGtCQUFrQixDQUFDLEtBQWlCO1FBQ2hDLEtBQUssQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELG9CQUFvQjtJQUNwQixnQkFBZ0IsQ0FBQyxLQUFvQjtRQUNqQyxJQUFJLElBQUksQ0FBQyxTQUFTLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxLQUFLLE1BQU0sSUFBSSxLQUFLLENBQUMsT0FBTyxLQUFLLFNBQVMsQ0FBQyxFQUFFO1lBQzdFLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7WUFDeEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ2pDO1FBRUQsSUFBSSxLQUFLLENBQUMsT0FBTyxLQUFLLEtBQUssRUFBRTtZQUN6QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDakM7SUFDTCxDQUFDO0lBRUQsb0JBQW9CO0lBQ3BCLGVBQWU7UUFDWCxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7MkdBN0VRLGNBQWM7K0ZBQWQsY0FBYyx3VENoQjNCLDJOQUlBOzJGRFlhLGNBQWM7a0JBWDFCLFNBQVM7K0JBQ0ksUUFBUSxtQkFFRCx1QkFBdUIsQ0FBQyxNQUFNLFFBRXpDO3dCQUNGLFNBQVMsRUFBRSxtQkFBbUI7d0JBQzlCLFdBQVcsRUFBRSwwQkFBMEI7d0JBQ3ZDLGlCQUFpQixFQUFFLFVBQVU7cUJBQ2hDOzRKQU9HLFNBQVM7c0JBRFosS0FBSztnQkFnQkYsUUFBUTtzQkFEWCxLQUFLO2dCQVlGLEtBQUs7c0JBRFIsS0FBSztnQkFZYSxPQUFPO3NCQUF6QixNQUFNO2dCQUVZLE9BQU87c0JBQXpCLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGb2N1c01vbml0b3IgfSBmcm9tICdAYW5ndWxhci9jZGsvYTExeSc7XG5pbXBvcnQgeyBCb29sZWFuSW5wdXQsIGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSwgY29lcmNlTnVtYmVyUHJvcGVydHksIE51bWJlcklucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2NvZXJjaW9uJztcbmltcG9ydCB7IEJBQ0tTUEFDRSwgREVMRVRFLCBFTlRFUiB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9rZXljb2Rlcyc7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25EZXN0cm95LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdueC10YWcnLFxuICAgIHRlbXBsYXRlVXJsOiAndGFnLmNvbXBvbmVudC5odG1sJyxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBzdHlsZVVybHM6IFsndGFnLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgaG9zdDoge1xuICAgICAgICAnKGNsaWNrKSc6ICd0YWdDbGlja0hhbmRsZXIoKScsXG4gICAgICAgICcoa2V5ZG93biknOiAncmVtb3ZlS2V5SGFuZGxlcigkZXZlbnQpJyxcbiAgICAgICAgJ1thdHRyLnRhYmluZGV4XSc6ICd0YWJpbmRleCcsXG4gICAgfSxcbn0pXG5leHBvcnQgY2xhc3MgTnhUYWdDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgX3JlbW92YWJsZSE6IGJvb2xlYW47XG5cbiAgICAvKiogV2hldGhlciB0aGUgdGFnIGlzIHJlbW92ZWFibGUuICovXG4gICAgQElucHV0KClcbiAgICBzZXQgcmVtb3ZhYmxlKHZhbHVlOiBCb29sZWFuSW5wdXQpIHtcbiAgICAgICAgdGhpcy5fcmVtb3ZhYmxlID0gY29lcmNlQm9vbGVhblByb3BlcnR5KHZhbHVlKTtcbiAgICAgICAgdGhpcy5fY2RyLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cbiAgICBnZXQgcmVtb3ZhYmxlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcmVtb3ZhYmxlO1xuICAgIH1cblxuICAgIHByaXZhdGUgX3RhYmluZGV4ID0gLTE7XG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgdGFiLWluZGV4IG9mIGEgdGFnLiBEZWZhdWx0IHZhbHVlOiAtMS5cbiAgICAgKlxuICAgICAqIElmIGBueEFsbG93VGFnRGVsZXRpb25gIG9mIHRoZSB0YWdsaXN0IGlzIHNldCB0byB0cnVlLCB0aGUgZGVmYXVsdCB2YWx1ZSBpcyAwLlxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgc2V0IHRhYmluZGV4KHZhbHVlOiBOdW1iZXJJbnB1dCkge1xuICAgICAgICB0aGlzLl90YWJpbmRleCA9IGNvZXJjZU51bWJlclByb3BlcnR5KHZhbHVlKTtcbiAgICAgICAgdGhpcy5fY2RyLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cbiAgICBnZXQgdGFiaW5kZXgoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVtb3ZhYmxlID8gMCA6IHRoaXMuX3RhYmluZGV4O1xuICAgIH1cblxuICAgIHByaXZhdGUgX3ZhbHVlITogc3RyaW5nO1xuICAgIC8qKiBTZXRzIHRoZSB2YWx1ZSBvZiB0aGUgdGFnLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgc2V0IHZhbHVlKHZhbHVlOiBzdHJpbmcpIHtcbiAgICAgICAgaWYgKHRoaXMuX3ZhbHVlICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgdGhpcy5fdmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgICAgIHRoaXMuX2Nkci5tYXJrRm9yQ2hlY2soKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgdmFsdWUoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xuICAgIH1cblxuICAgIC8qKiBBbiBldmVudCBpcyBkaXNwYXRjaGVkIGVhY2ggdGltZSB3aGVuIHRoZSB0YWcgaXMgY2xpY2tlZC4gKi9cbiAgICBAT3V0cHV0KCkgcmVhZG9ubHkgY2xpY2tlZDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgICAvKiogQW4gZXZlbnQgaXMgZGlzcGF0Y2hlZCBlYWNoIHRpbWUgd2hlbiB0aGUgdGFnIGlzIHJlbW92ZWQuICovXG4gICAgQE91dHB1dCgpIHJlYWRvbmx5IHJlbW92ZWQ6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9jZHI6IENoYW5nZURldGVjdG9yUmVmLCBwcml2YXRlIF9lbGVtZW50UmVmOiBFbGVtZW50UmVmLCBwcml2YXRlIF9mb2N1c01vbml0b3I6IEZvY3VzTW9uaXRvcikge1xuICAgICAgICB0aGlzLl9mb2N1c01vbml0b3IubW9uaXRvcih0aGlzLl9lbGVtZW50UmVmKTtcbiAgICB9XG5cbiAgICBuZ09uRGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5fZm9jdXNNb25pdG9yLnN0b3BNb25pdG9yaW5nKHRoaXMuX2VsZW1lbnRSZWYpO1xuICAgIH1cblxuICAgIC8qKiBAZG9jcy1wcml2YXRlICovXG4gICAgLy8gRW1pdCB0aGUgcmVtb3ZlZCBldmVudCB0aGF0IHRoZSBwYXJlbnQgY2FuIHJlbW92ZSB0aGUgdmFsdWVcbiAgICByZW1vdmVDbGlja0hhbmRsZXIoZXZlbnQ6IE1vdXNlRXZlbnQpIHtcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIHRoaXMucmVtb3ZlZC5lbWl0KHRoaXMudmFsdWUpO1xuICAgIH1cblxuICAgIC8qKiBAZG9jcy1wcml2YXRlICovXG4gICAgcmVtb3ZlS2V5SGFuZGxlcihldmVudDogS2V5Ym9hcmRFdmVudCkge1xuICAgICAgICBpZiAodGhpcy5yZW1vdmFibGUgJiYgKGV2ZW50LmtleUNvZGUgPT09IERFTEVURSB8fCBldmVudC5rZXlDb2RlID09PSBCQUNLU1BBQ0UpKSB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICB0aGlzLnJlbW92ZWQuZW1pdCh0aGlzLnZhbHVlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChldmVudC5rZXlDb2RlID09PSBFTlRFUikge1xuICAgICAgICAgICAgdGhpcy5jbGlja2VkLmVtaXQodGhpcy52YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICAgIHRhZ0NsaWNrSGFuZGxlcigpIHtcbiAgICAgICAgdGhpcy5jbGlja2VkLmVtaXQodGhpcy52YWx1ZSk7XG4gICAgfVxufVxuIiwie3sgdmFsdWUgfX1cbjxzcGFuIHJvbGU9XCJsaW5rXCIgYXJpYS1sYWJlbD1cImNsb3NlXCIgY2xhc3M9XCJueC10YWdfX2Nsb3NlXCIgKm5nSWY9XCJyZW1vdmFibGVcIiAoY2xpY2spPVwicmVtb3ZlQ2xpY2tIYW5kbGVyKCRldmVudClcIj5cbiAgICA8bngtaWNvbiBjbGFzcz1cIm54LXRhZ19fY2xvc2UtaWNvblwiIG5hbWU9XCJjbG9zZVwiPjwvbngtaWNvbj5cbjwvc3Bhbj5cbiJdfQ==