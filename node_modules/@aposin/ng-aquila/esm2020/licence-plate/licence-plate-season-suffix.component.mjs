import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@aposin/ng-aquila/formfield";
/**
 * Suffix for seasonal licence plate inputs.
 */
export class NxLicencePlateSeasonSuffixComponent {
    constructor(_formField) {
        this._formField = _formField;
        /**
         * Start month of the licence plate.
         */
        this.startMonth = 1;
        /**
         * End month of the licence plate.
         */
        this.endMonth = 1;
    }
    get _disabled() {
        return this._formField._control?.disabled;
    }
    get _hasOutline() {
        return this._formField.appearance === 'outline';
    }
    _format(value) {
        if (typeof value !== 'number') {
            return '';
        }
        return value >= 10 ? value.toString() : '0' + value;
    }
}
NxLicencePlateSeasonSuffixComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxLicencePlateSeasonSuffixComponent, deps: [{ token: i1.NxFormfieldComponent }], target: i0.ɵɵFactoryTarget.Component });
NxLicencePlateSeasonSuffixComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxLicencePlateSeasonSuffixComponent, selector: "nx-licence-plate-season-suffix", inputs: { startMonth: "startMonth", endMonth: "endMonth" }, host: { properties: { "class.is-disabled": "this._disabled", "class.has-outline": "this._hasOutline" } }, ngImport: i0, template: `
        <span>{{ _format(startMonth) }}</span>
        <span>{{ _format(endMonth) }}</span>
    `, isInline: true, styles: [":host{display:flex;flex-direction:column;justify-content:center;font-size:var(--paragraph-05-font-size);line-height:var(--paragraph-05-line-height);font-weight:var(--paragraph-05-font-weight);letter-spacing:var(--paragraph-05-letter-spacing);line-height:14px;color:var(--text-01)}span{width:14px}span:first-child{border-bottom:1px solid}:host(.has-outline){font-size:var(--paragraph-04-font-size);line-height:var(--paragraph-04-line-height);font-weight:var(--paragraph-04-font-weight);letter-spacing:var(--paragraph-04-letter-spacing);line-height:16px}:host(.is-disabled) span{border-color:var(--formfield-disabled-border-color)}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxLicencePlateSeasonSuffixComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-licence-plate-season-suffix', template: `
        <span>{{ _format(startMonth) }}</span>
        <span>{{ _format(endMonth) }}</span>
    `, changeDetection: ChangeDetectionStrategy.OnPush, styles: [":host{display:flex;flex-direction:column;justify-content:center;font-size:var(--paragraph-05-font-size);line-height:var(--paragraph-05-line-height);font-weight:var(--paragraph-05-font-weight);letter-spacing:var(--paragraph-05-letter-spacing);line-height:14px;color:var(--text-01)}span{width:14px}span:first-child{border-bottom:1px solid}:host(.has-outline){font-size:var(--paragraph-04-font-size);line-height:var(--paragraph-04-line-height);font-weight:var(--paragraph-04-font-weight);letter-spacing:var(--paragraph-04-letter-spacing);line-height:16px}:host(.is-disabled) span{border-color:var(--formfield-disabled-border-color)}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.NxFormfieldComponent }]; }, propDecorators: { startMonth: [{
                type: Input
            }], endMonth: [{
                type: Input
            }], _disabled: [{
                type: HostBinding,
                args: ['class.is-disabled']
            }], _hasOutline: [{
                type: HostBinding,
                args: ['class.has-outline']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGljZW5jZS1wbGF0ZS1zZWFzb24tc3VmZml4LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWFxdWlsYS9zcmMvbGljZW5jZS1wbGF0ZS9saWNlbmNlLXBsYXRlLXNlYXNvbi1zdWZmaXguY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBR3ZGOztHQUVHO0FBVUgsTUFBTSxPQUFPLG1DQUFtQztJQXVCNUMsWUFBb0IsVUFBZ0M7UUFBaEMsZUFBVSxHQUFWLFVBQVUsQ0FBc0I7UUF0QnBEOztXQUVHO1FBRUgsZUFBVSxHQUFHLENBQUMsQ0FBQztRQUVmOztXQUVHO1FBRUgsYUFBUSxHQUFHLENBQUMsQ0FBQztJQVkwQyxDQUFDO0lBVnhELElBQ0ksU0FBUztRQUNULE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDO0lBQzlDLENBQUM7SUFFRCxJQUNJLFdBQVc7UUFDWCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxLQUFLLFNBQVMsQ0FBQztJQUNwRCxDQUFDO0lBSUQsT0FBTyxDQUFDLEtBQWE7UUFDakIsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7WUFDM0IsT0FBTyxFQUFFLENBQUM7U0FDYjtRQUNELE9BQU8sS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsS0FBSyxDQUFDO0lBQ3hELENBQUM7O2dJQTlCUSxtQ0FBbUM7b0hBQW5DLG1DQUFtQyw0T0FQbEM7OztLQUdUOzJGQUlRLG1DQUFtQztrQkFUL0MsU0FBUzsrQkFDSSxnQ0FBZ0MsWUFDaEM7OztLQUdULG1CQUVnQix1QkFBdUIsQ0FBQyxNQUFNOzJHQU8vQyxVQUFVO3NCQURULEtBQUs7Z0JBT04sUUFBUTtzQkFEUCxLQUFLO2dCQUlGLFNBQVM7c0JBRFosV0FBVzt1QkFBQyxtQkFBbUI7Z0JBTTVCLFdBQVc7c0JBRGQsV0FBVzt1QkFBQyxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBIb3N0QmluZGluZywgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE54Rm9ybWZpZWxkQ29tcG9uZW50IH0gZnJvbSAnQGFwb3Npbi9uZy1hcXVpbGEvZm9ybWZpZWxkJztcblxuLyoqXG4gKiBTdWZmaXggZm9yIHNlYXNvbmFsIGxpY2VuY2UgcGxhdGUgaW5wdXRzLlxuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ254LWxpY2VuY2UtcGxhdGUtc2Vhc29uLXN1ZmZpeCcsXG4gICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPHNwYW4+e3sgX2Zvcm1hdChzdGFydE1vbnRoKSB9fTwvc3Bhbj5cbiAgICAgICAgPHNwYW4+e3sgX2Zvcm1hdChlbmRNb250aCkgfX08L3NwYW4+XG4gICAgYCxcbiAgICBzdHlsZVVybHM6IFsnbGljZW5jZS1wbGF0ZS1zZWFzb24tc3VmZml4LmNvbXBvbmVudC5zY3NzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIE54TGljZW5jZVBsYXRlU2Vhc29uU3VmZml4Q29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBTdGFydCBtb250aCBvZiB0aGUgbGljZW5jZSBwbGF0ZS5cbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIHN0YXJ0TW9udGggPSAxO1xuXG4gICAgLyoqXG4gICAgICogRW5kIG1vbnRoIG9mIHRoZSBsaWNlbmNlIHBsYXRlLlxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAgZW5kTW9udGggPSAxO1xuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pcy1kaXNhYmxlZCcpXG4gICAgZ2V0IF9kaXNhYmxlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Zvcm1GaWVsZC5fY29udHJvbD8uZGlzYWJsZWQ7XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5oYXMtb3V0bGluZScpXG4gICAgZ2V0IF9oYXNPdXRsaW5lKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fZm9ybUZpZWxkLmFwcGVhcmFuY2UgPT09ICdvdXRsaW5lJztcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9mb3JtRmllbGQ6IE54Rm9ybWZpZWxkQ29tcG9uZW50KSB7fVxuXG4gICAgX2Zvcm1hdCh2YWx1ZTogbnVtYmVyKTogc3RyaW5nIHtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWUgPj0gMTAgPyB2YWx1ZS50b1N0cmluZygpIDogJzAnICsgdmFsdWU7XG4gICAgfVxufVxuIl19