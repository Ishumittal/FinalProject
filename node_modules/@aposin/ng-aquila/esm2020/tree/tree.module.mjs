import { CdkTreeModule } from '@angular/cdk/tree';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NxTreeNodeActionItem } from './action-item.directive';
import { NxTreeNodeComponent, NxTreeNodeDefDirective } from './node';
import { NxTreeNodeOutletDirective } from './outlet';
import { NxTreeNodePaddingDirective } from './padding';
import { NxTreeNodeToggleDirective } from './toggle';
import { NxTreeComponent } from './tree.component';
import * as i0 from "@angular/core";
export class NxTreeModule {
}
NxTreeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxTreeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NxTreeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxTreeModule, declarations: [NxTreeComponent,
        NxTreeNodeComponent,
        NxTreeNodeDefDirective,
        NxTreeNodePaddingDirective,
        NxTreeNodeToggleDirective,
        NxTreeNodeOutletDirective,
        NxTreeNodeActionItem], imports: [CdkTreeModule, CommonModule], exports: [NxTreeComponent,
        NxTreeNodeComponent,
        NxTreeNodeDefDirective,
        NxTreeNodePaddingDirective,
        NxTreeNodeToggleDirective,
        NxTreeNodeOutletDirective,
        NxTreeNodeActionItem] });
NxTreeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxTreeModule, imports: [[CdkTreeModule, CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxTreeModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CdkTreeModule, CommonModule],
                    declarations: [
                        NxTreeComponent,
                        NxTreeNodeComponent,
                        NxTreeNodeDefDirective,
                        NxTreeNodePaddingDirective,
                        NxTreeNodeToggleDirective,
                        NxTreeNodeOutletDirective,
                        NxTreeNodeActionItem,
                    ],
                    exports: [
                        NxTreeComponent,
                        NxTreeNodeComponent,
                        NxTreeNodeDefDirective,
                        NxTreeNodePaddingDirective,
                        NxTreeNodeToggleDirective,
                        NxTreeNodeOutletDirective,
                        NxTreeNodeActionItem,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1hcXVpbGEvc3JjL3RyZWUvdHJlZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxzQkFBc0IsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUNyRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDckQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3ZELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUNyRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7O0FBdUJuRCxNQUFNLE9BQU8sWUFBWTs7eUdBQVosWUFBWTswR0FBWixZQUFZLGlCQWxCakIsZUFBZTtRQUNmLG1CQUFtQjtRQUNuQixzQkFBc0I7UUFDdEIsMEJBQTBCO1FBQzFCLHlCQUF5QjtRQUN6Qix5QkFBeUI7UUFDekIsb0JBQW9CLGFBUmQsYUFBYSxFQUFFLFlBQVksYUFXakMsZUFBZTtRQUNmLG1CQUFtQjtRQUNuQixzQkFBc0I7UUFDdEIsMEJBQTBCO1FBQzFCLHlCQUF5QjtRQUN6Qix5QkFBeUI7UUFDekIsb0JBQW9COzBHQUdmLFlBQVksWUFwQlosQ0FBQyxhQUFhLEVBQUUsWUFBWSxDQUFDOzJGQW9CN0IsWUFBWTtrQkFyQnhCLFFBQVE7bUJBQUM7b0JBQ04sT0FBTyxFQUFFLENBQUMsYUFBYSxFQUFFLFlBQVksQ0FBQztvQkFDdEMsWUFBWSxFQUFFO3dCQUNWLGVBQWU7d0JBQ2YsbUJBQW1CO3dCQUNuQixzQkFBc0I7d0JBQ3RCLDBCQUEwQjt3QkFDMUIseUJBQXlCO3dCQUN6Qix5QkFBeUI7d0JBQ3pCLG9CQUFvQjtxQkFDdkI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNMLGVBQWU7d0JBQ2YsbUJBQW1CO3dCQUNuQixzQkFBc0I7d0JBQ3RCLDBCQUEwQjt3QkFDMUIseUJBQXlCO3dCQUN6Qix5QkFBeUI7d0JBQ3pCLG9CQUFvQjtxQkFDdkI7aUJBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDZGtUcmVlTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3RyZWUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE54VHJlZU5vZGVBY3Rpb25JdGVtIH0gZnJvbSAnLi9hY3Rpb24taXRlbS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTnhUcmVlTm9kZUNvbXBvbmVudCwgTnhUcmVlTm9kZURlZkRpcmVjdGl2ZSB9IGZyb20gJy4vbm9kZSc7XG5pbXBvcnQgeyBOeFRyZWVOb2RlT3V0bGV0RGlyZWN0aXZlIH0gZnJvbSAnLi9vdXRsZXQnO1xuaW1wb3J0IHsgTnhUcmVlTm9kZVBhZGRpbmdEaXJlY3RpdmUgfSBmcm9tICcuL3BhZGRpbmcnO1xuaW1wb3J0IHsgTnhUcmVlTm9kZVRvZ2dsZURpcmVjdGl2ZSB9IGZyb20gJy4vdG9nZ2xlJztcbmltcG9ydCB7IE54VHJlZUNvbXBvbmVudCB9IGZyb20gJy4vdHJlZS5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtDZGtUcmVlTW9kdWxlLCBDb21tb25Nb2R1bGVdLFxuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBOeFRyZWVDb21wb25lbnQsXG4gICAgICAgIE54VHJlZU5vZGVDb21wb25lbnQsXG4gICAgICAgIE54VHJlZU5vZGVEZWZEaXJlY3RpdmUsXG4gICAgICAgIE54VHJlZU5vZGVQYWRkaW5nRGlyZWN0aXZlLFxuICAgICAgICBOeFRyZWVOb2RlVG9nZ2xlRGlyZWN0aXZlLFxuICAgICAgICBOeFRyZWVOb2RlT3V0bGV0RGlyZWN0aXZlLFxuICAgICAgICBOeFRyZWVOb2RlQWN0aW9uSXRlbSxcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgTnhUcmVlQ29tcG9uZW50LFxuICAgICAgICBOeFRyZWVOb2RlQ29tcG9uZW50LFxuICAgICAgICBOeFRyZWVOb2RlRGVmRGlyZWN0aXZlLFxuICAgICAgICBOeFRyZWVOb2RlUGFkZGluZ0RpcmVjdGl2ZSxcbiAgICAgICAgTnhUcmVlTm9kZVRvZ2dsZURpcmVjdGl2ZSxcbiAgICAgICAgTnhUcmVlTm9kZU91dGxldERpcmVjdGl2ZSxcbiAgICAgICAgTnhUcmVlTm9kZUFjdGlvbkl0ZW0sXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgTnhUcmVlTW9kdWxlIHt9XG4iXX0=