import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { clamp } from '@aposin/ng-aquila/utils';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
let progressbarId = 0;
export class NxProgressbarComponent {
    constructor() {
        /** @docs-private */
        this.progressbarId = `nx-progress-bar-${progressbarId++}`;
        this._value = 0;
    }
    /** Sets the value of the progress bar. Defaults to zero. Mirrored to aria-value now. */
    get value() {
        return this._value;
    }
    set value(value) {
        this._value = clamp(value || 0); // TODO properly coerce input value
    }
    _primaryTransform() {
        const scale = this.value;
        return { transform: `scaleX(${scale})` };
    }
}
NxProgressbarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxProgressbarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
NxProgressbarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxProgressbarComponent, selector: "nx-progressbar", inputs: { value: "value" }, host: { properties: { "attr.aria-valuenow": "value" } }, ngImport: i0, template: "<div class=\"nx-progress__track\">\n    <div class=\"nx-progress__indicator\" [ngStyle]=\"_primaryTransform()\"></div>\n</div>\n", styles: [":host{display:block;height:4px;overflow:hidden;position:relative;width:100%}.nx-progress__track{background-color:var(--progressbar-background-color);height:100%}.nx-progress__indicator{transform-origin:top left;height:100%;position:absolute;width:100%}:host-context([dir=rtl]) .nx-progress__indicator{transform-origin:top right}.nx-progress__indicator:after{height:100%;position:absolute;width:100%;animation:none;content:\"\";display:inline-block;left:0;background-color:var(--progressbar-indicator-color)}:host-context([dir=rtl]) .nx-progress__indicator:after{right:0;left:auto}@media screen and (-ms-high-contrast: active){:host{height:8px}.nx-progress__track{border:1px solid windowFrame;border-radius:2px}.nx-progress__indicator{border-right:1px solid windowFrame}[dir=rtl] .nx-progress__indicator{border-right:none;border-left:1px solid windowFrame}.nx-progress__indicator:after{background:highlight}}\n"], directives: [{ type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxProgressbarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-progressbar', changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        '[attr.aria-valuenow]': 'value',
                    }, template: "<div class=\"nx-progress__track\">\n    <div class=\"nx-progress__indicator\" [ngStyle]=\"_primaryTransform()\"></div>\n</div>\n", styles: [":host{display:block;height:4px;overflow:hidden;position:relative;width:100%}.nx-progress__track{background-color:var(--progressbar-background-color);height:100%}.nx-progress__indicator{transform-origin:top left;height:100%;position:absolute;width:100%}:host-context([dir=rtl]) .nx-progress__indicator{transform-origin:top right}.nx-progress__indicator:after{height:100%;position:absolute;width:100%;animation:none;content:\"\";display:inline-block;left:0;background-color:var(--progressbar-indicator-color)}:host-context([dir=rtl]) .nx-progress__indicator:after{right:0;left:auto}@media screen and (-ms-high-contrast: active){:host{height:8px}.nx-progress__track{border:1px solid windowFrame;border-radius:2px}.nx-progress__indicator{border-right:1px solid windowFrame}[dir=rtl] .nx-progress__indicator{border-right:none;border-left:1px solid windowFrame}.nx-progress__indicator:after{background:highlight}}\n"] }]
        }], propDecorators: { value: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3NiYXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctYXF1aWxhL3NyYy9wcm9ncmVzc2Jhci9wcm9ncmVzc2Jhci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1hcXVpbGEvc3JjL3Byb2dyZXNzYmFyL3Byb2dyZXNzYmFyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQzs7O0FBRWhELElBQUksYUFBYSxHQUFHLENBQUMsQ0FBQztBQVd0QixNQUFNLE9BQU8sc0JBQXNCO0lBVG5DO1FBVUksb0JBQW9CO1FBQ3BCLGtCQUFhLEdBQUcsbUJBQW1CLGFBQWEsRUFBRSxFQUFFLENBQUM7UUFVN0MsV0FBTSxHQUFHLENBQUMsQ0FBQztLQU10QjtJQWRHLHdGQUF3RjtJQUN4RixJQUNJLEtBQUs7UUFDTCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDdkIsQ0FBQztJQUNELElBQUksS0FBSyxDQUFDLEtBQWtCO1FBQ3hCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFFLEtBQWEsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLG1DQUFtQztJQUNqRixDQUFDO0lBR0QsaUJBQWlCO1FBQ2IsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUN6QixPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsS0FBSyxHQUFHLEVBQUUsQ0FBQztJQUM3QyxDQUFDOzttSEFqQlEsc0JBQXNCO3VHQUF0QixzQkFBc0IsMklDZm5DLGtJQUdBOzJGRFlhLHNCQUFzQjtrQkFUbEMsU0FBUzsrQkFDSSxnQkFBZ0IsbUJBRVQsdUJBQXVCLENBQUMsTUFBTSxRQUV6Qzt3QkFDRixzQkFBc0IsRUFBRSxPQUFPO3FCQUNsQzs4QkFRRyxLQUFLO3NCQURSLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOdW1iZXJJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY2xhbXAgfSBmcm9tICdAYXBvc2luL25nLWFxdWlsYS91dGlscyc7XG5cbmxldCBwcm9ncmVzc2JhcklkID0gMDtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdueC1wcm9ncmVzc2JhcicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3Byb2dyZXNzYmFyLmNvbXBvbmVudC5odG1sJyxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBzdHlsZVVybHM6IFsnLi9wcm9ncmVzc2Jhci5jb21wb25lbnQuc2NzcyddLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1thdHRyLmFyaWEtdmFsdWVub3ddJzogJ3ZhbHVlJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBOeFByb2dyZXNzYmFyQ29tcG9uZW50IHtcbiAgICAvKiogQGRvY3MtcHJpdmF0ZSAqL1xuICAgIHByb2dyZXNzYmFySWQgPSBgbngtcHJvZ3Jlc3MtYmFyLSR7cHJvZ3Jlc3NiYXJJZCsrfWA7XG5cbiAgICAvKiogU2V0cyB0aGUgdmFsdWUgb2YgdGhlIHByb2dyZXNzIGJhci4gRGVmYXVsdHMgdG8gemVyby4gTWlycm9yZWQgdG8gYXJpYS12YWx1ZSBub3cuICovXG4gICAgQElucHV0KClcbiAgICBnZXQgdmFsdWUoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xuICAgIH1cbiAgICBzZXQgdmFsdWUodmFsdWU6IE51bWJlcklucHV0KSB7XG4gICAgICAgIHRoaXMuX3ZhbHVlID0gY2xhbXAoKHZhbHVlIGFzIGFueSkgfHwgMCk7IC8vIFRPRE8gcHJvcGVybHkgY29lcmNlIGlucHV0IHZhbHVlXG4gICAgfVxuICAgIHByaXZhdGUgX3ZhbHVlID0gMDtcblxuICAgIF9wcmltYXJ5VHJhbnNmb3JtKCkge1xuICAgICAgICBjb25zdCBzY2FsZSA9IHRoaXMudmFsdWU7XG4gICAgICAgIHJldHVybiB7IHRyYW5zZm9ybTogYHNjYWxlWCgke3NjYWxlfSlgIH07XG4gICAgfVxufVxuIiwiPGRpdiBjbGFzcz1cIm54LXByb2dyZXNzX190cmFja1wiPlxuICAgIDxkaXYgY2xhc3M9XCJueC1wcm9ncmVzc19faW5kaWNhdG9yXCIgW25nU3R5bGVdPVwiX3ByaW1hcnlUcmFuc2Zvcm0oKVwiPjwvZGl2PlxuPC9kaXY+XG4iXX0=