import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
const DEFAULT_SIZE = 'small';
export class NxSpinnerComponent {
    constructor(_cdr) {
        this._cdr = _cdr;
        this._size = DEFAULT_SIZE;
        this._negative = false;
    }
    /** Sets the size of the spinner. Default is 'small'. */
    set size(value) {
        if (value !== this._size) {
            this._size = value;
            this._cdr.markForCheck();
        }
    }
    get size() {
        return this._size;
    }
    /** Whether the spinner should use a negative styling. */
    set negative(value) {
        if (value !== this._negative) {
            this._negative = coerceBooleanProperty(value);
            this._cdr.markForCheck();
        }
    }
    get negative() {
        return this._negative;
    }
}
NxSpinnerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxSpinnerComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
NxSpinnerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxSpinnerComponent, selector: "nx-spinner", inputs: { size: ["nxSize", "size"], negative: "negative" }, host: { properties: { "class.nx-spinner--small": "size === \"small\"", "class.nx-spinner--medium": "size === \"medium\"", "class.nx-spinner--large": "size === \"large\"", "class.nx-spinner--negative": "negative", "attr.role": "\"status\"", "attr.aria-busy": "\"true\"", "attr.aria-live": "\"assertive\"" } }, ngImport: i0, template: "<div class=\"nx-spinner__spin-block\">\n    <div class=\"nx-spinner__edge-left\"></div>\n    <div class=\"nx-spinner__edge-right\"></div>\n</div>\n", styles: ["@keyframes spin{0%{transform:rotate(45deg)}to{transform:rotate(405deg)}}:host{position:relative;display:block}:host(.nx-spinner--small){width:16px;height:16px}:host(.nx-spinner--medium){width:24px;height:24px}:host(.nx-spinner--large){width:40px;height:40px}.nx-spinner__spin-block{width:100%;height:100%;transform:rotate(45deg);border-style:solid;border-radius:50%;border-color:var(--spinner-indicator-color) var(--spinner-background-color) var(--spinner-background-color) var(--spinner-background-color);animation-name:spin;animation-duration:.8s;animation-iteration-count:infinite;animation-timing-function:linear}:host(.nx-spinner--small) .nx-spinner__spin-block{border-width:1.6px}:host(.nx-spinner--medium) .nx-spinner__spin-block{border-width:2.4px}:host(.nx-spinner--large) .nx-spinner__spin-block{border-width:4px}.nx-spinner__edge-left,.nx-spinner__edge-right{width:12%;height:12%;border-radius:50%;background-color:var(--spinner-indicator-color);position:absolute;top:4%}:host(.nx-spinner--small) .nx-spinner__edge-left,:host(.nx-spinner--small) .nx-spinner__edge-right{width:10%;height:10%}.nx-spinner__edge-left{left:4%}.nx-spinner__edge-right{right:4%}:host(.nx-spinner--negative) .nx-spinner__spin-block{border-color:var(--spinner-negative-indicator-color) var(--spinner-negative-background-color) var(--spinner-negative-background-color) var(--spinner-negative-background-color)}:host(.nx-spinner--negative) .nx-spinner__edge-left,:host(.nx-spinner--negative) .nx-spinner__edge-right{background-color:var(--spinner-negative-indicator-color)}@media screen and (-ms-high-contrast: active){:host .nx-spinner__spin-block,:host.nx-spinner--negative .nx-spinner__spin-block{border-color:window highlight highlight highlight}}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxSpinnerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-spinner', changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        '[class.nx-spinner--small]': 'size === "small"',
                        '[class.nx-spinner--medium]': 'size === "medium"',
                        '[class.nx-spinner--large]': 'size === "large"',
                        '[class.nx-spinner--negative]': 'negative',
                        '[attr.role]': '"status"',
                        '[attr.aria-busy]': '"true"',
                        '[attr.aria-live]': '"assertive"',
                    }, template: "<div class=\"nx-spinner__spin-block\">\n    <div class=\"nx-spinner__edge-left\"></div>\n    <div class=\"nx-spinner__edge-right\"></div>\n</div>\n", styles: ["@keyframes spin{0%{transform:rotate(45deg)}to{transform:rotate(405deg)}}:host{position:relative;display:block}:host(.nx-spinner--small){width:16px;height:16px}:host(.nx-spinner--medium){width:24px;height:24px}:host(.nx-spinner--large){width:40px;height:40px}.nx-spinner__spin-block{width:100%;height:100%;transform:rotate(45deg);border-style:solid;border-radius:50%;border-color:var(--spinner-indicator-color) var(--spinner-background-color) var(--spinner-background-color) var(--spinner-background-color);animation-name:spin;animation-duration:.8s;animation-iteration-count:infinite;animation-timing-function:linear}:host(.nx-spinner--small) .nx-spinner__spin-block{border-width:1.6px}:host(.nx-spinner--medium) .nx-spinner__spin-block{border-width:2.4px}:host(.nx-spinner--large) .nx-spinner__spin-block{border-width:4px}.nx-spinner__edge-left,.nx-spinner__edge-right{width:12%;height:12%;border-radius:50%;background-color:var(--spinner-indicator-color);position:absolute;top:4%}:host(.nx-spinner--small) .nx-spinner__edge-left,:host(.nx-spinner--small) .nx-spinner__edge-right{width:10%;height:10%}.nx-spinner__edge-left{left:4%}.nx-spinner__edge-right{right:4%}:host(.nx-spinner--negative) .nx-spinner__spin-block{border-color:var(--spinner-negative-indicator-color) var(--spinner-negative-background-color) var(--spinner-negative-background-color) var(--spinner-negative-background-color)}:host(.nx-spinner--negative) .nx-spinner__edge-left,:host(.nx-spinner--negative) .nx-spinner__edge-right{background-color:var(--spinner-negative-indicator-color)}@media screen and (-ms-high-contrast: active){:host .nx-spinner__spin-block,:host.nx-spinner--negative .nx-spinner__spin-block{border-color:window highlight highlight highlight}}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { size: [{
                type: Input,
                args: ['nxSize']
            }], negative: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Bpbm5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1hcXVpbGEvc3JjL3NwaW5uZXIvc3Bpbm5lci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1hcXVpbGEvc3JjL3NwaW5uZXIvc3Bpbm5lci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWdCLHFCQUFxQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDNUUsT0FBTyxFQUFFLHVCQUF1QixFQUFxQixTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUs3RixNQUFNLFlBQVksR0FBRyxPQUFPLENBQUM7QUFpQjdCLE1BQU0sT0FBTyxrQkFBa0I7SUE2QjNCLFlBQW9CLElBQXVCO1FBQXZCLFNBQUksR0FBSixJQUFJLENBQW1CO1FBNUJuQyxVQUFLLEdBQWdCLFlBQVksQ0FBQztRQWNsQyxjQUFTLEdBQUcsS0FBSyxDQUFDO0lBY29CLENBQUM7SUExQi9DLHdEQUF3RDtJQUN4RCxJQUNJLElBQUksQ0FBQyxLQUFrQjtRQUN2QixJQUFJLEtBQUssS0FBSyxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ3RCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1lBQ25CLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7U0FDNUI7SUFDTCxDQUFDO0lBQ0QsSUFBSSxJQUFJO1FBQ0osT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3RCLENBQUM7SUFJRCx5REFBeUQ7SUFDekQsSUFDSSxRQUFRLENBQUMsS0FBbUI7UUFDNUIsSUFBSSxLQUFLLEtBQUssSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUMxQixJQUFJLENBQUMsU0FBUyxHQUFHLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzlDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7U0FDNUI7SUFDTCxDQUFDO0lBQ0QsSUFBSSxRQUFRO1FBQ1IsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQzFCLENBQUM7OytHQTNCUSxrQkFBa0I7bUdBQWxCLGtCQUFrQixtYUN2Qi9CLHFKQUlBOzJGRG1CYSxrQkFBa0I7a0JBZjlCLFNBQVM7K0JBQ0ksWUFBWSxtQkFFTCx1QkFBdUIsQ0FBQyxNQUFNLFFBRXpDO3dCQUNGLDJCQUEyQixFQUFFLGtCQUFrQjt3QkFDL0MsNEJBQTRCLEVBQUUsbUJBQW1CO3dCQUNqRCwyQkFBMkIsRUFBRSxrQkFBa0I7d0JBQy9DLDhCQUE4QixFQUFFLFVBQVU7d0JBQzFDLGFBQWEsRUFBRSxVQUFVO3dCQUN6QixrQkFBa0IsRUFBRSxRQUFRO3dCQUM1QixrQkFBa0IsRUFBRSxhQUFhO3FCQUNwQzt3R0FPRyxJQUFJO3NCQURQLEtBQUs7dUJBQUMsUUFBUTtnQkFlWCxRQUFRO3NCQURYLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb29sZWFuSW5wdXQsIGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqIE9wdGlvbnMgZm9yIHNpemluZyBvZiB0aGUgc3Bpbm5lci4gKi9cbmV4cG9ydCB0eXBlIFNwaW5uZXJTaXplID0gJ3NtYWxsJyB8ICdtZWRpdW0nIHwgJ2xhcmdlJztcblxuY29uc3QgREVGQVVMVF9TSVpFID0gJ3NtYWxsJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdueC1zcGlubmVyJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vc3Bpbm5lci5jb21wb25lbnQuaHRtbCcsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgc3R5bGVVcmxzOiBbJy4vc3Bpbm5lci5jb21wb25lbnQuc2NzcyddLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1tjbGFzcy5ueC1zcGlubmVyLS1zbWFsbF0nOiAnc2l6ZSA9PT0gXCJzbWFsbFwiJyxcbiAgICAgICAgJ1tjbGFzcy5ueC1zcGlubmVyLS1tZWRpdW1dJzogJ3NpemUgPT09IFwibWVkaXVtXCInLFxuICAgICAgICAnW2NsYXNzLm54LXNwaW5uZXItLWxhcmdlXSc6ICdzaXplID09PSBcImxhcmdlXCInLFxuICAgICAgICAnW2NsYXNzLm54LXNwaW5uZXItLW5lZ2F0aXZlXSc6ICduZWdhdGl2ZScsXG4gICAgICAgICdbYXR0ci5yb2xlXSc6ICdcInN0YXR1c1wiJyxcbiAgICAgICAgJ1thdHRyLmFyaWEtYnVzeV0nOiAnXCJ0cnVlXCInLFxuICAgICAgICAnW2F0dHIuYXJpYS1saXZlXSc6ICdcImFzc2VydGl2ZVwiJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBOeFNwaW5uZXJDb21wb25lbnQge1xuICAgIHByaXZhdGUgX3NpemU6IFNwaW5uZXJTaXplID0gREVGQVVMVF9TSVpFO1xuXG4gICAgLyoqIFNldHMgdGhlIHNpemUgb2YgdGhlIHNwaW5uZXIuIERlZmF1bHQgaXMgJ3NtYWxsJy4gKi9cbiAgICBASW5wdXQoJ254U2l6ZScpXG4gICAgc2V0IHNpemUodmFsdWU6IFNwaW5uZXJTaXplKSB7XG4gICAgICAgIGlmICh2YWx1ZSAhPT0gdGhpcy5fc2l6ZSkge1xuICAgICAgICAgICAgdGhpcy5fc2l6ZSA9IHZhbHVlO1xuICAgICAgICAgICAgdGhpcy5fY2RyLm1hcmtGb3JDaGVjaygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldCBzaXplKCk6IFNwaW5uZXJTaXplIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NpemU7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBfbmVnYXRpdmUgPSBmYWxzZTtcblxuICAgIC8qKiBXaGV0aGVyIHRoZSBzcGlubmVyIHNob3VsZCB1c2UgYSBuZWdhdGl2ZSBzdHlsaW5nLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgc2V0IG5lZ2F0aXZlKHZhbHVlOiBCb29sZWFuSW5wdXQpIHtcbiAgICAgICAgaWYgKHZhbHVlICE9PSB0aGlzLl9uZWdhdGl2ZSkge1xuICAgICAgICAgICAgdGhpcy5fbmVnYXRpdmUgPSBjb2VyY2VCb29sZWFuUHJvcGVydHkodmFsdWUpO1xuICAgICAgICAgICAgdGhpcy5fY2RyLm1hcmtGb3JDaGVjaygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldCBuZWdhdGl2ZSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX25lZ2F0aXZlO1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX2NkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHt9XG59XG4iLCI8ZGl2IGNsYXNzPVwibngtc3Bpbm5lcl9fc3Bpbi1ibG9ja1wiPlxuICAgIDxkaXYgY2xhc3M9XCJueC1zcGlubmVyX19lZGdlLWxlZnRcIj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwibngtc3Bpbm5lcl9fZWRnZS1yaWdodFwiPjwvZGl2PlxuPC9kaXY+XG4iXX0=