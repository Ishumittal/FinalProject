import { Component, Input, ViewChild, ViewContainerRef } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@aposin/ng-aquila/icon";
export class NxListIconComponent {
}
NxListIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxListIconComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
NxListIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxListIconComponent, selector: "li[nxListIcon]", inputs: { name: ["nxListIcon", "name"] }, host: { properties: { "class.nx-list__icon-wrapper": "true" } }, viewQueries: [{ propertyName: "viewRefPrefix", first: true, predicate: ["viewRefPrefix"], descendants: true, read: ViewContainerRef }], ngImport: i0, template: `<span class="nx-list__icon">
            <nx-icon [name]="name"></nx-icon>
        </span>
        <ng-content></ng-content>`, isInline: true, components: [{ type: i1.NxIconComponent, selector: "nx-icon", inputs: ["name", "outline", "fill", "size", "font"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxListIconComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'li[nxListIcon]',
                    host: {
                        '[class.nx-list__icon-wrapper]': 'true',
                    },
                    template: `<span class="nx-list__icon">
            <nx-icon [name]="name"></nx-icon>
        </span>
        <ng-content></ng-content>`,
                }]
        }], propDecorators: { viewRefPrefix: [{
                type: ViewChild,
                args: ['viewRefPrefix', { read: ViewContainerRef }]
            }], name: [{
                type: Input,
                args: ['nxListIcon']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1pY29uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWFxdWlsYS9zcmMvbGlzdC9saXN0LWljb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBWTlFLE1BQU0sT0FBTyxtQkFBbUI7O2dIQUFuQixtQkFBbUI7b0dBQW5CLG1CQUFtQiw0UEFFUSxnQkFBZ0IsNkJBUDFDOzs7a0NBR29COzJGQUVyQixtQkFBbUI7a0JBVi9CLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsSUFBSSxFQUFFO3dCQUNGLCtCQUErQixFQUFFLE1BQU07cUJBQzFDO29CQUNELFFBQVEsRUFBRTs7O2tDQUdvQjtpQkFDakM7OEJBRzJELGFBQWE7c0JBQXBFLFNBQVM7dUJBQUMsZUFBZSxFQUFFLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFO2dCQUdqQyxJQUFJO3NCQUF4QixLQUFLO3VCQUFDLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBWaWV3Q2hpbGQsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdsaVtueExpc3RJY29uXScsXG4gICAgaG9zdDoge1xuICAgICAgICAnW2NsYXNzLm54LWxpc3RfX2ljb24td3JhcHBlcl0nOiAndHJ1ZScsXG4gICAgfSxcbiAgICB0ZW1wbGF0ZTogYDxzcGFuIGNsYXNzPVwibngtbGlzdF9faWNvblwiPlxuICAgICAgICAgICAgPG54LWljb24gW25hbWVdPVwibmFtZVwiPjwvbngtaWNvbj5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+YCxcbn0pXG5leHBvcnQgY2xhc3MgTnhMaXN0SWNvbkNvbXBvbmVudCB7XG4gICAgLyoqIEBkb2NzLXByaXZhdGUgKi9cbiAgICBAVmlld0NoaWxkKCd2aWV3UmVmUHJlZml4JywgeyByZWFkOiBWaWV3Q29udGFpbmVyUmVmIH0pIHZpZXdSZWZQcmVmaXghOiBWaWV3Q29udGFpbmVyUmVmO1xuXG4gICAgLyoqIFNldHMgdGhlIG5hbWUgb2YgdGhlIGljb24gdG8gYmUgZGlzcGxheWVkLiAqL1xuICAgIEBJbnB1dCgnbnhMaXN0SWNvbicpIG5hbWUhOiBzdHJpbmc7XG59XG4iXX0=