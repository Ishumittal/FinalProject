import { Injectable } from '@angular/core';
import countries from 'i18n-iso-countries';
import en from 'i18n-iso-countries/langs/en.json';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
countries.registerLocale(en);
export class NxPhoneInputIntl {
    constructor() {
        /**
         * Stream that emits whenever the labels here are changed. Use this to notify
         * components if the properties have changed after initialization.
         */
        this.changes = new Subject();
        /** The label that is shown at the top of the opened overlay. */
        this.areaCodeLabel = 'Country code';
        /** The object providing the country name translations. */
        this.countryNames = countries.getNames('en');
    }
}
NxPhoneInputIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPhoneInputIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
NxPhoneInputIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPhoneInputIntl, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPhoneInputIntl, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGhvbmUtaW5wdXQtaW50bC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWFxdWlsYS9zcmMvcGhvbmUtaW5wdXQvcGhvbmUtaW5wdXQtaW50bC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sU0FBb0MsTUFBTSxvQkFBb0IsQ0FBQztBQUN0RSxPQUFPLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNsRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDOztBQUUvQixTQUFTLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBRzdCLE1BQU0sT0FBTyxnQkFBZ0I7SUFEN0I7UUFFSTs7O1dBR0c7UUFDTSxZQUFPLEdBQWtCLElBQUksT0FBTyxFQUFRLENBQUM7UUFFdEQsZ0VBQWdFO1FBQ2hFLGtCQUFhLEdBQUcsY0FBYyxDQUFDO1FBRS9CLDBEQUEwRDtRQUMxRCxpQkFBWSxHQUErQixTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3ZFOzs2R0FaWSxnQkFBZ0I7aUhBQWhCLGdCQUFnQixjQURILE1BQU07MkZBQ25CLGdCQUFnQjtrQkFENUIsVUFBVTttQkFBQyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgY291bnRyaWVzLCB7IExvY2FsaXplZENvdW50cnlOYW1lcyB9IGZyb20gJ2kxOG4taXNvLWNvdW50cmllcyc7XG5pbXBvcnQgZW4gZnJvbSAnaTE4bi1pc28tY291bnRyaWVzL2xhbmdzL2VuLmpzb24nO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuXG5jb3VudHJpZXMucmVnaXN0ZXJMb2NhbGUoZW4pO1xuXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxuZXhwb3J0IGNsYXNzIE54UGhvbmVJbnB1dEludGwge1xuICAgIC8qKlxuICAgICAqIFN0cmVhbSB0aGF0IGVtaXRzIHdoZW5ldmVyIHRoZSBsYWJlbHMgaGVyZSBhcmUgY2hhbmdlZC4gVXNlIHRoaXMgdG8gbm90aWZ5XG4gICAgICogY29tcG9uZW50cyBpZiB0aGUgcHJvcGVydGllcyBoYXZlIGNoYW5nZWQgYWZ0ZXIgaW5pdGlhbGl6YXRpb24uXG4gICAgICovXG4gICAgcmVhZG9ubHkgY2hhbmdlczogU3ViamVjdDx2b2lkPiA9IG5ldyBTdWJqZWN0PHZvaWQ+KCk7XG5cbiAgICAvKiogVGhlIGxhYmVsIHRoYXQgaXMgc2hvd24gYXQgdGhlIHRvcCBvZiB0aGUgb3BlbmVkIG92ZXJsYXkuICovXG4gICAgYXJlYUNvZGVMYWJlbCA9ICdDb3VudHJ5IGNvZGUnO1xuXG4gICAgLyoqIFRoZSBvYmplY3QgcHJvdmlkaW5nIHRoZSBjb3VudHJ5IG5hbWUgdHJhbnNsYXRpb25zLiAqL1xuICAgIGNvdW50cnlOYW1lczogTG9jYWxpemVkQ291bnRyeU5hbWVzPGFueT4gPSBjb3VudHJpZXMuZ2V0TmFtZXMoJ2VuJyk7XG59XG4iXX0=