import { Directive, HostListener, Input } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
// This Directive solely purpose is to mark given ng-content and project it into the required destination.
export class NxFileUploaderButtonDirective {
    constructor(_cdr) {
        this._cdr = _cdr;
        this._clicked = new Subject();
        this._disabled = false;
    }
    /** Whether the file uploader is disabled */
    set disabled(value) {
        this._disabled = value;
        this._cdr.markForCheck();
    }
    get disabled() {
        return this._disabled;
    }
    /** @docs-private */
    setDescribedByIds(ids) {
        this._ariaDescribedby = ids.join(' ');
    }
    /** @docs-private */
    onClick() {
        this._clicked.next();
    }
    ngOnDestroy() {
        this._clicked.complete();
    }
}
NxFileUploaderButtonDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxFileUploaderButtonDirective, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });
NxFileUploaderButtonDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.1", type: NxFileUploaderButtonDirective, selector: "[nxFileUploadButton]", inputs: { disabled: "disabled" }, host: { listeners: { "click": "onClick()" }, properties: { "attr.aria-describedby": "_ariaDescribedby || null", "attr.disabled": "disabled || null", "class.nx-file-upload-button": "true" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxFileUploaderButtonDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[nxFileUploadButton]',
                    host: {
                        '[attr.aria-describedby]': '_ariaDescribedby || null',
                        '[attr.disabled]': 'disabled || null',
                        '[class.nx-file-upload-button]': 'true',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { disabled: [{
                type: Input
            }], onClick: [{
                type: HostListener,
                args: ['click']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS11cGxvYWRlci1idXR0b24uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctYXF1aWxhL3NyYy9maWxlLXVwbG9hZGVyL2ZpbGUtdXBsb2FkZXItYnV0dG9uLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQXFCLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBQzdGLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7O0FBRS9CLDBHQUEwRztBQVMxRyxNQUFNLE9BQU8sNkJBQTZCO0lBS3RDLFlBQW9CLElBQXVCO1FBQXZCLFNBQUksR0FBSixJQUFJLENBQW1CO1FBSjNDLGFBQVEsR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDO1FBRWpCLGNBQVMsR0FBRyxLQUFLLENBQUM7SUFFb0IsQ0FBQztJQUUvQyw0Q0FBNEM7SUFDNUMsSUFDSSxRQUFRLENBQUMsS0FBYztRQUN2QixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztRQUN2QixJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFFRCxJQUFJLFFBQVE7UUFDUixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDMUIsQ0FBQztJQUVELG9CQUFvQjtJQUNwQixpQkFBaUIsQ0FBQyxHQUFhO1FBQzNCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxvQkFBb0I7SUFDRyxPQUFPO1FBQzFCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVELFdBQVc7UUFDUCxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzdCLENBQUM7OzBIQTlCUSw2QkFBNkI7OEdBQTdCLDZCQUE2QjsyRkFBN0IsNkJBQTZCO2tCQVJ6QyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLElBQUksRUFBRTt3QkFDRix5QkFBeUIsRUFBRSwwQkFBMEI7d0JBQ3JELGlCQUFpQixFQUFFLGtCQUFrQjt3QkFDckMsK0JBQStCLEVBQUUsTUFBTTtxQkFDMUM7aUJBQ0o7d0dBVU8sUUFBUTtzQkFEWCxLQUFLO2dCQWdCaUIsT0FBTztzQkFBN0IsWUFBWTt1QkFBQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIERpcmVjdGl2ZSwgSG9zdExpc3RlbmVyLCBJbnB1dCwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5cbi8vIFRoaXMgRGlyZWN0aXZlIHNvbGVseSBwdXJwb3NlIGlzIHRvIG1hcmsgZ2l2ZW4gbmctY29udGVudCBhbmQgcHJvamVjdCBpdCBpbnRvIHRoZSByZXF1aXJlZCBkZXN0aW5hdGlvbi5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW254RmlsZVVwbG9hZEJ1dHRvbl0nLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1thdHRyLmFyaWEtZGVzY3JpYmVkYnldJzogJ19hcmlhRGVzY3JpYmVkYnkgfHwgbnVsbCcsXG4gICAgICAgICdbYXR0ci5kaXNhYmxlZF0nOiAnZGlzYWJsZWQgfHwgbnVsbCcsXG4gICAgICAgICdbY2xhc3MubngtZmlsZS11cGxvYWQtYnV0dG9uXSc6ICd0cnVlJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBOeEZpbGVVcGxvYWRlckJ1dHRvbkRpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gICAgX2NsaWNrZWQgPSBuZXcgU3ViamVjdCgpO1xuICAgIF9hcmlhRGVzY3JpYmVkYnk6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgICBwcml2YXRlIF9kaXNhYmxlZCA9IGZhbHNlO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBfY2RyOiBDaGFuZ2VEZXRlY3RvclJlZikge31cblxuICAgIC8qKiBXaGV0aGVyIHRoZSBmaWxlIHVwbG9hZGVyIGlzIGRpc2FibGVkICovXG4gICAgQElucHV0KClcbiAgICBzZXQgZGlzYWJsZWQodmFsdWU6IGJvb2xlYW4pIHtcbiAgICAgICAgdGhpcy5fZGlzYWJsZWQgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5fY2RyLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cblxuICAgIGdldCBkaXNhYmxlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Rpc2FibGVkO1xuICAgIH1cblxuICAgIC8qKiBAZG9jcy1wcml2YXRlICovXG4gICAgc2V0RGVzY3JpYmVkQnlJZHMoaWRzOiBzdHJpbmdbXSk6IHZvaWQge1xuICAgICAgICB0aGlzLl9hcmlhRGVzY3JpYmVkYnkgPSBpZHMuam9pbignICcpO1xuICAgIH1cblxuICAgIC8qKiBAZG9jcy1wcml2YXRlICovXG4gICAgQEhvc3RMaXN0ZW5lcignY2xpY2snKSBvbkNsaWNrKCkge1xuICAgICAgICB0aGlzLl9jbGlja2VkLm5leHQoKTtcbiAgICB9XG5cbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fY2xpY2tlZC5jb21wbGV0ZSgpO1xuICAgIH1cbn1cbiJdfQ==