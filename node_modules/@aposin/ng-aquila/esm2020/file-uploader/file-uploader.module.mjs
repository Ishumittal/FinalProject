import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NxErrorModule, NxLabelModule } from '@aposin/ng-aquila/base';
import { NxButtonModule } from '@aposin/ng-aquila/button';
import { NxIconModule } from '@aposin/ng-aquila/icon';
import { NxSpinnerModule } from '@aposin/ng-aquila/spinner';
import { NxFileUploaderComponent } from './file-uploader.component';
import { NxFileUploaderButtonDirective } from './file-uploader-button.directive';
import { NxFileUploaderDropZoneComponent } from './file-uploader-drop-zone.component';
import { NxFileUploaderHintDirective } from './file-uploader-hint.directive';
import { NxFileUploaderIntl } from './file-uploader-intl';
import { NxFileUploaderTriggerDirective } from './file-uploader-trigger.directive';
import { NxFileUploaderItemDelete } from './item/file-uploader-delete.component';
import { NxFileUploaderItemName } from './item/file-uploader-name.component';
import { NxFileUploaderItemSize } from './item/file-uploader-size.component';
import { NxFileUploaderItemStatus } from './item/file-uploader-status.component';
import * as i0 from "@angular/core";
export class NxFileUploaderModule {
}
NxFileUploaderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxFileUploaderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NxFileUploaderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxFileUploaderModule, declarations: [NxFileUploaderComponent,
        NxFileUploaderButtonDirective,
        NxFileUploaderHintDirective,
        NxFileUploaderDropZoneComponent,
        NxFileUploaderTriggerDirective,
        NxFileUploaderItemName,
        NxFileUploaderItemSize,
        NxFileUploaderItemStatus,
        NxFileUploaderItemDelete], imports: [CommonModule, NxIconModule, NxButtonModule, NxSpinnerModule], exports: [NxFileUploaderComponent,
        NxFileUploaderButtonDirective,
        NxFileUploaderHintDirective,
        NxFileUploaderDropZoneComponent,
        NxErrorModule,
        NxLabelModule,
        NxFileUploaderTriggerDirective,
        NxFileUploaderItemName,
        NxFileUploaderItemSize,
        NxFileUploaderItemStatus,
        NxFileUploaderItemDelete] });
NxFileUploaderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxFileUploaderModule, providers: [NxFileUploaderIntl], imports: [[CommonModule, NxIconModule, NxButtonModule, NxSpinnerModule], NxErrorModule,
        NxLabelModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxFileUploaderModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, NxIconModule, NxButtonModule, NxSpinnerModule],
                    declarations: [
                        NxFileUploaderComponent,
                        NxFileUploaderButtonDirective,
                        NxFileUploaderHintDirective,
                        NxFileUploaderDropZoneComponent,
                        NxFileUploaderTriggerDirective,
                        NxFileUploaderItemName,
                        NxFileUploaderItemSize,
                        NxFileUploaderItemStatus,
                        NxFileUploaderItemDelete,
                    ],
                    exports: [
                        NxFileUploaderComponent,
                        NxFileUploaderButtonDirective,
                        NxFileUploaderHintDirective,
                        NxFileUploaderDropZoneComponent,
                        NxErrorModule,
                        NxLabelModule,
                        NxFileUploaderTriggerDirective,
                        NxFileUploaderItemName,
                        NxFileUploaderItemSize,
                        NxFileUploaderItemStatus,
                        NxFileUploaderItemDelete,
                    ],
                    providers: [NxFileUploaderIntl],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS11cGxvYWRlci5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1hcXVpbGEvc3JjL2ZpbGUtdXBsb2FkZXIvZmlsZS11cGxvYWRlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLGFBQWEsRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUU1RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNqRixPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUN0RixPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM3RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMxRCxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNuRixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUNqRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQzs7QUE4QmpGLE1BQU0sT0FBTyxvQkFBb0I7O2lIQUFwQixvQkFBb0I7a0hBQXBCLG9CQUFvQixpQkF6QnpCLHVCQUF1QjtRQUN2Qiw2QkFBNkI7UUFDN0IsMkJBQTJCO1FBQzNCLCtCQUErQjtRQUMvQiw4QkFBOEI7UUFDOUIsc0JBQXNCO1FBQ3RCLHNCQUFzQjtRQUN0Qix3QkFBd0I7UUFDeEIsd0JBQXdCLGFBVmxCLFlBQVksRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUFFLGVBQWUsYUFhakUsdUJBQXVCO1FBQ3ZCLDZCQUE2QjtRQUM3QiwyQkFBMkI7UUFDM0IsK0JBQStCO1FBQy9CLGFBQWE7UUFDYixhQUFhO1FBQ2IsOEJBQThCO1FBQzlCLHNCQUFzQjtRQUN0QixzQkFBc0I7UUFDdEIsd0JBQXdCO1FBQ3hCLHdCQUF3QjtrSEFJbkIsb0JBQW9CLGFBRmxCLENBQUMsa0JBQWtCLENBQUMsWUF6QnRCLENBQUMsWUFBWSxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQUUsZUFBZSxDQUFDLEVBaUJsRSxhQUFhO1FBQ2IsYUFBYTsyRkFTUixvQkFBb0I7a0JBNUJoQyxRQUFRO21CQUFDO29CQUNOLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUFFLGVBQWUsQ0FBQztvQkFDdEUsWUFBWSxFQUFFO3dCQUNWLHVCQUF1Qjt3QkFDdkIsNkJBQTZCO3dCQUM3QiwyQkFBMkI7d0JBQzNCLCtCQUErQjt3QkFDL0IsOEJBQThCO3dCQUM5QixzQkFBc0I7d0JBQ3RCLHNCQUFzQjt3QkFDdEIsd0JBQXdCO3dCQUN4Qix3QkFBd0I7cUJBQzNCO29CQUNELE9BQU8sRUFBRTt3QkFDTCx1QkFBdUI7d0JBQ3ZCLDZCQUE2Qjt3QkFDN0IsMkJBQTJCO3dCQUMzQiwrQkFBK0I7d0JBQy9CLGFBQWE7d0JBQ2IsYUFBYTt3QkFDYiw4QkFBOEI7d0JBQzlCLHNCQUFzQjt3QkFDdEIsc0JBQXNCO3dCQUN0Qix3QkFBd0I7d0JBQ3hCLHdCQUF3QjtxQkFDM0I7b0JBQ0QsU0FBUyxFQUFFLENBQUMsa0JBQWtCLENBQUM7aUJBQ2xDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOeEVycm9yTW9kdWxlLCBOeExhYmVsTW9kdWxlIH0gZnJvbSAnQGFwb3Npbi9uZy1hcXVpbGEvYmFzZSc7XG5pbXBvcnQgeyBOeEJ1dHRvbk1vZHVsZSB9IGZyb20gJ0BhcG9zaW4vbmctYXF1aWxhL2J1dHRvbic7XG5pbXBvcnQgeyBOeEljb25Nb2R1bGUgfSBmcm9tICdAYXBvc2luL25nLWFxdWlsYS9pY29uJztcbmltcG9ydCB7IE54U3Bpbm5lck1vZHVsZSB9IGZyb20gJ0BhcG9zaW4vbmctYXF1aWxhL3NwaW5uZXInO1xuXG5pbXBvcnQgeyBOeEZpbGVVcGxvYWRlckNvbXBvbmVudCB9IGZyb20gJy4vZmlsZS11cGxvYWRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTnhGaWxlVXBsb2FkZXJCdXR0b25EaXJlY3RpdmUgfSBmcm9tICcuL2ZpbGUtdXBsb2FkZXItYnV0dG9uLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBOeEZpbGVVcGxvYWRlckRyb3Bab25lQ29tcG9uZW50IH0gZnJvbSAnLi9maWxlLXVwbG9hZGVyLWRyb3Atem9uZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgTnhGaWxlVXBsb2FkZXJIaW50RGlyZWN0aXZlIH0gZnJvbSAnLi9maWxlLXVwbG9hZGVyLWhpbnQuZGlyZWN0aXZlJztcbmltcG9ydCB7IE54RmlsZVVwbG9hZGVySW50bCB9IGZyb20gJy4vZmlsZS11cGxvYWRlci1pbnRsJztcbmltcG9ydCB7IE54RmlsZVVwbG9hZGVyVHJpZ2dlckRpcmVjdGl2ZSB9IGZyb20gJy4vZmlsZS11cGxvYWRlci10cmlnZ2VyLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBOeEZpbGVVcGxvYWRlckl0ZW1EZWxldGUgfSBmcm9tICcuL2l0ZW0vZmlsZS11cGxvYWRlci1kZWxldGUuY29tcG9uZW50JztcbmltcG9ydCB7IE54RmlsZVVwbG9hZGVySXRlbU5hbWUgfSBmcm9tICcuL2l0ZW0vZmlsZS11cGxvYWRlci1uYW1lLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOeEZpbGVVcGxvYWRlckl0ZW1TaXplIH0gZnJvbSAnLi9pdGVtL2ZpbGUtdXBsb2FkZXItc2l6ZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgTnhGaWxlVXBsb2FkZXJJdGVtU3RhdHVzIH0gZnJvbSAnLi9pdGVtL2ZpbGUtdXBsb2FkZXItc3RhdHVzLmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgTnhJY29uTW9kdWxlLCBOeEJ1dHRvbk1vZHVsZSwgTnhTcGlubmVyTW9kdWxlXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgTnhGaWxlVXBsb2FkZXJDb21wb25lbnQsXG4gICAgICAgIE54RmlsZVVwbG9hZGVyQnV0dG9uRGlyZWN0aXZlLFxuICAgICAgICBOeEZpbGVVcGxvYWRlckhpbnREaXJlY3RpdmUsXG4gICAgICAgIE54RmlsZVVwbG9hZGVyRHJvcFpvbmVDb21wb25lbnQsXG4gICAgICAgIE54RmlsZVVwbG9hZGVyVHJpZ2dlckRpcmVjdGl2ZSxcbiAgICAgICAgTnhGaWxlVXBsb2FkZXJJdGVtTmFtZSxcbiAgICAgICAgTnhGaWxlVXBsb2FkZXJJdGVtU2l6ZSxcbiAgICAgICAgTnhGaWxlVXBsb2FkZXJJdGVtU3RhdHVzLFxuICAgICAgICBOeEZpbGVVcGxvYWRlckl0ZW1EZWxldGUsXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIE54RmlsZVVwbG9hZGVyQ29tcG9uZW50LFxuICAgICAgICBOeEZpbGVVcGxvYWRlckJ1dHRvbkRpcmVjdGl2ZSxcbiAgICAgICAgTnhGaWxlVXBsb2FkZXJIaW50RGlyZWN0aXZlLFxuICAgICAgICBOeEZpbGVVcGxvYWRlckRyb3Bab25lQ29tcG9uZW50LFxuICAgICAgICBOeEVycm9yTW9kdWxlLFxuICAgICAgICBOeExhYmVsTW9kdWxlLFxuICAgICAgICBOeEZpbGVVcGxvYWRlclRyaWdnZXJEaXJlY3RpdmUsXG4gICAgICAgIE54RmlsZVVwbG9hZGVySXRlbU5hbWUsXG4gICAgICAgIE54RmlsZVVwbG9hZGVySXRlbVNpemUsXG4gICAgICAgIE54RmlsZVVwbG9hZGVySXRlbVN0YXR1cyxcbiAgICAgICAgTnhGaWxlVXBsb2FkZXJJdGVtRGVsZXRlLFxuICAgIF0sXG4gICAgcHJvdmlkZXJzOiBbTnhGaWxlVXBsb2FkZXJJbnRsXSxcbn0pXG5leHBvcnQgY2xhc3MgTnhGaWxlVXBsb2FkZXJNb2R1bGUge31cbiJdfQ==