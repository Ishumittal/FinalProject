import { Directive, HostListener, Input } from '@angular/core';
import * as i0 from "@angular/core";
// This Directive solely purpose is to mark given ng-content and project it into the required destination.
export class NxFileUploaderTriggerDirective {
    /** References the file upload component instance that the trigger is associated with. */
    set fileUpload(value) {
        if (this._fileUpload !== value) {
            this._fileUpload = value;
        }
    }
    get fileUpload() {
        return this._fileUpload;
    }
    _onClick() {
        this._fileUpload.uploadFiles();
    }
}
NxFileUploaderTriggerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxFileUploaderTriggerDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
NxFileUploaderTriggerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.1", type: NxFileUploaderTriggerDirective, selector: "[nxFileUploadTriggerFor]", inputs: { fileUpload: ["nxFileUploadTriggerFor", "fileUpload"] }, host: { listeners: { "click": "_onClick()" } }, exportAs: ["nxFileUploadTrigger"], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxFileUploaderTriggerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[nxFileUploadTriggerFor]',
                    exportAs: 'nxFileUploadTrigger',
                }]
        }], propDecorators: { fileUpload: [{
                type: Input,
                args: ['nxFileUploadTriggerFor']
            }], _onClick: [{
                type: HostListener,
                args: ['click']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS11cGxvYWRlci10cmlnZ2VyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25nLWFxdWlsYS9zcmMvZmlsZS11cGxvYWRlci9maWxlLXVwbG9hZGVyLXRyaWdnZXIuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFJL0QsMEdBQTBHO0FBSzFHLE1BQU0sT0FBTyw4QkFBOEI7SUFHdkMseUZBQXlGO0lBQ3pGLElBQ0ksVUFBVSxDQUFDLEtBQThCO1FBQ3pDLElBQUksSUFBSSxDQUFDLFdBQVcsS0FBSyxLQUFLLEVBQUU7WUFDNUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7U0FDNUI7SUFDTCxDQUFDO0lBQ0QsSUFBSSxVQUFVO1FBQ1YsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzVCLENBQUM7SUFHRCxRQUFRO1FBQ0osSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNuQyxDQUFDOzsySEFqQlEsOEJBQThCOytHQUE5Qiw4QkFBOEI7MkZBQTlCLDhCQUE4QjtrQkFKMUMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsMEJBQTBCO29CQUNwQyxRQUFRLEVBQUUscUJBQXFCO2lCQUNsQzs4QkFNTyxVQUFVO3NCQURiLEtBQUs7dUJBQUMsd0JBQXdCO2dCQVcvQixRQUFRO3NCQURQLFlBQVk7dUJBQUMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdExpc3RlbmVyLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBOeEZpbGVVcGxvYWRlckNvbXBvbmVudCB9IGZyb20gJy4vZmlsZS11cGxvYWRlci5jb21wb25lbnQnO1xuXG4vLyBUaGlzIERpcmVjdGl2ZSBzb2xlbHkgcHVycG9zZSBpcyB0byBtYXJrIGdpdmVuIG5nLWNvbnRlbnQgYW5kIHByb2plY3QgaXQgaW50byB0aGUgcmVxdWlyZWQgZGVzdGluYXRpb24uXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tueEZpbGVVcGxvYWRUcmlnZ2VyRm9yXScsXG4gICAgZXhwb3J0QXM6ICdueEZpbGVVcGxvYWRUcmlnZ2VyJyxcbn0pXG5leHBvcnQgY2xhc3MgTnhGaWxlVXBsb2FkZXJUcmlnZ2VyRGlyZWN0aXZlIHtcbiAgICBfZmlsZVVwbG9hZCE6IE54RmlsZVVwbG9hZGVyQ29tcG9uZW50O1xuXG4gICAgLyoqIFJlZmVyZW5jZXMgdGhlIGZpbGUgdXBsb2FkIGNvbXBvbmVudCBpbnN0YW5jZSB0aGF0IHRoZSB0cmlnZ2VyIGlzIGFzc29jaWF0ZWQgd2l0aC4gKi9cbiAgICBASW5wdXQoJ254RmlsZVVwbG9hZFRyaWdnZXJGb3InKVxuICAgIHNldCBmaWxlVXBsb2FkKHZhbHVlOiBOeEZpbGVVcGxvYWRlckNvbXBvbmVudCkge1xuICAgICAgICBpZiAodGhpcy5fZmlsZVVwbG9hZCAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMuX2ZpbGVVcGxvYWQgPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgZmlsZVVwbG9hZCgpOiBOeEZpbGVVcGxvYWRlckNvbXBvbmVudCB7XG4gICAgICAgIHJldHVybiB0aGlzLl9maWxlVXBsb2FkO1xuICAgIH1cblxuICAgIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJylcbiAgICBfb25DbGljaygpIHtcbiAgICAgICAgdGhpcy5fZmlsZVVwbG9hZC51cGxvYWRGaWxlcygpO1xuICAgIH1cbn1cbiJdfQ==