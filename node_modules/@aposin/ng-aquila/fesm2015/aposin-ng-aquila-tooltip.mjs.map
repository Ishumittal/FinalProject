{"version":3,"file":"aposin-ng-aquila-tooltip.mjs","sources":["../../../projects/ng-aquila/src/tooltip/tooltip-animations.ts","../../../projects/ng-aquila/src/tooltip/tooltip.component.ts","../../../projects/ng-aquila/src/tooltip/tooltip.component.html","../../../projects/ng-aquila/src/tooltip/tooltip.directive.ts","../../../projects/ng-aquila/src/tooltip/tooltip.module.ts","../../../projects/ng-aquila/src/tooltip/aposin-ng-aquila-tooltip.ts"],"sourcesContent":["import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\n\n/**\n * Animations used by NxTooltip.\n * @docs-private\n */\nexport const nxTooltipAnimations: {\n    readonly tooltipState: AnimationTriggerMetadata;\n} = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0 })),\n        state('visible', style({ opacity: 1 })),\n        transition('* => visible', animate('70ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 1 }))),\n        transition('* => hidden', animate('70ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ]),\n};\n","import { AnimationEvent } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { TooltipPosition } from './tooltip.directive';\nimport { nxTooltipAnimations } from './tooltip-animations';\n\ntype TooltipVisibility = 'initial' | 'visible' | 'hidden';\n\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\n@Component({\n    selector: 'nx-tooltip-component',\n    templateUrl: 'tooltip.component.html',\n    styleUrls: ['tooltip.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [nxTooltipAnimations.tooltipState],\n    host: {\n        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n        // won't be rendered if the aninxions are disabled or there is no web aninxions polyfill.\n        '[style.zoom]': 'visibility === \"visible\" ? 1 : null',\n        '(body:click)': 'this._handleBodyInteraction()',\n        'aria-hidden': 'true',\n    },\n})\nexport class NxTooltipComponent implements OnDestroy {\n    /** The timeout ID of any current timer set to show the tooltip */\n    private _showTimeoutId: number | null = null;\n\n    /** The timeout ID of any current timer set to hide the tooltip */\n    private _hideTimeoutId: number | null = null;\n\n    /** Message to display in the tooltip */\n    private _message!: string;\n\n    set message(value: string) {\n        this._message = value;\n        this._cdr.markForCheck();\n    }\n    get message(): string {\n        return this._message;\n    }\n\n    private _visibility: TooltipVisibility = 'initial';\n\n    /** Property watched by the animation framework to show or hide the tooltip */\n    get visibility(): TooltipVisibility {\n        return this._visibility;\n    }\n\n    private _position: TooltipPosition = 'bottom';\n\n    /* @docs-private */\n    set position(value: TooltipPosition) {\n        this._position = value;\n        this._cdr.markForCheck();\n    }\n\n    /* @docs-private */\n    get position() {\n        return this._position;\n    }\n\n    _arrowStyle: { [key: string]: string } = {};\n\n    /* @docs-private */\n    set arrowStyle(value) {\n        this._arrowStyle = value;\n        this._cdr.markForCheck();\n    }\n\n    /* @docs-private */\n    get arrowStyle() {\n        return this._arrowStyle;\n    }\n\n    /* @docs-private */\n    get arrowClass(): string {\n        return `nx-tooltip__arrow--${this.position}`;\n    }\n\n    /** Whether interactions on the page should close the tooltip */\n    private _closeOnInteraction = false;\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly _onHide: Subject<any> = new Subject();\n\n    constructor(private _cdr: ChangeDetectorRef, public elementRef: ElementRef) {}\n\n    /**\n     * Shows the tooltip with an aninxion originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay: number): void {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n            this._hideTimeoutId = null;\n        }\n\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = window.setTimeout(() => {\n            this._visibility = 'visible';\n            this._showTimeoutId = null;\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._cdr.markForCheck();\n        }, delay);\n    }\n\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay: number): void {\n        if (this._hideTimeoutId) {\n            return;\n        }\n\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n            this._showTimeoutId = null;\n        }\n\n        this._hideTimeoutId = window.setTimeout(() => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = null;\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._cdr.markForCheck();\n        }, delay);\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this._onHide.asObservable();\n    }\n\n    /** Whether the tooltip is being displayed. */\n    isVisible(): boolean {\n        return this.visibility === 'visible';\n    }\n\n    /** Whether the tooltip started a delay to be shown/hidden */\n    isDelayed(): boolean {\n        return this._showTimeoutId !== null || this._hideTimeoutId !== null;\n    }\n\n    ngOnDestroy() {\n        this._onHide.complete();\n    }\n\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n\n    _animationDone(event: AnimationEvent): void {\n        const toState = event.toState as TooltipVisibility;\n\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n\n    /**\n     * Interactions on the HTML body should close the tooltip immediately.\n     */\n    _handleBodyInteraction(): void {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n}\n","<div class=\"nx-tooltip\" [@state]=\"visibility\" (@state.start)=\"_animationStart()\" (@state.done)=\"_animationDone($event)\">\n    <div [ngClass]=\"arrowClass\" class=\"nx-tooltip__arrow\" [ngStyle]=\"arrowStyle\"></div>\n    {{ message }}\n</div>\n","import { AriaDescriber, FocusMonitor } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport {\n    ConnectionPositionPair,\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    OriginConnectionPosition,\n    Overlay,\n    OverlayConnectionPosition,\n    OverlayRef,\n    ScrollStrategy,\n    VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { ComponentRef, Directive, ElementRef, Inject, InjectionToken, Input, NgZone, OnDestroy, OnInit, Optional, ViewContainerRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\n\nimport { NxTooltipComponent } from './tooltip.component';\n\nconst BASE_OFFSET = 12;\n\n/**\n * Possible positions of the tooltip.\n */\nexport type TooltipPosition = TooltipVerticalPosition | TooltipHorizontalPosition;\nexport type TooltipHorizontalPosition = 'left' | 'right';\nexport type TooltipVerticalPosition = 'top' | 'bottom';\n\n/** Injection token that determines the scroll handling while a tooltip is open. */\nexport const NX_TOOLTIP_SCROLL_STRATEGY = new InjectionToken<() => ScrollStrategy>('nx-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function NX_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay): () => ScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const NX_TOOLTIP_SCROLL_STRATEGY_PROVIDER = {\n    provide: NX_TOOLTIP_SCROLL_STRATEGY,\n    useFactory: NX_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY,\n    deps: [Overlay],\n};\n\n/**\n * CSS class that will be attached to the overlay panel.\n * @docs-private\n */\nexport const NX_TOOLTIP_PANEL_CLASS = 'nx-tooltip-panel';\n\n/**\n * Creates an error to be thrown if the user provided an invalid tooltip position.\n * @docs-private\n */\nexport function getNxTooltipInvalidPositionError(position: string) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n\n/** Default `nxTooltip` options that can be overridden. */\nexport interface NxTooltipDefaultOptions {\n    /** The default delay in ms before showing the tooltip after show is called */\n    showDelay: number;\n\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    hideDelay: number;\n\n    /** The default delay in ms before hiding the tooltip on touch devices */\n    touchendHideDelay: number;\n\n    /** The default position of the tooltip */\n    position?: TooltipPosition;\n}\n\n/** Injection token to be used to override the default options for `nxTooltip`. */\nexport const NX_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken<NxTooltipDefaultOptions>('nx-tooltip-default-options', {\n    providedIn: 'root',\n    factory: NX_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n\nexport function NX_TOOLTIP_DEFAULT_OPTIONS_FACTORY(): NxTooltipDefaultOptions {\n    return {\n        showDelay: 200,\n        hideDelay: 200,\n        touchendHideDelay: 1500,\n    };\n}\n\n/**\n * Directive that attaches a tooltip to the host element.\n *\n */\n@Directive({\n    selector: '[nxTooltip]',\n    exportAs: 'nxTooltip',\n    host: {\n        '(keydown)': '_handleKeydown($event)',\n        '(touchend)': '_handleTouchend()',\n    },\n})\nexport class NxTooltipDirective implements OnDestroy, OnInit {\n    _overlayRef!: OverlayRef | null;\n    _tooltipInstance!: NxTooltipComponent | null;\n\n    private _portal!: ComponentPortal<NxTooltipComponent>;\n    private _position: TooltipPosition = 'bottom';\n    private _disabled = false;\n    private _selectable = false;\n    private _embeddedViewRef!: ComponentRef<NxTooltipComponent>;\n    private _possibleTooltipPositions: TooltipPosition[] = ['bottom', 'top', 'left', 'right'];\n\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    @Input('nxTooltipPosition')\n    get position(): TooltipPosition {\n        return this._position;\n    }\n    set position(value: TooltipPosition) {\n        if (value !== this._position) {\n            this._position = value;\n\n            if (this._overlayRef) {\n                this._updatePosition();\n\n                if (this._tooltipInstance) {\n                    this._tooltipInstance.position = this._position;\n                    this._tooltipInstance.show(0);\n                }\n\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n\n    /** Disables the display of the tooltip. */\n    @Input('nxTooltipDisabled')\n    get disabled(): boolean {\n        return this._disabled;\n    }\n    set disabled(value: BooleanInput) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n    }\n\n    /** Allows selection of text within tooltip trigger\n     *  NOTE: inputs and textareas always remain selectable, ignoring this input.\n     */\n    @Input('nxTooltipSelectable')\n    get selectable(): boolean {\n        return this._selectable;\n    }\n    set selectable(value: BooleanInput) {\n        const oldValue = this._selectable;\n        this._selectable = coerceBooleanProperty(value);\n        if (this._selectable !== oldValue) {\n            this._updateSelectabilityStyles();\n        }\n    }\n\n    /** The default delay in ms before showing the tooltip after show is called */\n    @Input('nxTooltipShowDelay') showDelay: number = this._defaultOptions!.showDelay;\n\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    @Input('nxTooltipHideDelay') hideDelay: number = this._defaultOptions!.hideDelay;\n\n    private _message = '';\n\n    /** The message to be displayed in the tooltip */\n    @Input('nxTooltip')\n    get message(): string {\n        return this._message;\n    }\n    set message(value: string) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        this._message = value != null ? `${value}`.trim() : '';\n\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        } else {\n            this._updateTooltipMessage();\n            this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n        }\n    }\n\n    /** Strategy factory that will be used to handle scrolling while the tooltip panel is open. */\n    private _scrollStrategyFactory = this._defaultScrollStrategyFactory;\n\n    private _manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _overlay: Overlay,\n        private _elementRef: ElementRef<HTMLElement>,\n        private _scrollDispatcher: ScrollDispatcher,\n        private _viewContainerRef: ViewContainerRef,\n        private _ngZone: NgZone,\n        platform: Platform,\n        private _ariaDescriber: AriaDescriber,\n        private _focusMonitor: FocusMonitor,\n        @Optional() private _dir: Directionality | null,\n        @Optional() @Inject(NX_TOOLTIP_DEFAULT_OPTIONS) private _defaultOptions: NxTooltipDefaultOptions | null,\n        @Inject(NX_TOOLTIP_SCROLL_STRATEGY) private _defaultScrollStrategyFactory: () => ScrollStrategy,\n    ) {\n        this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(this._dirChangeHandler.bind(this));\n\n        const element: HTMLElement = _elementRef.nativeElement;\n\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (!platform.IOS && !platform.ANDROID) {\n            this._manualListeners.set('mouseenter', () => this.show()).set('mouseleave', () => this.hide());\n        } else {\n            // Fall back to showing on `touchstart`, otherwise\n            // there's no way for the user to trigger the tooltip on a touch device.\n            this._manualListeners.set('touchstart', () => this.show());\n        }\n\n        this._manualListeners.forEach((listener, event) => element.addEventListener(event, listener));\n\n        _focusMonitor\n            .monitor(_elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n                // Note that the focus monitor runs outside the Angular zone.\n                if (!origin) {\n                    _ngZone.run(() => this.hide(0));\n                } else if (origin === 'keyboard') {\n                    _ngZone.run(() => this.show());\n                }\n            });\n\n        if (_defaultOptions?.position) {\n            this.position = _defaultOptions.position;\n        }\n    }\n\n    ngOnInit() {\n        this._updateSelectabilityStyles();\n    }\n\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n\n        // Clean up the event listeners set in the constructor\n        this._manualListeners.forEach((listener, event) => {\n            this._elementRef.nativeElement.removeEventListener(event, listener);\n        });\n        this._manualListeners.clear();\n\n        this._destroyed.next();\n        this._destroyed.complete();\n\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay: number = this.showDelay): void {\n        if (this.disabled || !this.message || (this._isTooltipVisible() && !this._tooltipInstance?.isDelayed())) {\n            return;\n        }\n\n        const overlayRef = this._createOverlay();\n\n        this._detach();\n        this._portal = this._portal || new ComponentPortal(NxTooltipComponent, this._viewContainerRef);\n        this._embeddedViewRef = overlayRef.attach(this._portal);\n        this._tooltipInstance = this._embeddedViewRef.instance;\n        this._tooltipInstance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._updateTooltipMessage();\n        this._tooltipInstance.show(delay);\n    }\n\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay: number = this.hideDelay): void {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n\n    /** Shows/hides the tooltip */\n    toggle(): void {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible(): boolean {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n\n    /** Handles the keydown events on the host element. */\n    _handleKeydown(e: KeyboardEvent) {\n        if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\n            e.stopPropagation();\n            this.hide(0);\n        }\n    }\n\n    /** Handles the touchend events on the host element. */\n    _handleTouchend() {\n        this.hide(this._defaultOptions?.touchendHideDelay);\n    }\n\n    /**\n     * Setup styling-specific things\n     */\n    _updateSelectabilityStyles(): void {\n        const element = this._elementRef.nativeElement;\n        const elementStyle = element.style as CSSStyleDeclaration & { webkitUserDrag: string };\n        const isSelectable = element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA' || this._selectable;\n        const userSelect = isSelectable ? 'auto' : 'none';\n        elementStyle.webkitUserSelect = elementStyle.userSelect = (elementStyle as any).msUserSelect = userSelect;\n    }\n\n    /** Create the overlay config and position strategy */\n    private _createOverlay(): OverlayRef {\n        if (this._overlayRef && !!this._overlayRef.hostElement) {\n            return this._overlayRef;\n        }\n\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position().flexibleConnectedTo(this._elementRef).withLockedPosition(true).withFlexibleDimensions(false).withPush(true);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            if (this._tooltipInstance) {\n                const pair = change.connectionPair;\n\n                this._ngZone.run(() => this._positionArrow(pair));\n\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n\n        this._overlayRef = this._overlay.create({\n            direction: this._dir?.value || 'ltr',\n            positionStrategy: strategy,\n            panelClass: NX_TOOLTIP_PANEL_CLASS,\n            scrollStrategy: this._scrollStrategyFactory(),\n            disposeOnNavigation: true,\n        });\n\n        this._updatePosition();\n\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n\n        return this._overlayRef;\n    }\n\n    /** Detaches the currently-attached tooltip. */\n    private _detach() {\n        if (this._overlayRef?.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        this._tooltipInstance = null;\n    }\n\n    /** Updates the position of the current tooltip. */\n    private _updatePosition() {\n        if (!this._overlayRef) {\n            return;\n        }\n        const position = this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this._getOrigin(this.position);\n        const overlay = this._getOverlayPosition(this.position);\n        const offset = this._getOffset(this.position);\n        const fallbacks = this._getFallbackPositions(this.position);\n\n        position.withPositions([\n            {\n                ...origin,\n                ...overlay,\n                ...offset,\n            },\n            ...fallbacks,\n        ]);\n    }\n\n    /**\n     * Returns the origin position based on the user's position preference.\n     */\n    _getOrigin(position: TooltipPosition): OriginConnectionPosition {\n        switch (position) {\n            case 'top':\n            case 'bottom': {\n                return {\n                    originX: 'center',\n                    originY: position,\n                };\n            }\n            case 'left': {\n                return {\n                    originX: this._isLtr ? 'start' : 'end',\n                    originY: 'center',\n                };\n            }\n            case 'right': {\n                return {\n                    originX: this._isLtr ? 'end' : 'start',\n                    originY: 'center',\n                };\n            }\n            default: {\n                throw getNxTooltipInvalidPositionError(position);\n            }\n        }\n    }\n\n    /** Returns the overlay position based on the user's preference */\n    _getOverlayPosition(position: TooltipPosition): OverlayConnectionPosition {\n        switch (position) {\n            case 'top':\n            case 'bottom': {\n                return {\n                    overlayX: 'center',\n                    overlayY: this._getInversePosition(position) as VerticalConnectionPos,\n                };\n            }\n            case 'left': {\n                return {\n                    overlayX: this._isLtr ? 'end' : 'start',\n                    overlayY: 'center',\n                };\n            }\n            case 'right': {\n                return {\n                    overlayX: this._isLtr ? 'start' : 'end',\n                    overlayY: 'center',\n                };\n            }\n            default: {\n                throw getNxTooltipInvalidPositionError(position);\n            }\n        }\n    }\n\n    /** Returns the overlay offset required by the user's position preference */\n    private _getOffset(position: TooltipPosition) {\n        switch (position) {\n            case 'top': {\n                return {\n                    offsetY: BASE_OFFSET * -1,\n                };\n            }\n            case 'bottom': {\n                return {\n                    offsetY: BASE_OFFSET,\n                };\n            }\n            case 'left': {\n                return {\n                    offsetX: BASE_OFFSET * -1,\n                };\n            }\n            case 'right': {\n                return {\n                    offsetX: BASE_OFFSET,\n                };\n            }\n            default: {\n                throw getNxTooltipInvalidPositionError(position);\n            }\n        }\n    }\n\n    /** Returns the opposite position, using aquila tooltip position naming: top, right, bottom, left */\n    private _getInverseTooltipPosition(position: TooltipPosition): TooltipPosition {\n        const tooltopPositionPairs = {\n            top: 'bottom',\n            right: 'left',\n            bottom: 'top',\n            left: 'right',\n        };\n        return tooltopPositionPairs[position] as TooltipPosition;\n    }\n\n    /** Returns the opposite position, using angular position naming: top, bottom, start, end, center */\n    private _getInversePosition(position: string): VerticalConnectionPos | HorizontalConnectionPos {\n        const positionPairs: { [k: string]: VerticalConnectionPos | HorizontalConnectionPos } = {\n            top: 'bottom',\n            bottom: 'top',\n            start: 'end',\n            end: 'start',\n            center: 'center',\n        };\n        return positionPairs[position];\n    }\n\n    /** Returns an array of fallback positions for tooltip, following the algoritm:\n     * 1) Slightly alternate preferred position if applicable. I.e. for 'top' try 'top-start' and 'top-end' positioning.\n     * 2) Try the opposite position, i.e. for 'top' try 'bottom'.\n     * 3) Slightly alternate opposite position, i.e. 'bottom-start', 'bottom-end'\n     * 4) All remaining positions from positions list\n     */\n    private _getFallbackPositions(position: TooltipPosition, possiblePositions: TooltipPosition[] = this._possibleTooltipPositions): ConnectionPositionPair[] {\n        if (!position) {\n            return [];\n        }\n        const remainigPositions = possiblePositions.filter(possiblePosition => possiblePosition !== position);\n        let fallbackPositions: ConnectionPositionPair[] = [];\n        switch (position) {\n            case 'top':\n            case 'bottom': {\n                fallbackPositions = this._getVerticalFallbackPositionPairs(position);\n                break;\n            }\n            case 'left':\n            case 'right': {\n                fallbackPositions = this._getHorizontalFallbackPositionPairs(position);\n                break;\n            }\n        }\n\n        const inversePosition = this._getInverseTooltipPosition(position);\n        const nextFallbackPosition = remainigPositions.includes(inversePosition) ? inversePosition : possiblePositions[0];\n        return [...fallbackPositions, ...this._getFallbackPositions(nextFallbackPosition, remainigPositions)];\n    }\n\n    /** Calculates fallbacks for vertical tooltip positioning */\n    private _getVerticalFallbackPositionPairs(position: TooltipVerticalPosition): ConnectionPositionPair[] {\n        const isSelectedPosition = position === this.position;\n        const verticalFallbackPositionPairs: ConnectionPositionPair[] = [];\n        const basePositionPair = {\n            ...this._getOrigin(position),\n            ...this._getOverlayPosition(position),\n            ...this._getOffset(position),\n        };\n\n        if (!isSelectedPosition) {\n            // HINT: selected position matches basePosition, so we don't need to repeat it in fallback\n            verticalFallbackPositionPairs.push(basePositionPair);\n        }\n        verticalFallbackPositionPairs.push(\n            {\n                ...basePositionPair,\n                originX: 'start',\n                overlayX: 'start',\n            },\n            {\n                ...basePositionPair,\n                originX: 'end',\n                overlayX: 'end',\n            },\n        );\n        return verticalFallbackPositionPairs;\n    }\n\n    /** Calculates fallbacks for horizontal tooltip positioning */\n    private _getHorizontalFallbackPositionPairs(position: TooltipHorizontalPosition): ConnectionPositionPair[] {\n        const offset = this._getOffset(position);\n\n        return [\n            {\n                ...this._getOrigin(position),\n                ...this._getOverlayPosition(position),\n                ...offset,\n            },\n        ];\n    }\n\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    private _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n\n            this._ngZone.onMicrotaskEmpty\n                .asObservable()\n                .pipe(take(1), takeUntil(this._destroyed))\n                .subscribe(() => {\n                    if (this._tooltipInstance && this._overlayRef) {\n                        this._overlayRef.updatePosition();\n                    }\n                });\n        }\n    }\n\n    private _positionArrow(pair: ConnectionPositionPair) {\n        if (!this._overlayRef || !this._tooltipInstance) {\n            return;\n        }\n        const parentElementPositionX = this._elementRef.nativeElement.getBoundingClientRect().left;\n        const parentElementWidth = this._elementRef.nativeElement.getBoundingClientRect().width / 2;\n        const overlayElementLeftOffset = this._overlayRef.overlayElement.getBoundingClientRect().left;\n\n        // calculation for x position of the parent element. In this case, overlay left offset is the one thing to consider.\n        const targetPosition = parentElementPositionX + parentElementWidth - overlayElementLeftOffset;\n\n        if (pair.originX === pair.overlayX) {\n            const arrowStyle = { left: targetPosition + 'px' };\n            this._tooltipInstance.arrowStyle = arrowStyle;\n        }\n\n        if (pair.originX === 'end' && pair.overlayX === 'start') {\n            this._tooltipInstance.arrowStyle = {\n                top: '50%',\n            };\n            this._tooltipInstance.position = 'right';\n        } else if (pair.originY === 'bottom' && pair.overlayY === 'top') {\n            this._tooltipInstance.arrowStyle = {\n                left: targetPosition + 'px',\n            };\n            this._tooltipInstance.position = 'bottom';\n        } else if (pair.originX === 'start' && pair.overlayX === 'end') {\n            this._tooltipInstance.arrowStyle = {\n                top: '50%',\n            };\n            this._tooltipInstance.position = 'left';\n        } else if (pair.originY === 'top' && pair.overlayY === 'bottom') {\n            this._tooltipInstance.arrowStyle = {\n                left: targetPosition + 'px',\n            };\n            this._tooltipInstance.position = 'top';\n        }\n    }\n\n    _dirChangeHandler(value: Direction) {\n        if (this._overlayRef) {\n            this.hide(0);\n            this._overlayRef.setDirection(value);\n            this._updatePosition();\n        }\n    }\n\n    get _isLtr(): boolean {\n        return !this._dir || this._dir.value === 'ltr';\n    }\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxTooltipComponent } from './tooltip.component';\nimport { NX_TOOLTIP_SCROLL_STRATEGY_PROVIDER, NxTooltipDirective } from './tooltip.directive';\n\n@NgModule({\n    imports: [A11yModule, CommonModule, OverlayModule],\n    exports: [NxTooltipDirective, NxTooltipComponent],\n    declarations: [NxTooltipDirective, NxTooltipComponent],\n    providers: [NX_TOOLTIP_SCROLL_STRATEGY_PROVIDER],\n})\nexport class NxTooltipModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1"],"mappings":";;;;;;;;;;;;;;;;;;AAEA;;;AAGG;AACU,MAAA,mBAAmB,GAE5B;;AAEA,IAAA,YAAY,EAAE,OAAO,CAAC,OAAO,EAAE;QAC3B,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QACrD,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;AACvC,QAAA,UAAU,CAAC,cAAc,EAAE,OAAO,CAAC,iCAAiC,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7F,QAAA,UAAU,CAAC,aAAa,EAAE,OAAO,CAAC,iCAAiC,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAC/F,CAAC;;;ACNN;;;AAGG;MAeU,kBAAkB,CAAA;IA8D3B,WAAoB,CAAA,IAAuB,EAAS,UAAsB,EAAA;AAAtD,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAmB;AAAS,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;;AA5DlE,QAAA,IAAc,CAAA,cAAA,GAAkB,IAAI,CAAC;;AAGrC,QAAA,IAAc,CAAA,cAAA,GAAkB,IAAI,CAAC;AAarC,QAAA,IAAW,CAAA,WAAA,GAAsB,SAAS,CAAC;AAO3C,QAAA,IAAS,CAAA,SAAA,GAAoB,QAAQ,CAAC;AAa9C,QAAA,IAAW,CAAA,WAAA,GAA8B,EAAE,CAAC;;AAmBpC,QAAA,IAAmB,CAAA,mBAAA,GAAG,KAAK,CAAC;;AAGnB,QAAA,IAAA,CAAA,OAAO,GAAiB,IAAI,OAAO,EAAE,CAAC;KAEuB;IApD9E,IAAI,OAAO,CAAC,KAAa,EAAA;AACrB,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;KAC5B;AACD,IAAA,IAAI,OAAO,GAAA;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;AAKD,IAAA,IAAI,UAAU,GAAA;QACV,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;IAKD,IAAI,QAAQ,CAAC,KAAsB,EAAA;AAC/B,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACvB,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;KAC5B;;AAGD,IAAA,IAAI,QAAQ,GAAA;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;IAKD,IAAI,UAAU,CAAC,KAAK,EAAA;AAChB,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACzB,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;KAC5B;;AAGD,IAAA,IAAI,UAAU,GAAA;QACV,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;AAGD,IAAA,IAAI,UAAU,GAAA;AACV,QAAA,OAAO,CAAsB,mBAAA,EAAA,IAAI,CAAC,QAAQ,EAAE,CAAC;KAChD;AAUD;;;AAGG;AACH,IAAA,IAAI,CAAC,KAAa,EAAA;;QAEd,IAAI,IAAI,CAAC,cAAc,EAAE;AACrB,YAAA,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAClC,YAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC9B,SAAA;;AAGD,QAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,MAAK;AACzC,YAAA,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;AAC7B,YAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;;;AAI3B,YAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;SAC5B,EAAE,KAAK,CAAC,CAAC;KACb;AAED;;;AAGG;AACH,IAAA,IAAI,CAAC,KAAa,EAAA;QACd,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,OAAO;AACV,SAAA;;QAGD,IAAI,IAAI,CAAC,cAAc,EAAE;AACrB,YAAA,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAClC,YAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC9B,SAAA;QAED,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,MAAK;AACzC,YAAA,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;AAC5B,YAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;;;AAI3B,YAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;SAC5B,EAAE,KAAK,CAAC,CAAC;KACb;;IAGD,WAAW,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;KACtC;;IAGD,SAAS,GAAA;AACL,QAAA,OAAO,IAAI,CAAC,UAAU,KAAK,SAAS,CAAC;KACxC;;IAGD,SAAS,GAAA;QACL,OAAO,IAAI,CAAC,cAAc,KAAK,IAAI,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC;KACvE;IAED,WAAW,GAAA;AACP,QAAA,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;KAC3B;IAED,eAAe,GAAA;AACX,QAAA,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;KACpC;AAED,IAAA,cAAc,CAAC,KAAqB,EAAA;AAChC,QAAA,MAAM,OAAO,GAAG,KAAK,CAAC,OAA4B,CAAC;QAEnD,IAAI,OAAO,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;AAC3C,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AACvB,SAAA;AAED,QAAA,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,QAAQ,EAAE;AAC/C,YAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;AACnC,SAAA;KACJ;AAED;;AAEG;IACH,sBAAsB,GAAA;QAClB,IAAI,IAAI,CAAC,mBAAmB,EAAE;AAC1B,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAChB,SAAA;KACJ;;+GA1JQ,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,kPC3B/B,8PAIA,EAAA,MAAA,EAAA,CAAA,2kCAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EDcgB,CAAC,mBAAmB,CAAC,YAAY,CAAC,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FASrC,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAd9B,SAAS;+BACI,sBAAsB,EAAA,eAAA,EAGf,uBAAuB,CAAC,MAAM,EAAA,UAAA,EACnC,CAAC,mBAAmB,CAAC,YAAY,CAAC,EACxC,IAAA,EAAA;;;AAGF,wBAAA,cAAc,EAAE,qCAAqC;AACrD,wBAAA,cAAc,EAAE,+BAA+B;AAC/C,wBAAA,aAAa,EAAE,MAAM;qBACxB,EAAA,QAAA,EAAA,8PAAA,EAAA,MAAA,EAAA,CAAA,2kCAAA,CAAA,EAAA,CAAA;;;AEDL,MAAM,WAAW,GAAG,EAAE,CAAC;AASvB;MACa,0BAA0B,GAAG,IAAI,cAAc,CAAuB,4BAA4B,EAAE;AAEjH;AACM,SAAU,2CAA2C,CAAC,OAAgB,EAAA;IACxE,OAAO,MAAM,OAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC;AACvD,CAAC;AAED;AACa,MAAA,mCAAmC,GAAG;AAC/C,IAAA,OAAO,EAAE,0BAA0B;AACnC,IAAA,UAAU,EAAE,2CAA2C;IACvD,IAAI,EAAE,CAAC,OAAO,CAAC;EACjB;AAEF;;;AAGG;AACI,MAAM,sBAAsB,GAAG,mBAAmB;AAEzD;;;AAGG;AACG,SAAU,gCAAgC,CAAC,QAAgB,EAAA;AAC7D,IAAA,OAAO,KAAK,CAAC,CAAA,kBAAA,EAAqB,QAAQ,CAAA,aAAA,CAAe,CAAC,CAAC;AAC/D,CAAC;AAiBD;MACa,0BAA0B,GAAG,IAAI,cAAc,CAA0B,4BAA4B,EAAE;AAChH,IAAA,UAAU,EAAE,MAAM;AAClB,IAAA,OAAO,EAAE,kCAAkC;AAC9C,CAAA,EAAE;SAEa,kCAAkC,GAAA;IAC9C,OAAO;AACH,QAAA,SAAS,EAAE,GAAG;AACd,QAAA,SAAS,EAAE,GAAG;AACd,QAAA,iBAAiB,EAAE,IAAI;KAC1B,CAAC;AACN,CAAC;AAED;;;AAGG;MASU,kBAAkB,CAAA;IAgG3B,WACY,CAAA,QAAiB,EACjB,WAAoC,EACpC,iBAAmC,EACnC,iBAAmC,EACnC,OAAe,EACvB,QAAkB,EACV,cAA6B,EAC7B,aAA2B,EACf,IAA2B,EACS,eAA+C,EAC3D,6BAAmD,EAAA;;AAVvF,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAS;AACjB,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAyB;AACpC,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAkB;AACnC,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAkB;AACnC,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAQ;AAEf,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAe;AAC7B,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAc;AACf,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAuB;AACS,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAgC;AAC3D,QAAA,IAA6B,CAAA,6BAAA,GAA7B,6BAA6B,CAAsB;AAtG3F,QAAA,IAAS,CAAA,SAAA,GAAoB,QAAQ,CAAC;AACtC,QAAA,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;AAClB,QAAA,IAAW,CAAA,WAAA,GAAG,KAAK,CAAC;AAEpB,QAAA,IAAyB,CAAA,yBAAA,GAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;;QAsD7D,IAAA,CAAA,SAAS,GAAW,IAAI,CAAC,eAAgB,CAAC,SAAS,CAAC;;QAGpD,IAAA,CAAA,SAAS,GAAW,IAAI,CAAC,eAAgB,CAAC,SAAS,CAAC;AAEzE,QAAA,IAAQ,CAAA,QAAA,GAAG,EAAE,CAAC;;AAsBd,QAAA,IAAA,CAAA,sBAAsB,GAAG,IAAI,CAAC,6BAA6B,CAAC;AAE5D,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,GAAG,EAA8C,CAAC;AAEhE,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;QAe9C,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAE,CAAA,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAEhG,QAAA,MAAM,OAAO,GAAgB,WAAW,CAAC,aAAa,CAAC;;;QAIvD,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;AACpC,YAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;AACnG,SAAA;AAAM,aAAA;;;AAGH,YAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;AAC9D,SAAA;QAED,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,KAAK,KAAK,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;QAE9F,aAAa;aACR,OAAO,CAAC,WAAW,CAAC;AACpB,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAChC,SAAS,CAAC,MAAM,IAAG;;YAEhB,IAAI,CAAC,MAAM,EAAE;AACT,gBAAA,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,aAAA;iBAAM,IAAI,MAAM,KAAK,UAAU,EAAE;gBAC9B,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;AAClC,aAAA;AACL,SAAC,CAAC,CAAC;AAEP,QAAA,IAAI,eAAe,KAAf,IAAA,IAAA,eAAe,uBAAf,eAAe,CAAE,QAAQ,EAAE;AAC3B,YAAA,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,QAAQ,CAAC;AAC5C,SAAA;KACJ;;AAhID,IAAA,IACI,QAAQ,GAAA;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;IACD,IAAI,QAAQ,CAAC,KAAsB,EAAA;AAC/B,QAAA,IAAI,KAAK,KAAK,IAAI,CAAC,SAAS,EAAE;AAC1B,YAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YAEvB,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,IAAI,CAAC,eAAe,EAAE,CAAC;gBAEvB,IAAI,IAAI,CAAC,gBAAgB,EAAE;oBACvB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;AAChD,oBAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjC,iBAAA;AAED,gBAAA,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;AACrC,aAAA;AACJ,SAAA;KACJ;;AAGD,IAAA,IACI,QAAQ,GAAA;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;IACD,IAAI,QAAQ,CAAC,KAAmB,EAAA;AAC5B,QAAA,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;;QAG9C,IAAI,IAAI,CAAC,SAAS,EAAE;AAChB,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAChB,SAAA;KACJ;AAED;;AAEG;AACH,IAAA,IACI,UAAU,GAAA;QACV,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;IACD,IAAI,UAAU,CAAC,KAAmB,EAAA;AAC9B,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;AAClC,QAAA,IAAI,CAAC,WAAW,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;AAChD,QAAA,IAAI,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAE;YAC/B,IAAI,CAAC,0BAA0B,EAAE,CAAC;AACrC,SAAA;KACJ;;AAWD,IAAA,IACI,OAAO,GAAA;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;IACD,IAAI,OAAO,CAAC,KAAa,EAAA;AACrB,QAAA,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAGrF,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,KAAK,CAAA,CAAE,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;QAEvD,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC5C,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAChB,SAAA;AAAM,aAAA;YACH,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAC7B,YAAA,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAC9E,SAAA;KACJ;IAuDD,QAAQ,GAAA;QACJ,IAAI,CAAC,0BAA0B,EAAE,CAAC;KACrC;AAED;;AAEG;IACH,WAAW,GAAA;QACP,IAAI,IAAI,CAAC,WAAW,EAAE;AAClB,YAAA,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;AAC3B,YAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAChC,SAAA;;QAGD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,KAAK,KAAI;YAC9C,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,mBAAmB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AACxE,SAAC,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;AAE9B,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AAE3B,QAAA,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACpF,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACvD;;AAGD,IAAA,IAAI,CAAC,KAAA,GAAgB,IAAI,CAAC,SAAS,EAAA;;QAC/B,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,iBAAiB,EAAE,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,SAAS,EAAE,CAAA,CAAC,EAAE;YACrG,OAAO;AACV,SAAA;AAED,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAEzC,IAAI,CAAC,OAAO,EAAE,CAAC;AACf,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,eAAe,CAAC,kBAAkB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC/F,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACxD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;AACvD,QAAA,IAAI,CAAC,gBAAgB;AAChB,aAAA,WAAW,EAAE;AACb,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAChC,SAAS,CAAC,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QACrC,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAC7B,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACrC;;AAGD,IAAA,IAAI,CAAC,KAAA,GAAgB,IAAI,CAAC,SAAS,EAAA;QAC/B,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACvB,YAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrC,SAAA;KACJ;;IAGD,MAAM,GAAA;AACF,QAAA,IAAI,CAAC,iBAAiB,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;KACxD;;IAGD,iBAAiB,GAAA;AACb,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC;KACvE;;AAGD,IAAA,cAAc,CAAC,CAAgB,EAAA;QAC3B,IAAI,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,OAAO,KAAK,MAAM,EAAE;YAClD,CAAC,CAAC,eAAe,EAAE,CAAC;AACpB,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAChB,SAAA;KACJ;;IAGD,eAAe,GAAA;;QACX,IAAI,CAAC,IAAI,CAAC,CAAA,EAAA,GAAA,IAAI,CAAC,eAAe,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,iBAAiB,CAAC,CAAC;KACtD;AAED;;AAEG;IACH,0BAA0B,GAAA;AACtB,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;AAC/C,QAAA,MAAM,YAAY,GAAG,OAAO,CAAC,KAAyD,CAAC;AACvF,QAAA,MAAM,YAAY,GAAG,OAAO,CAAC,QAAQ,KAAK,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,UAAU,IAAI,IAAI,CAAC,WAAW,CAAC;QACzG,MAAM,UAAU,GAAG,YAAY,GAAG,MAAM,GAAG,MAAM,CAAC;AAClD,QAAA,YAAY,CAAC,gBAAgB,GAAG,YAAY,CAAC,UAAU,GAAI,YAAoB,CAAC,YAAY,GAAG,UAAU,CAAC;KAC7G;;IAGO,cAAc,GAAA;;QAClB,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;YACpD,OAAO,IAAI,CAAC,WAAW,CAAC;AAC3B,SAAA;AAED,QAAA,MAAM,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,2BAA2B,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;AAGjG,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAEtJ,QAAA,QAAQ,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,CAAC;AAEvD,QAAA,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,IAAG;YACzE,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACvB,gBAAA,MAAM,IAAI,GAAG,MAAM,CAAC,cAAc,CAAC;AAEnC,gBAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;AAElD,gBAAA,IAAI,MAAM,CAAC,wBAAwB,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,EAAE;;;AAGvF,oBAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,iBAAA;AACJ,aAAA;AACL,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YACpC,SAAS,EAAE,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,KAAI,KAAK;AACpC,YAAA,gBAAgB,EAAE,QAAQ;AAC1B,YAAA,UAAU,EAAE,sBAAsB;AAClC,YAAA,cAAc,EAAE,IAAI,CAAC,sBAAsB,EAAE;AAC7C,YAAA,mBAAmB,EAAE,IAAI;AAC5B,SAAA,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,CAAC;AAEvB,QAAA,IAAI,CAAC,WAAW;AACX,aAAA,WAAW,EAAE;AACb,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAChC,SAAS,CAAC,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAErC,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;IAGO,OAAO,GAAA;;AACX,QAAA,IAAI,MAAA,IAAI,CAAC,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,EAAE,EAAE;AACjC,YAAA,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;AAC7B,SAAA;AAED,QAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;KAChC;;IAGO,eAAe,GAAA;AACnB,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACnB,OAAO;AACV,SAAA;QACD,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,gBAAqD,CAAC;QACpG,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxD,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9C,MAAM,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE5D,QAAQ,CAAC,aAAa,CAAC;0DAEZ,MAAM,CAAA,EACN,OAAO,CAAA,EACP,MAAM,CAAA;AAEb,YAAA,GAAG,SAAS;AACf,SAAA,CAAC,CAAC;KACN;AAED;;AAEG;AACH,IAAA,UAAU,CAAC,QAAyB,EAAA;AAChC,QAAA,QAAQ,QAAQ;AACZ,YAAA,KAAK,KAAK,CAAC;YACX,KAAK,QAAQ,EAAE;gBACX,OAAO;AACH,oBAAA,OAAO,EAAE,QAAQ;AACjB,oBAAA,OAAO,EAAE,QAAQ;iBACpB,CAAC;AACL,aAAA;YACD,KAAK,MAAM,EAAE;gBACT,OAAO;oBACH,OAAO,EAAE,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,KAAK;AACtC,oBAAA,OAAO,EAAE,QAAQ;iBACpB,CAAC;AACL,aAAA;YACD,KAAK,OAAO,EAAE;gBACV,OAAO;oBACH,OAAO,EAAE,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,OAAO;AACtC,oBAAA,OAAO,EAAE,QAAQ;iBACpB,CAAC;AACL,aAAA;AACD,YAAA,SAAS;AACL,gBAAA,MAAM,gCAAgC,CAAC,QAAQ,CAAC,CAAC;AACpD,aAAA;AACJ,SAAA;KACJ;;AAGD,IAAA,mBAAmB,CAAC,QAAyB,EAAA;AACzC,QAAA,QAAQ,QAAQ;AACZ,YAAA,KAAK,KAAK,CAAC;YACX,KAAK,QAAQ,EAAE;gBACX,OAAO;AACH,oBAAA,QAAQ,EAAE,QAAQ;AAClB,oBAAA,QAAQ,EAAE,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAA0B;iBACxE,CAAC;AACL,aAAA;YACD,KAAK,MAAM,EAAE;gBACT,OAAO;oBACH,QAAQ,EAAE,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,OAAO;AACvC,oBAAA,QAAQ,EAAE,QAAQ;iBACrB,CAAC;AACL,aAAA;YACD,KAAK,OAAO,EAAE;gBACV,OAAO;oBACH,QAAQ,EAAE,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,KAAK;AACvC,oBAAA,QAAQ,EAAE,QAAQ;iBACrB,CAAC;AACL,aAAA;AACD,YAAA,SAAS;AACL,gBAAA,MAAM,gCAAgC,CAAC,QAAQ,CAAC,CAAC;AACpD,aAAA;AACJ,SAAA;KACJ;;AAGO,IAAA,UAAU,CAAC,QAAyB,EAAA;AACxC,QAAA,QAAQ,QAAQ;YACZ,KAAK,KAAK,EAAE;gBACR,OAAO;AACH,oBAAA,OAAO,EAAE,WAAW,GAAG,CAAC,CAAC;iBAC5B,CAAC;AACL,aAAA;YACD,KAAK,QAAQ,EAAE;gBACX,OAAO;AACH,oBAAA,OAAO,EAAE,WAAW;iBACvB,CAAC;AACL,aAAA;YACD,KAAK,MAAM,EAAE;gBACT,OAAO;AACH,oBAAA,OAAO,EAAE,WAAW,GAAG,CAAC,CAAC;iBAC5B,CAAC;AACL,aAAA;YACD,KAAK,OAAO,EAAE;gBACV,OAAO;AACH,oBAAA,OAAO,EAAE,WAAW;iBACvB,CAAC;AACL,aAAA;AACD,YAAA,SAAS;AACL,gBAAA,MAAM,gCAAgC,CAAC,QAAQ,CAAC,CAAC;AACpD,aAAA;AACJ,SAAA;KACJ;;AAGO,IAAA,0BAA0B,CAAC,QAAyB,EAAA;AACxD,QAAA,MAAM,oBAAoB,GAAG;AACzB,YAAA,GAAG,EAAE,QAAQ;AACb,YAAA,KAAK,EAAE,MAAM;AACb,YAAA,MAAM,EAAE,KAAK;AACb,YAAA,IAAI,EAAE,OAAO;SAChB,CAAC;AACF,QAAA,OAAO,oBAAoB,CAAC,QAAQ,CAAoB,CAAC;KAC5D;;AAGO,IAAA,mBAAmB,CAAC,QAAgB,EAAA;AACxC,QAAA,MAAM,aAAa,GAAqE;AACpF,YAAA,GAAG,EAAE,QAAQ;AACb,YAAA,MAAM,EAAE,KAAK;AACb,YAAA,KAAK,EAAE,KAAK;AACZ,YAAA,GAAG,EAAE,OAAO;AACZ,YAAA,MAAM,EAAE,QAAQ;SACnB,CAAC;AACF,QAAA,OAAO,aAAa,CAAC,QAAQ,CAAC,CAAC;KAClC;AAED;;;;;AAKG;AACK,IAAA,qBAAqB,CAAC,QAAyB,EAAE,iBAAuC,GAAA,IAAI,CAAC,yBAAyB,EAAA;QAC1H,IAAI,CAAC,QAAQ,EAAE;AACX,YAAA,OAAO,EAAE,CAAC;AACb,SAAA;AACD,QAAA,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,MAAM,CAAC,gBAAgB,IAAI,gBAAgB,KAAK,QAAQ,CAAC,CAAC;QACtG,IAAI,iBAAiB,GAA6B,EAAE,CAAC;AACrD,QAAA,QAAQ,QAAQ;AACZ,YAAA,KAAK,KAAK,CAAC;YACX,KAAK,QAAQ,EAAE;AACX,gBAAA,iBAAiB,GAAG,IAAI,CAAC,iCAAiC,CAAC,QAAQ,CAAC,CAAC;gBACrE,MAAM;AACT,aAAA;AACD,YAAA,KAAK,MAAM,CAAC;YACZ,KAAK,OAAO,EAAE;AACV,gBAAA,iBAAiB,GAAG,IAAI,CAAC,mCAAmC,CAAC,QAAQ,CAAC,CAAC;gBACvE,MAAM;AACT,aAAA;AACJ,SAAA;QAED,MAAM,eAAe,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;AAClE,QAAA,MAAM,oBAAoB,GAAG,iBAAiB,CAAC,QAAQ,CAAC,eAAe,CAAC,GAAG,eAAe,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;AAClH,QAAA,OAAO,CAAC,GAAG,iBAAiB,EAAE,GAAG,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,EAAE,iBAAiB,CAAC,CAAC,CAAC;KACzG;;AAGO,IAAA,iCAAiC,CAAC,QAAiC,EAAA;AACvE,QAAA,MAAM,kBAAkB,GAAG,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC;QACtD,MAAM,6BAA6B,GAA6B,EAAE,CAAC;QACnE,MAAM,gBAAgB,iDACf,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA,EACzB,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAA,EAClC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAC/B,CAAC;QAEF,IAAI,CAAC,kBAAkB,EAAE;;AAErB,YAAA,6BAA6B,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACxD,SAAA;QACD,6BAA6B,CAAC,IAAI,CAEvB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,gBAAgB,KACnB,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,OAAO,EAGd,CAAA,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,gBAAgB,CACnB,EAAA,EAAA,OAAO,EAAE,KAAK,EACd,QAAQ,EAAE,KAAK,EAAA,CAAA,CAEtB,CAAC;AACF,QAAA,OAAO,6BAA6B,CAAC;KACxC;;AAGO,IAAA,mCAAmC,CAAC,QAAmC,EAAA;QAC3E,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAEzC,OAAO;AAEI,YAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA,EACzB,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,GAClC,MAAM,CAAA;SAEhB,CAAC;KACL;;IAGO,qBAAqB,GAAA;;;QAGzB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAE7C,IAAI,CAAC,OAAO,CAAC,gBAAgB;AACxB,iBAAA,YAAY,EAAE;AACd,iBAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBACzC,SAAS,CAAC,MAAK;AACZ,gBAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,WAAW,EAAE;AAC3C,oBAAA,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;AACrC,iBAAA;AACL,aAAC,CAAC,CAAC;AACV,SAAA;KACJ;AAEO,IAAA,cAAc,CAAC,IAA4B,EAAA;QAC/C,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC7C,OAAO;AACV,SAAA;AACD,QAAA,MAAM,sBAAsB,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC;AAC3F,QAAA,MAAM,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC;AAC5F,QAAA,MAAM,wBAAwB,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC;;AAG9F,QAAA,MAAM,cAAc,GAAG,sBAAsB,GAAG,kBAAkB,GAAG,wBAAwB,CAAC;AAE9F,QAAA,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,QAAQ,EAAE;YAChC,MAAM,UAAU,GAAG,EAAE,IAAI,EAAE,cAAc,GAAG,IAAI,EAAE,CAAC;AACnD,YAAA,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG,UAAU,CAAC;AACjD,SAAA;QAED,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,EAAE;AACrD,YAAA,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG;AAC/B,gBAAA,GAAG,EAAE,KAAK;aACb,CAAC;AACF,YAAA,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,OAAO,CAAC;AAC5C,SAAA;aAAM,IAAI,IAAI,CAAC,OAAO,KAAK,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;AAC7D,YAAA,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG;gBAC/B,IAAI,EAAE,cAAc,GAAG,IAAI;aAC9B,CAAC;AACF,YAAA,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC7C,SAAA;aAAM,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;AAC5D,YAAA,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG;AAC/B,gBAAA,GAAG,EAAE,KAAK;aACb,CAAC;AACF,YAAA,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,MAAM,CAAC;AAC3C,SAAA;aAAM,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;AAC7D,YAAA,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG;gBAC/B,IAAI,EAAE,cAAc,GAAG,IAAI;aAC9B,CAAC;AACF,YAAA,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC1C,SAAA;KACJ;AAED,IAAA,iBAAiB,CAAC,KAAgB,EAAA;QAC9B,IAAI,IAAI,CAAC,WAAW,EAAE;AAClB,YAAA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACb,YAAA,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACrC,IAAI,CAAC,eAAe,EAAE,CAAC;AAC1B,SAAA;KACJ;AAED,IAAA,IAAI,MAAM,GAAA;AACN,QAAA,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC;KAClD;;+GAziBQ,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,YAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EA0GH,0BAA0B,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EACtC,0BAA0B,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;mGA3G7B,kBAAkB,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,CAAA,mBAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,mBAAA,EAAA,UAAA,CAAA,EAAA,UAAA,EAAA,CAAA,qBAAA,EAAA,YAAA,CAAA,EAAA,SAAA,EAAA,CAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,SAAA,EAAA,CAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,EAAA,SAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,wBAAA,EAAA,UAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAR9B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,aAAa;AACvB,oBAAA,QAAQ,EAAE,WAAW;AACrB,oBAAA,IAAI,EAAE;AACF,wBAAA,WAAW,EAAE,wBAAwB;AACrC,wBAAA,YAAY,EAAE,mBAAmB;AACpC,qBAAA;iBACJ,CAAA;;;8BA0GQ,QAAQ;;8BACR,QAAQ;;8BAAI,MAAM;+BAAC,0BAA0B,CAAA;;8BAC7C,MAAM;+BAAC,0BAA0B,CAAA;;yBA9FlC,QAAQ,EAAA,CAAA;sBADX,KAAK;uBAAC,mBAAmB,CAAA;gBAuBtB,QAAQ,EAAA,CAAA;sBADX,KAAK;uBAAC,mBAAmB,CAAA;gBAiBtB,UAAU,EAAA,CAAA;sBADb,KAAK;uBAAC,qBAAqB,CAAA;gBAaC,SAAS,EAAA,CAAA;sBAArC,KAAK;uBAAC,oBAAoB,CAAA;gBAGE,SAAS,EAAA,CAAA;sBAArC,KAAK;uBAAC,oBAAoB,CAAA;gBAMvB,OAAO,EAAA,CAAA;sBADV,KAAK;uBAAC,WAAW,CAAA;;;MChKT,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,EAHT,YAAA,EAAA,CAAA,kBAAkB,EAAE,kBAAkB,CAF3C,EAAA,OAAA,EAAA,CAAA,UAAU,EAAE,YAAY,EAAE,aAAa,CACvC,EAAA,OAAA,EAAA,CAAA,kBAAkB,EAAE,kBAAkB,CAAA,EAAA,CAAA,CAAA;6GAIvC,eAAe,EAAA,SAAA,EAFb,CAAC,mCAAmC,CAAC,EAAA,OAAA,EAAA,CAHvC,CAAC,UAAU,EAAE,YAAY,EAAE,aAAa,CAAC,CAAA,EAAA,CAAA,CAAA;2FAKzC,eAAe,EAAA,UAAA,EAAA,CAAA;kBAN3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,OAAO,EAAE,CAAC,UAAU,EAAE,YAAY,EAAE,aAAa,CAAC;AAClD,oBAAA,OAAO,EAAE,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;AACjD,oBAAA,YAAY,EAAE,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;oBACtD,SAAS,EAAE,CAAC,mCAAmC,CAAC;iBACnD,CAAA;;;ACbD;;AAEG;;;;"}