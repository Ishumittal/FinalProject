{"version":3,"file":"aposin-ng-aquila-slider.mjs","sources":["../../../projects/ng-aquila/src/slider/slider.component.ts","../../../projects/ng-aquila/src/slider/slider.component.html","../../../projects/ng-aquila/src/slider/slider.module.ts","../../../projects/ng-aquila/src/slider/aposin-ng-aquila-slider.ts"],"sourcesContent":["import { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { BooleanInput, coerceBooleanProperty, coerceNumberProperty, NumberInput } from '@angular/cdk/coercion';\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { clamp } from '@aposin/ng-aquila/utils';\nimport { Decimal } from 'decimal.js';\nimport { fromEvent, Subscription } from 'rxjs';\n\ninterface TickItem {\n    gapSize: number;\n    hideTick: boolean;\n    isLongTick: boolean;\n}\n\nlet nextId = 0;\n\nconst DEFAULT_MIN = 0;\nconst DEFAULT_MAX = 100;\nconst DEFAULT_STEP = 1;\nconst DEFAULT_LABEL_POSITION = '-50%';\nconst VALUE_MARGIN = 4;\n\n@Component({\n    selector: 'nx-slider',\n    templateUrl: './slider.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['./slider.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NxSliderComponent),\n            multi: true,\n        },\n    ],\n    host: {\n        '[attr.aria-disabled]': 'disabled ? true : null',\n        '(keydown)': '_handleKeypress($event)',\n        '[class.nx-slider--disabled]': 'disabled',\n        '[class.nx-slider--negative]': 'negative',\n    },\n})\nexport class NxSliderComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\n    private _dragSubscriptions: Subscription[] = [];\n    private _value = 0;\n    private _decimalPlaces = 0;\n    private _step: number = DEFAULT_STEP;\n    private _id = `nx-slider-${nextId++}`;\n    private _tabIndex = 0;\n    private _min = DEFAULT_MIN;\n    private _max = DEFAULT_MAX;\n    private _label = '';\n    private _inverted = false;\n    private _thumbLabel = true;\n    private _negative = false;\n    private _hideLabels = false;\n    private _disabled = false;\n\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     */\n    @Input('tickInterval') set tickInterval(value: NumberInput) {\n        this._tickInterval = coerceNumberProperty(value);\n        this.ticks = this.getTicks(this.min, this.max, this.step, this._tickInterval, this.longTicks);\n        this._cdr.markForCheck();\n    }\n    get tickInterval(): number {\n        return this._tickInterval;\n    }\n    private _tickInterval = 0;\n\n    ticks: TickItem[] = [];\n\n    @ViewChild('handle', { static: true }) private _handleElement!: ElementRef;\n\n    _labelPosition: string = DEFAULT_LABEL_POSITION;\n\n    /** Sets the id of the slider. */\n    @Input('id')\n    set id(value: string) {\n        if (this._id !== value) {\n            this._id = value;\n            this._cdr.markForCheck();\n        }\n    }\n    get id(): string {\n        return this._id;\n    }\n\n    /** Sets the tabindex of the slider. */\n    @Input()\n    set tabindex(value: NumberInput) {\n        this._tabIndex = coerceNumberProperty(value);\n        this._cdr.markForCheck();\n    }\n    get tabindex(): number {\n        return this._disabled ? -1 : this._tabIndex;\n    }\n\n    /** Sets the minimum value (Default: 0). */\n    @Input('nxMin')\n    set min(value: NumberInput) {\n        this._min = coerceNumberProperty(value);\n        this.ticks = this.getTicks(this._min, this.max, this.step, this.tickInterval, this.longTicks);\n        this._cdr.markForCheck();\n    }\n    get min(): number {\n        return this._min;\n    }\n\n    /** Sets the maximum value (Default: 100). */\n    @Input('nxMax')\n    set max(value: NumberInput) {\n        this._max = coerceNumberProperty(value);\n        this.ticks = this.getTicks(this.min, this._max, this.step, this.tickInterval, this.longTicks);\n        this._cdr.markForCheck();\n    }\n    get max(): number {\n        return this._max;\n    }\n\n    /** Sets the step size by which the value of the slider can be increased or decreased (Default: 1). */\n    @Input('nxStep')\n    get step(): number {\n        return this._step;\n    }\n    set step(value: NumberInput) {\n        this._step = coerceNumberProperty(value, this._step);\n        this.ticks = this.getTicks(this.min, this.max, this._step, this._tickInterval, this.longTicks);\n        if (this._step % 1 !== 0) {\n            this._decimalPlaces = this._step.toString().split('.').pop()!.length;\n        }\n        this._cdr.markForCheck();\n    }\n\n    /** Sets the label which is displayed on top of the slider. */\n    @Input('nxLabel')\n    set label(value: string) {\n        if (this._label !== value) {\n            this._label = value;\n            this._cdr.markForCheck();\n        }\n    }\n    get label(): string {\n        return this._label;\n    }\n\n    /** Whether the input to the control of the slider should be disabled. */\n    @Input()\n    set disabled(value: BooleanInput) {\n        this._disabled = coerceBooleanProperty(value);\n        this._cdr.markForCheck();\n    }\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    /** Whether the max value is to the right (false) or left (true).*/\n    @Input('nxInverted')\n    set inverted(value: BooleanInput) {\n        this._inverted = coerceBooleanProperty(value);\n        this._cdr.markForCheck();\n    }\n    get inverted(): boolean {\n        return this._inverted;\n    }\n\n    /** Whether to display the thumb label on top of the slider.*/\n    @Input()\n    set thumbLabel(value: BooleanInput) {\n        this._thumbLabel = coerceBooleanProperty(value);\n        this._cdr.markForCheck();\n    }\n    get thumbLabel(): boolean {\n        return this._thumbLabel;\n    }\n\n    /** Whether the negative set of styles is applied (Default: 'false').*/\n    @Input('negative')\n    set negative(value: BooleanInput) {\n        this._negative = coerceBooleanProperty(value);\n        this._cdr.markForCheck();\n    }\n    get negative(): boolean {\n        return this._negative;\n    }\n\n    /** Hides the min/max labels (Default: 'false'). */\n    @Input('hideLabels')\n    set hideLabels(value: BooleanInput) {\n        this._hideLabels = coerceBooleanProperty(value);\n        this._cdr.markForCheck();\n    }\n    get hideLabels(): boolean {\n        return this._hideLabels;\n    }\n\n    /** Sets the array of value which will render as long tick (Default: Middle value if present). */\n    @Input('longTicks') set longTicks(value: number[]) {\n        if (this._longTicks !== value) {\n            this._longTicks = value;\n            this.ticks = this.getTicks(this.min, this.max, this.step, this.tickInterval, this._longTicks);\n            this._cdr.markForCheck();\n        }\n    }\n    get longTicks(): number[] {\n        return this._longTicks;\n    }\n    private _longTicks = [0];\n\n    /** An event is dispatched on each value change. */\n    @Output('nxValueChange') valueChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Sets the customization function for the value which is displayed above the slider handle (Default:(value) => value). ). */\n    @Input('nxValueFormatter') valueFormatter = (value: any) => value;\n\n    /** Sets the customization function for the label on the min-side of the slider (Default:(value) => value). */\n    @Input('nxLabelMinFormatter') labelMinFormatter = (value: any) => value;\n\n    /** Sets the customization function for the label on the max-side of the slider (Default:(value) => value). */\n    @Input('nxLabelMaxFormatter') labelMaxFormatter = (value: any) => value;\n\n    private _onChange: (value: any) => void = () => {};\n    private _onTouched: () => any = () => {};\n\n    constructor(\n        private elementRef: ElementRef,\n        private _cdr: ChangeDetectorRef,\n        private _ngZone: NgZone,\n        @Optional() private _dir: Directionality | null,\n        private _focusMonitor: FocusMonitor,\n    ) {}\n\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._handleElement);\n\n        setTimeout(() => {\n            this._updateLabelPosition();\n        });\n    }\n\n    /** Sets the current value of the slider. */\n    @Input('nxValue')\n    set value(value: NumberInput) {\n        this.writeValue(Number(value));\n\n        // wait for rerender to calculate latest label position\n        setTimeout(() => {\n            this._updateLabelPosition();\n        });\n    }\n\n    get value(): number {\n        return this._value;\n    }\n\n    ngOnDestroy() {\n        this._reset();\n        this._focusMonitor.stopMonitoring(this._handleElement);\n    }\n\n    writeValue(value: number) {\n        if (value !== this._value) {\n            this._value = value;\n            this.valueChange.emit(value);\n            this._cdr.markForCheck();\n        }\n    }\n\n    registerOnChange(fn: (value: any) => void) {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this._onTouched = fn;\n    }\n\n    setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    _isMinimum() {\n        return this._value === this.min;\n    }\n\n    /**\n     * Checks if the value is in the boundaries of min/max and if it is a multiple of `step.\n     */\n    _isValidStep() {\n        const safeValue = new Decimal(this._value).minus(this.min);\n        const modulo = safeValue.mod(this.step);\n        return this._isMinimum() || modulo.cmp(0) === 0;\n    }\n\n    /**\n     * We have to look at two cases:\n     * - current value is a valid multitude of the step size\n     *   then we can safely add or subtract the step\n     * - the value is not a valid multitude. this could be the max value or the value bound\n     *   via nxValue\n     *   then we look for the next closest value upwards or downwards\n     *   decimal.js provides a nice utility function for this.\n     */\n    _changeValue(valueDiff: number) {\n        let newValue = new Decimal(this._value);\n        if (this._isValidStep()) {\n            newValue = newValue.plus(valueDiff);\n        } else {\n            // subtract the minimum to find the closest multitude then add the minimum again to get the valid slider step\n            const minAdjustedValue = new Decimal(this._value).minus(this.min);\n            newValue = valueDiff < 0 ? minAdjustedValue.toNearest(this.step, Decimal.ROUND_DOWN) : minAdjustedValue.toNearest(this.step, Decimal.ROUND_UP);\n            newValue = newValue.plus(this.min);\n        }\n        // cast the Decimal object to a JS number before it gets returned\n        let toNumber = newValue.toNumber();\n        toNumber = clamp(toNumber, this.min, this.max);\n        if (this.value !== toNumber) {\n            this._onChange(toNumber);\n            this.valueChange.emit(toNumber);\n            this.value = toNumber;\n        }\n    }\n\n    get _percentageValue(): number {\n        let percentageValue = (((this.value || 0) - this.min) / (this.max - this.min)) * 100;\n        if (this.inverted) {\n            percentageValue = 100 - percentageValue;\n        }\n        return clamp(percentageValue, 0, 100);\n    }\n\n    _sliderClick(event: MouseEvent) {\n        if (this.disabled) {\n            return;\n        }\n\n        this._focusHandleElement();\n        event.stopPropagation();\n\n        const position = this._getPositionFromEvent(event);\n        const newValue = this._getValueFromPosition(position);\n\n        if (this.value !== newValue) {\n            this.value = newValue;\n            this._onChange(this.value);\n        }\n    }\n\n    _focus(): void {\n        // if (this.disabled) {}\n        this._focusHandleElement();\n    }\n\n    /**\n     * Prevent text selection when dragging the handle.\n     */\n    _selectStart() {\n        return false;\n    }\n\n    _handleKeypress(event: KeyboardEvent) {\n        if (this.disabled) {\n            return;\n        }\n\n        // TODO return statement should not substitute break keyword\n        switch (event.keyCode) {\n            case DOWN_ARROW:\n            case this.inverted ? RIGHT_ARROW : LEFT_ARROW:\n                return this._changeValue(-this.step);\n\n            case UP_ARROW:\n            case this.inverted ? LEFT_ARROW : RIGHT_ARROW:\n                return this._changeValue(this.step);\n        }\n    }\n\n    /**\n     * This is called on mousedown or touchstart\n     */\n    _dragStart() {\n        if (this.disabled) {\n            return;\n        }\n\n        this._ngZone.runOutsideAngular(() => {\n            this._dragSubscriptions.push(fromEvent<TouchEvent>(document, 'touchmove').subscribe(this._handleDragMove.bind(this)));\n            this._dragSubscriptions.push(fromEvent<MouseEvent>(document, 'mousemove').subscribe(this._handleDragMove.bind(this)));\n        });\n\n        this._dragSubscriptions.push(fromEvent<TouchEvent>(document, 'touchcancel').subscribe(this._handleDragStop.bind(this)));\n        this._dragSubscriptions.push(fromEvent<MouseEvent>(document, 'mouseup').subscribe(this._handleDragStop.bind(this)));\n        this._dragSubscriptions.push(fromEvent<TouchEvent>(document, 'touchend').subscribe(this._handleDragStop.bind(this)));\n    }\n\n    _formatValue(value: number): string {\n        return this.valueFormatter(value);\n    }\n\n    _formatLabelLeft(): string {\n        return this.inverted ? this._formatLabelMax() : this._formatLabelMin();\n    }\n\n    _formatLabelRight(): string {\n        return this.inverted ? this._formatLabelMin() : this._formatLabelMax();\n    }\n\n    _formatLabelMin() {\n        return this.labelMinFormatter(this.min);\n    }\n\n    _formatLabelMax() {\n        return this.labelMaxFormatter(this.max);\n    }\n\n    _focusHandleElement() {\n        this._handleElement.nativeElement.focus();\n    }\n\n    private _updateLabelPosition() {\n        const label = this._handleElement.nativeElement.querySelector('.nx-slider__value');\n\n        if (!label) {\n            return;\n        }\n\n        const handleRect = this._handleElement.nativeElement.getBoundingClientRect();\n        const valueRect = label.getBoundingClientRect(label);\n        const handleCenter = handleRect.left + handleRect.width / 2;\n        const labelLeft = handleCenter - valueRect.width / 2;\n        const labelRight = handleCenter + valueRect.width / 2;\n        const bodyWidth = document.body.offsetWidth;\n        let position = DEFAULT_LABEL_POSITION;\n\n        if (labelLeft < 0) {\n            position = -handleCenter + VALUE_MARGIN + 'px';\n        } else if (labelRight > bodyWidth) {\n            position = -valueRect.width + bodyWidth - handleCenter - VALUE_MARGIN + 'px';\n        }\n\n        this._labelPosition = `translateX(${position})`;\n        this._cdr.markForCheck();\n    }\n\n    private _getValueFromPosition(position: number): number {\n        const isRTL = this._dir?.value === 'rtl';\n        const rect = this.elementRef.nativeElement.getBoundingClientRect();\n        const x = Math.max(rect.left, Math.min(rect.right, position));\n\n        // position of slider relative to slider width\n        let percent = (x - rect.left) / rect.width;\n\n        if (this.inverted) {\n            percent = 1 - percent;\n        }\n\n        if (isRTL) {\n            percent = 1 - percent;\n        }\n\n        // edge case handling because of float precision errors you couldn't reach the maximum\n        let closestValue;\n\n        if (percent === 1) {\n            closestValue = this.max;\n        } else if (percent === 0) {\n            closestValue = this.min;\n        } else {\n            const exactValue = this.min + percent * (this.max - this.min);\n            closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n        }\n\n        if (this._decimalPlaces) {\n            closestValue = this._roundToDecimal(closestValue);\n        }\n\n        return clamp(closestValue, this.min, this.max);\n    }\n\n    private _roundToDecimal(value: number) {\n        return parseFloat(value.toFixed(this._decimalPlaces));\n    }\n\n    private _handleDragMove(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n\n        const position = this._getPositionFromEvent(event);\n        const newValue = this._getValueFromPosition(position);\n\n        if (this.value !== newValue) {\n            // run change detection to update value and position of handle\n            this._ngZone.run(() => {\n                this.value = newValue;\n                this._onChange(this.value);\n                this._cdr.markForCheck();\n            });\n        }\n    }\n\n    private _handleDragStop(event: MouseEvent | TouchEvent): void {\n        this._reset();\n        const position = this._getPositionFromEvent(event);\n        const newValue = this._getValueFromPosition(position);\n\n        if (this.value !== newValue) {\n            this.value = newValue;\n            this._onChange(this.value);\n        }\n    }\n\n    private _reset(): void {\n        for (const subscription of this._dragSubscriptions) {\n            subscription.unsubscribe();\n        }\n\n        this._dragSubscriptions = [];\n    }\n\n    private _getPositionFromEvent(event: MouseEvent | TouchEvent): number {\n        const cursor: any = event.type.includes('touch') ? (event as TouchEvent).touches.item(0) : event;\n        return cursor.clientX;\n    }\n\n    private getTicks(min: number, max: number, step: number, interval: number, longTick: number[] = []): TickItem[] {\n        if (!interval) {\n            return [];\n        }\n\n        const range = max - min;\n        const stepProduct = step * interval;\n        const gapSize = (stepProduct / range) * 100; // %\n        const numberOfTicks = Math.floor(100 / gapSize);\n        const spaceLeft = 100 - gapSize * numberOfTicks; // %\n        const hiddenThreshold = 3; // %\n\n        if (!longTick.length) {\n            const middleValue = range / 2;\n            longTick.push(middleValue);\n        }\n\n        return Array.from({ length: numberOfTicks }, (_, i) => {\n            const index = i + 1;\n            const value = index * stepProduct;\n            return {\n                gapSize,\n                hideTick: index === numberOfTicks && spaceLeft <= hiddenThreshold,\n                isLongTick: longTick.includes(value),\n            };\n        });\n    }\n}\n","<label class=\"nx-slider__label\" [id]=\"id + '-label'\" [attr.for]=\"id + '-handle'\" (click)=\"_focusHandleElement()\">{{ label }}</label>\n\n<div class=\"nx-slider__wrapper\" (click)=\"_sliderClick($event)\" [class.nx-slider__has-ticks]=\"!tickInterval\">\n    <span class=\"nx-slider__background\">\n        <span class=\"nx-slider__filler\" [style.width.%]=\"_percentageValue\">\n            <div\n                class=\"nx-slider__handle\"\n                [id]=\"id + '-handle'\"\n                [attr.tabindex]=\"tabindex\"\n                [attr.aria-labelledby]=\"id + '-label'\"\n                role=\"slider\"\n                [attr.aria-valuemin]=\"_formatLabelMin()\"\n                [attr.aria-valuemax]=\"_formatLabelMax()\"\n                [attr.aria-valuetext]=\"_formatValue(value)\"\n                [attr.aria-valuenow]=\"_formatValue(value)\"\n                (mousedown)=\"_dragStart()\"\n                (touchstart)=\"_dragStart()\"\n                (selectstart)=\"_selectStart()\"\n                #handle\n            >\n                <ng-container *ngIf=\"thumbLabel\">\n                    <span [style.transform]=\"_labelPosition\" class=\"nx-slider__value\">{{ _formatValue(value) }} </span>\n                    <div class=\"nx-slider__arrow\"> </div>\n                </ng-container>\n            </div>\n        </span>\n    </span>\n    <div *ngIf=\"tickInterval\" class=\"nx-slider__tick-container\">\n        <div\n            *ngFor=\"let t of ticks\"\n            class=\"nx-slider__tick\"\n            [class.nx-slider__tick-primary]=\"t.isLongTick\"\n            [class.nx-slider__tick-hidden]=\"t.hideTick\"\n            [ngStyle]=\"{ width: t.gapSize + '%' }\"\n        ></div>\n    </div>\n</div>\n\n<div *ngIf=\"!hideLabels\" class=\"nx-slider__label-container\">\n    <span class=\"nx-slider__value-label\">{{ _formatLabelLeft() }}</span>\n    <span class=\"nx-slider__value-label\">{{ _formatLabelRight() }}</span>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxSliderComponent } from './slider.component';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [NxSliderComponent],\n    exports: [NxSliderComponent],\n})\nexport class NxSliderModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}