{"version":3,"file":"aposin-ng-aquila-switcher.mjs","sources":["../../../projects/ng-aquila/src/switcher/switcher.component.ts","../../../projects/ng-aquila/src/switcher/switcher.component.html","../../../projects/ng-aquila/src/switcher/switcher.module.ts","../../../projects/ng-aquila/src/switcher/aposin-ng-aquila-switcher.ts"],"sourcesContent":["import { FocusMonitor } from '@angular/cdk/a11y';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher, randomString } from '@aposin/ng-aquila/utils';\n\nlet nextId = 0;\n/** Options for placement of the label */\nexport type POSITION = 'left' | 'right';\n/** Options for sizing of the label */\nexport type LABEL_SIZE = 'small' | 'large';\n\n@Component({\n    selector: 'nx-switcher',\n    templateUrl: 'switcher.component.html',\n    styleUrls: ['./switcher.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        /* the host id should be set to null, otherwise nx-switcher and its <input> get the same id\n    and on label click the input click is not triggered (double id problem) */\n        '[attr.id]': 'null',\n        '[class.is-negative]': 'negative',\n        '[class.is-checked]': 'checked',\n        '[class.is-big]': 'big',\n        '[class.nx-switcher--small-label]': 'labelSize === \"small\"',\n        '[class.nx-switcher--large-label]': 'labelSize === \"large\"',\n        '[class.is-disabled]': 'disabled',\n        '[class.is-swapped]': 'labelPosition === \"left\"',\n        '[class.has-error]': 'errorState',\n        '[attr.aria-invalid]': 'errorState',\n    },\n})\nexport class NxSwitcherComponent implements ControlValueAccessor, DoCheck, AfterViewInit, OnDestroy {\n    private _id = `nx-switcher-${nextId++}-${randomString()}`;\n    /** @docs-private */\n    errorState = false;\n\n    /** @docs-private */\n    @ViewChild('switcherLabelWrapper', { static: true }) _switcherLabelWrapper!: ElementRef;\n\n    @ViewChild('input') _nativeInput!: ElementRef<HTMLElement>;\n\n    /** Sets the id of the switcher */\n    @Input()\n    set id(value: string) {\n        this._id = value;\n        this._cdr.markForCheck();\n    }\n    get id(): string {\n        return this._id;\n    }\n\n    private _labelPosition: POSITION = 'right';\n    /** Specifies the placement of the label */\n    @Input()\n    set labelPosition(value: POSITION) {\n        this._labelPosition = value;\n        this._cdr.markForCheck();\n    }\n    get labelPosition(): POSITION {\n        return this._labelPosition;\n    }\n\n    private _name: string | null = null;\n    /** Sets the label text of the switcher */\n    @Input()\n    set name(value: string) {\n        this._name = value;\n        this._cdr.markForCheck();\n    }\n    get name(): string {\n        return this._name as string;\n    }\n\n    private _checked = false;\n    /** Whether the switcher is checked (on) or unchecked (off) */\n    @Input()\n    set checked(value: boolean) {\n        this._checked = value;\n        this._cdr.markForCheck();\n    }\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    private _big = false;\n    /** Whether the big switcher is used */\n    @Input('nxBig')\n    set big(value: BooleanInput) {\n        const newValue = coerceBooleanProperty(value);\n        this._big = newValue;\n        this._cdr.markForCheck();\n    }\n    get big(): boolean {\n        return this._big;\n    }\n\n    private _labelSize: LABEL_SIZE = 'large';\n    /** Sets the size of the label */\n    @Input()\n    set labelSize(value: LABEL_SIZE) {\n        this._labelSize = value;\n        this._cdr.markForCheck();\n    }\n    get labelSize(): LABEL_SIZE {\n        return this._labelSize;\n    }\n\n    private _negative = false;\n    /** Whether the style for a dark background is used */\n    @Input('nxNegative')\n    set negative(value: BooleanInput) {\n        const newValue = coerceBooleanProperty(value);\n        this._negative = newValue;\n        this._cdr.markForCheck();\n    }\n    get negative(): boolean {\n        return this._negative;\n    }\n\n    private _disabled = false;\n    /** Whether the switcher is in the disabled state */\n    @Input()\n    set disabled(value: BooleanInput) {\n        const newValue = coerceBooleanProperty(value);\n        this._disabled = newValue;\n        this._cdr.markForCheck();\n    }\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    /** An event is dispatched each time the switcher value is changed */\n    @Output('checkedChange') checkedChange = new EventEmitter<boolean>();\n\n    private onChangeCallback = (_: any) => {};\n    private onTouchedCallback = () => {};\n\n    constructor(\n        private _cdr: ChangeDetectorRef,\n        @Optional() @Self() public ngControl: NgControl | null,\n        private _errorStateMatcher: ErrorStateMatcher,\n        @Optional() private _parentForm: NgForm | null,\n        @Optional() private _parentFormGroup: FormGroupDirective | null,\n        private _focusMonitor: FocusMonitor,\n    ) {\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._nativeInput);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._nativeInput);\n    }\n\n    /** Allows to toggle between the states */\n    toggle() {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n            this.onChangeCallback(this.checked);\n            this.checkedChange.emit(this.checked);\n            if (this.onTouchedCallback) {\n                this.onTouchedCallback();\n            }\n        }\n    }\n\n    writeValue(value: any): void {\n        if (value === null) {\n            value = false;\n        }\n        if (value !== this.checked) {\n            this.checked = value;\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    /** @docs-private */\n    touch() {\n        this.onTouchedCallback();\n    }\n\n    /** @docs-private */\n    updateErrorState() {\n        const oldState = this.errorState;\n        const parent = this._parentFormGroup || this._parentForm;\n        const control = this.ngControl ? (this.ngControl.control as FormControl) : null;\n        const newState = this._errorStateMatcher.isErrorState(control, parent);\n\n        if (newState !== oldState) {\n            this.errorState = newState;\n        }\n    }\n\n    /** @docs-private */\n    get labelHasContent() {\n        return !!this._switcherLabelWrapper.nativeElement.innerHTML.trim();\n    }\n\n    /** @docs-private\n     * Callback for when the content of the label has changed.\n     */\n    labelContentChanged() {\n        this._cdr.detectChanges();\n    }\n}\n","<input\n    #input\n    type=\"checkbox\"\n    [id]=\"id\"\n    [attr.name]=\"name\"\n    [disabled]=\"disabled\"\n    [checked]=\"checked\"\n    (click)=\"toggle()\"\n    (blur)=\"touch()\"\n    role=\"switch\"\n    [attr.aria-checked]=\"checked\"\n    class=\"nx-switcher__input\"\n/>\n<label [attr.for]=\"id\" class=\"nx-switcher__label\" [class.has-label]=\"labelHasContent\">\n    <div class=\"nx-switcher__toggle\">\n        <div class=\"nx-switcher__dot\">\n            <nx-icon *ngIf=\"big\" name=\"check\"></nx-icon>\n        </div>\n    </div>\n    <div class=\"nx-switcher__label-text\" #switcherLabelWrapper (cdkObserveContent)=\"labelContentChanged()\">\n        <ng-content></ng-content>\n    </div>\n</label>\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxIconModule } from '@aposin/ng-aquila/icon';\n\nimport { NxSwitcherComponent } from './switcher.component';\n\n@NgModule({\n    declarations: [NxSwitcherComponent],\n    exports: [NxSwitcherComponent],\n    imports: [CommonModule, NxIconModule, ObserversModule],\n})\nexport class NxSwitcherModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}