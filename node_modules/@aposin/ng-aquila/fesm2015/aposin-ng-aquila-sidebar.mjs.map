{"version":3,"file":"aposin-ng-aquila-sidebar.mjs","sources":["../../../projects/ng-aquila/src/sidebar/sidebar.component.ts","../../../projects/ng-aquila/src/sidebar/sidebar.component.html","../../../projects/ng-aquila/src/sidebar/sidebar-footer.ts","../../../projects/ng-aquila/src/sidebar/sidebar-toggle.ts","../../../projects/ng-aquila/src/sidebar/sidebar-toggle.html","../../../projects/ng-aquila/src/sidebar/sidebar.module.ts","../../../projects/ng-aquila/src/sidebar/aposin-ng-aquila-sidebar.ts"],"sourcesContent":["import { FocusMonitor } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport { BooleanInput, coerceBooleanProperty, coerceNumberProperty, NumberInput } from '@angular/cdk/coercion';\nimport { LEFT_ARROW, RIGHT_ARROW, SPACE } from '@angular/cdk/keycodes';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\n\nexport const MAX_WIDTH = 400;\nexport const MIN_WIDTH = 56;\nexport const AUTO_COLLAPSE_WIDTH = 168;\nexport const RESIZE_STEP_SIZE = 20;\n\n@Component({\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['sidebar.scss'],\n    selector: 'nx-sidebar',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[class.is-resizing]': '_resizing',\n        '[class.is-closed]': '!open',\n        '[style.width.px]': `_sidebarElementWidth`,\n    },\n})\nexport class NxSidebarComponent implements AfterViewInit, OnDestroy, OnInit {\n    @ViewChild('resizeHandle') _resizeHandle!: ElementRef;\n\n    /** Emits the new width of the sidebar on resize or on close/open event.*/\n    @Output() widthChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** If set to `true` this will enable dynamic resizing of the sidebar. */\n    @Input()\n    set resizeable(value: BooleanInput) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._resizeable) {\n            this._resizeable = newValue;\n            this._cdr.markForCheck();\n        }\n    }\n    get resizeable() {\n        return this._resizeable;\n    }\n    private _resizeable = false;\n\n    /** Sets the minimal width (in pixel) of the sidebar. */\n    @Input()\n    set minWidth(value: NumberInput) {\n        this._minWidth = coerceNumberProperty(value) || MIN_WIDTH;\n    }\n    get minWidth(): number {\n        return this._minWidth;\n    }\n    private _minWidth: number = MIN_WIDTH;\n\n    /** Sets the maximal width (in pixel) of the sidebar. */\n    @Input()\n    set maxWidth(value: NumberInput) {\n        this._maxWidth = coerceNumberProperty(value) || MAX_WIDTH;\n    }\n    get maxWidth(): number {\n        return this._maxWidth;\n    }\n    private _maxWidth: number = MAX_WIDTH;\n\n    /** This sets the accessibility label for the resize handle of the sidebar. */\n    @Input()\n    set resizeHandleAriaLabel(value: string) {\n        if (value !== this._resizeHandleAriaLabel) {\n            this._resizeHandleAriaLabel = value;\n            this._cdr.markForCheck();\n        }\n    }\n    get resizeHandleAriaLabel() {\n        return this._resizeHandleAriaLabel;\n    }\n    private _resizeHandleAriaLabel = '';\n\n    /** This reflects the current open state of the sidebar.\n      It will be `true` if the sidebar is expanded and `false` if the sidebar is closed.\n  */\n    set open(value: BooleanInput) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._open) {\n            this._open = newValue;\n            this._cdr.markForCheck();\n        }\n    }\n    get open(): boolean {\n        return this._open;\n    }\n    private _open = true;\n\n    /** This sets the width of the sidebar in an expanded state. */\n    set width(value: number) {\n        const newValue = Math.max(value, this.minWidth);\n\n        if (newValue !== this._width) {\n            this._width = newValue;\n            this._cdr.markForCheck();\n        }\n    }\n    get width(): number {\n        return this._width;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    _width = 0;\n\n    _resizing = false;\n\n    _previousWidth = 0;\n\n    _isMobile = false;\n\n    _resizeWidth = 0;\n\n    private _resizeStartX!: number;\n\n    private _resizeStartWidth!: number;\n\n    private _unsubscribeListeners: (() => void)[] = [];\n\n    constructor(\n        private _cdr: ChangeDetectorRef,\n        private renderer: Renderer2,\n        private _element: ElementRef,\n        @Optional() private _dir: Directionality | null,\n        private _focusMonitor: FocusMonitor,\n    ) {\n        this._onResize = this._onResize.bind(this);\n        this._onResizeEnd = this._onResizeEnd.bind(this);\n    }\n\n    ngOnInit() {\n        this.width = this._element.nativeElement.clientWidth;\n    }\n\n    ngAfterViewInit() {\n        if (this.resizeable) {\n            this._focusMonitor.monitor(this._resizeHandle);\n        }\n    }\n\n    ngOnDestroy() {\n        this._removeDragEventListeners();\n        this._focusMonitor.stopMonitoring(this._resizeHandle);\n    }\n\n    /** This will expand the sidebar to its full width. */\n    expand(expandedWidth?: number) {\n        this.open = true;\n        if (expandedWidth) {\n            this.width = expandedWidth;\n        }\n    }\n\n    /** This will close the sidebar to its minimal width. */\n    close() {\n        this.open = false;\n    }\n\n    /** This will close or expand the sidebar depending if it is expanded or closed. */\n    toggle() {\n        if (this.open) {\n            this.close();\n        } else {\n            this.expand();\n        }\n        this._emitWidthChange(this._sidebarElementWidth);\n    }\n\n    get _sidebarElementWidth() {\n        if (this._resizing) {\n            return this._resizeWidth;\n        }\n\n        return this.open ? this.width : this.minWidth;\n    }\n\n    _onResizeStart(event: any) {\n        if (event.type.startsWith('touch')) {\n            event = event.changedTouches[0];\n        }\n\n        this._resizeStartX = event.screenX;\n        this._resizeStartWidth = this.open ? this.width : this.minWidth;\n        this._resizeWidth = this.width;\n\n        this._attachDragEventListeners();\n    }\n\n    _onResize(event: any) {\n        this._resizing = true;\n\n        if (event.type.startsWith('touch')) {\n            event = event.changedTouches[0];\n        }\n\n        let dx = event.screenX - this._resizeStartX;\n        if (this.dir === 'rtl') {\n            dx *= -1;\n        }\n\n        this._resizeWidth = Math.max(this.minWidth, this._resizeStartWidth + dx);\n        this.open = this._resizeWidth > this.minWidth;\n        this._cdr.markForCheck();\n    }\n\n    _onResizeEnd(event: MouseEvent) {\n        this._resizing = false;\n        this._removeDragEventListeners();\n\n        if (this._isMouseDrag(this._resizeStartX, event.screenX)) {\n            if (this._resizeWidth < AUTO_COLLAPSE_WIDTH) {\n                this.open = false;\n                this._emitWidthChange(this._sidebarElementWidth);\n            } else {\n                this.open = true;\n                this.width = Math.min(this._maxWidth, this._resizeWidth);\n                this._emitWidthChange(this.width);\n            }\n        }\n        this._resizeWidth = 0;\n    }\n\n    _onResizeHandleClick(event: MouseEvent) {\n        if (this._isMouseDrag(this._resizeStartX, event.screenX)) {\n            return;\n        }\n\n        this.toggle();\n    }\n\n    _onSidebarKeydown(event: KeyboardEvent) {\n        if (event.which === SPACE) {\n            event.preventDefault();\n            this.toggle();\n        } else if (event.which === LEFT_ARROW) {\n            this.width -= RESIZE_STEP_SIZE;\n\n            if (this.width <= AUTO_COLLAPSE_WIDTH) {\n                this.open = false;\n                this.width = AUTO_COLLAPSE_WIDTH + 1;\n            }\n            this._emitWidthChange(this.width);\n        } else if (event.which === RIGHT_ARROW) {\n            if (this.open) {\n                this.width = Math.min(this._maxWidth, this.width + RESIZE_STEP_SIZE);\n            } else {\n                this.open = true;\n                this.width = Math.max(this.width, AUTO_COLLAPSE_WIDTH);\n            }\n            this._emitWidthChange(this.width);\n        }\n    }\n\n    private _emitWidthChange(width: number) {\n        this.widthChange.emit(width);\n    }\n\n    private _isMouseDrag(startX: number, endX: number): boolean {\n        return Math.abs(endX - startX) > 5;\n    }\n\n    private _attachDragEventListeners() {\n        this._unsubscribeListeners.push(this.renderer.listen('document', 'mousemove', this._onResize));\n        this._unsubscribeListeners.push(this.renderer.listen('document', 'mouseup', this._onResizeEnd));\n        this._unsubscribeListeners.push(this.renderer.listen('document', 'touchmove', this._onResize));\n        this._unsubscribeListeners.push(this.renderer.listen('document', 'touchend', this._onResizeEnd));\n    }\n\n    private _removeDragEventListeners() {\n        this._unsubscribeListeners.forEach(unsubscribe => unsubscribe());\n    }\n}\n","<div class=\"nx-sidebar__box\" role=\"tabpanel\" [attr.aria-expanded]=\"open\">\n    <div class=\"nx-sidebar__content\">\n        <ng-content></ng-content>\n    </div>\n    <ng-content select=\"nx-sidebar-footer\"></ng-content>\n</div>\n\n<button\n    #resizeHandle\n    class=\"nx-sidebar__handle\"\n    *ngIf=\"resizeable\"\n    tabindex=\"0\"\n    type=\"button\"\n    (mousedown)=\"_onResizeStart($event)\"\n    (keydown)=\"_onSidebarKeydown($event)\"\n    (touchstart)=\"_onResizeStart($event)\"\n    (click)=\"_onResizeHandleClick($event)\"\n    [attr.aria-label]=\"resizeHandleAriaLabel\"\n>\n</button>\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'nx-sidebar-footer',\n    host: {\n        class: 'nx-sidebar__footer',\n    },\n    styleUrls: ['./sidebar-footer.scss'],\n    template: '<div class=\"nx-sidebar__footer-container\"><ng-content></ng-content></div>',\n})\nexport class NxSidebarFooterComponent {}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Host, Optional } from '@angular/core';\nimport { NxButtonBase } from '@aposin/ng-aquila/button';\n\nimport { NxSidebarComponent } from './sidebar.component';\n\n@Component({\n    selector: 'button[nxSidebarToggle]',\n    templateUrl: './sidebar-toggle.html',\n    styleUrls: ['../button/button.scss', './sidebar-toggle.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'nx-sidebar__toggle-button',\n        '(click)': 'toggle()',\n    },\n})\nexport class NxSidebarToggleComponent extends NxButtonBase {\n    constructor(\n        _cdr: ChangeDetectorRef,\n        _elementRef: ElementRef,\n        _focusMonitor: FocusMonitor,\n        @Optional() @Host() private _sidebar: NxSidebarComponent | null,\n    ) {\n        super(_cdr, _elementRef, _focusMonitor);\n        this.classNames = 'tertiary small-medium';\n    }\n\n    toggle() {\n        if (this._sidebar) {\n            this._sidebar.toggle();\n        }\n    }\n}\n","<div class=\"nx-sidebar__toggle-icons-container\">\n    <nx-icon name=\"chevron-left-small\" aria-hidden=\"true\"></nx-icon>\n    <nx-icon name=\"chevron-left-small\" aria-hidden=\"true\"></nx-icon>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxButtonModule } from '@aposin/ng-aquila/button';\nimport { NxIconModule } from '@aposin/ng-aquila/icon';\n\nimport { NxSidebarComponent } from './sidebar.component';\nimport { NxSidebarFooterComponent } from './sidebar-footer';\nimport { NxSidebarToggleComponent } from './sidebar-toggle';\n\n@NgModule({\n    imports: [CommonModule, NxIconModule, NxButtonModule],\n    declarations: [NxSidebarComponent, NxSidebarFooterComponent, NxSidebarToggleComponent],\n    exports: [NxSidebarComponent, NxSidebarFooterComponent, NxSidebarToggleComponent],\n})\nexport class NxSidebarModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2.NxSidebarComponent","i3"],"mappings":";;;;;;;;;;;;AAoBO,MAAM,SAAS,GAAG,IAAI;AACtB,MAAM,SAAS,GAAG,GAAG;AACrB,MAAM,mBAAmB,GAAG,IAAI;AAChC,MAAM,gBAAgB,GAAG,GAAG;MAatB,kBAAkB,CAAA;IAwG3B,WACY,CAAA,IAAuB,EACvB,QAAmB,EACnB,QAAoB,EACR,IAA2B,EACvC,aAA2B,EAAA;AAJ3B,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAmB;AACvB,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;AACnB,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAY;AACR,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAuB;AACvC,QAAA,IAAa,CAAA,aAAA,GAAb,aAAa,CAAc;;AAzG7B,QAAA,IAAA,CAAA,WAAW,GAAyB,IAAI,YAAY,EAAU,CAAC;AAejE,QAAA,IAAW,CAAA,WAAA,GAAG,KAAK,CAAC;AAUpB,QAAA,IAAS,CAAA,SAAA,GAAW,SAAS,CAAC;AAU9B,QAAA,IAAS,CAAA,SAAA,GAAW,SAAS,CAAC;AAa9B,QAAA,IAAsB,CAAA,sBAAA,GAAG,EAAE,CAAC;AAgB5B,QAAA,IAAK,CAAA,KAAA,GAAG,IAAI,CAAC;AAoBrB,QAAA,IAAM,CAAA,MAAA,GAAG,CAAC,CAAC;AAEX,QAAA,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;AAElB,QAAA,IAAc,CAAA,cAAA,GAAG,CAAC,CAAC;AAEnB,QAAA,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;AAElB,QAAA,IAAY,CAAA,YAAA,GAAG,CAAC,CAAC;AAMT,QAAA,IAAqB,CAAA,qBAAA,GAAmB,EAAE,CAAC;QAS/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACpD;;IA1GD,IACI,UAAU,CAAC,KAAmB,EAAA;AAC9B,QAAA,MAAM,QAAQ,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;AAE9C,QAAA,IAAI,QAAQ,KAAK,IAAI,CAAC,WAAW,EAAE;AAC/B,YAAA,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;AAC5B,YAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;AAC5B,SAAA;KACJ;AACD,IAAA,IAAI,UAAU,GAAA;QACV,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;IAID,IACI,QAAQ,CAAC,KAAkB,EAAA;QAC3B,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC;KAC7D;AACD,IAAA,IAAI,QAAQ,GAAA;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;IAID,IACI,QAAQ,CAAC,KAAkB,EAAA;QAC3B,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC;KAC7D;AACD,IAAA,IAAI,QAAQ,GAAA;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;IAID,IACI,qBAAqB,CAAC,KAAa,EAAA;AACnC,QAAA,IAAI,KAAK,KAAK,IAAI,CAAC,sBAAsB,EAAE;AACvC,YAAA,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;AACpC,YAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;AAC5B,SAAA;KACJ;AACD,IAAA,IAAI,qBAAqB,GAAA;QACrB,OAAO,IAAI,CAAC,sBAAsB,CAAC;KACtC;AAGD;;AAEA;IACA,IAAI,IAAI,CAAC,KAAmB,EAAA;AACxB,QAAA,MAAM,QAAQ,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;AAE9C,QAAA,IAAI,QAAQ,KAAK,IAAI,CAAC,KAAK,EAAE;AACzB,YAAA,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;AACtB,YAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;AAC5B,SAAA;KACJ;AACD,IAAA,IAAI,IAAI,GAAA;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;IAID,IAAI,KAAK,CAAC,KAAa,EAAA;AACnB,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAEhD,QAAA,IAAI,QAAQ,KAAK,IAAI,CAAC,MAAM,EAAE;AAC1B,YAAA,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;AACvB,YAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;AAC5B,SAAA;KACJ;AACD,IAAA,IAAI,KAAK,GAAA;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;;AAGD,IAAA,IAAI,GAAG,GAAA;AACH,QAAA,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;KACjE;IA6BD,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC;KACxD;IAED,eAAe,GAAA;QACX,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAClD,SAAA;KACJ;IAED,WAAW,GAAA;QACP,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACzD;;AAGD,IAAA,MAAM,CAAC,aAAsB,EAAA;AACzB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,QAAA,IAAI,aAAa,EAAE;AACf,YAAA,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC;AAC9B,SAAA;KACJ;;IAGD,KAAK,GAAA;AACD,QAAA,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;KACrB;;IAGD,MAAM,GAAA;QACF,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,KAAK,EAAE,CAAC;AAChB,SAAA;AAAM,aAAA;YACH,IAAI,CAAC,MAAM,EAAE,CAAC;AACjB,SAAA;AACD,QAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;KACpD;AAED,IAAA,IAAI,oBAAoB,GAAA;QACpB,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,OAAO,IAAI,CAAC,YAAY,CAAC;AAC5B,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;KACjD;AAED,IAAA,cAAc,CAAC,KAAU,EAAA;QACrB,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;AAChC,YAAA,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;AACnC,SAAA;AAED,QAAA,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC;AACnC,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;AAChE,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;QAE/B,IAAI,CAAC,yBAAyB,EAAE,CAAC;KACpC;AAED,IAAA,SAAS,CAAC,KAAU,EAAA;AAChB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;AAChC,YAAA,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;AACnC,SAAA;QAED,IAAI,EAAE,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;AAC5C,QAAA,IAAI,IAAI,CAAC,GAAG,KAAK,KAAK,EAAE;YACpB,EAAE,IAAI,CAAC,CAAC,CAAC;AACZ,SAAA;AAED,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC,CAAC;QACzE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC9C,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;KAC5B;AAED,IAAA,YAAY,CAAC,KAAiB,EAAA;AAC1B,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,yBAAyB,EAAE,CAAC;AAEjC,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,OAAO,CAAC,EAAE;AACtD,YAAA,IAAI,IAAI,CAAC,YAAY,GAAG,mBAAmB,EAAE;AACzC,gBAAA,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAClB,gBAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AACpD,aAAA;AAAM,iBAAA;AACH,gBAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,gBAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AACzD,gBAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrC,aAAA;AACJ,SAAA;AACD,QAAA,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;KACzB;AAED,IAAA,oBAAoB,CAAC,KAAiB,EAAA;AAClC,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,OAAO,CAAC,EAAE;YACtD,OAAO;AACV,SAAA;QAED,IAAI,CAAC,MAAM,EAAE,CAAC;KACjB;AAED,IAAA,iBAAiB,CAAC,KAAoB,EAAA;AAClC,QAAA,IAAI,KAAK,CAAC,KAAK,KAAK,KAAK,EAAE;YACvB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,MAAM,EAAE,CAAC;AACjB,SAAA;AAAM,aAAA,IAAI,KAAK,CAAC,KAAK,KAAK,UAAU,EAAE;AACnC,YAAA,IAAI,CAAC,KAAK,IAAI,gBAAgB,CAAC;AAE/B,YAAA,IAAI,IAAI,CAAC,KAAK,IAAI,mBAAmB,EAAE;AACnC,gBAAA,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAClB,gBAAA,IAAI,CAAC,KAAK,GAAG,mBAAmB,GAAG,CAAC,CAAC;AACxC,aAAA;AACD,YAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrC,SAAA;AAAM,aAAA,IAAI,KAAK,CAAC,KAAK,KAAK,WAAW,EAAE;YACpC,IAAI,IAAI,CAAC,IAAI,EAAE;AACX,gBAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,CAAC;AACxE,aAAA;AAAM,iBAAA;AACH,gBAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,gBAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,mBAAmB,CAAC,CAAC;AAC1D,aAAA;AACD,YAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrC,SAAA;KACJ;AAEO,IAAA,gBAAgB,CAAC,KAAa,EAAA;AAClC,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChC;IAEO,YAAY,CAAC,MAAc,EAAE,IAAY,EAAA;QAC7C,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;KACtC;IAEO,yBAAyB,GAAA;QAC7B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC/F,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;QAChG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC/F,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;KACpG;IAEO,yBAAyB,GAAA;AAC7B,QAAA,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,WAAW,IAAI,WAAW,EAAE,CAAC,CAAC;KACpE;;+GA/PQ,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,8cCpC/B,qmBAoBA,EAAA,MAAA,EAAA,CAAA,05EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDgBa,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAX9B,SAAS;AAGI,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,YAAY,EACL,eAAA,EAAA,uBAAuB,CAAC,MAAM,EACzC,IAAA,EAAA;AACF,wBAAA,qBAAqB,EAAE,WAAW;AAClC,wBAAA,mBAAmB,EAAE,OAAO;AAC5B,wBAAA,kBAAkB,EAAE,CAAsB,oBAAA,CAAA;qBAC7C,EAAA,QAAA,EAAA,qmBAAA,EAAA,MAAA,EAAA,CAAA,05EAAA,CAAA,EAAA,CAAA;;;8BA8GI,QAAQ;;yBA3Gc,aAAa,EAAA,CAAA;sBAAvC,SAAS;uBAAC,cAAc,CAAA;gBAGf,WAAW,EAAA,CAAA;sBAApB,MAAM;gBAIH,UAAU,EAAA,CAAA;sBADb,KAAK;gBAgBF,QAAQ,EAAA,CAAA;sBADX,KAAK;gBAWF,QAAQ,EAAA,CAAA;sBADX,KAAK;gBAWF,qBAAqB,EAAA,CAAA;sBADxB,KAAK;;;MEpEG,wBAAwB,CAAA;;qHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,yGAFvB,2EAA2E,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,2NAAA,CAAA,EAAA,CAAA,CAAA;2FAE5E,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBARpC,SAAS;YACI,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,mBAAmB,EACvB,IAAA,EAAA;AACF,wBAAA,KAAK,EAAE,oBAAoB;qBAC9B,EAAA,QAAA,EAES,2EAA2E,EAAA,MAAA,EAAA,CAAA,2NAAA,CAAA,EAAA,CAAA;;;ACQnF,MAAO,wBAAyB,SAAQ,YAAY,CAAA;AACtD,IAAA,WAAA,CACI,IAAuB,EACvB,WAAuB,EACvB,aAA2B,EACC,QAAmC,EAAA;AAE/D,QAAA,KAAK,CAAC,IAAI,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC;AAFZ,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAA2B;AAG/D,QAAA,IAAI,CAAC,UAAU,GAAG,uBAAuB,CAAC;KAC7C;IAED,MAAM,GAAA;QACF,IAAI,IAAI,CAAC,QAAQ,EAAE;AACf,YAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;AAC1B,SAAA;KACJ;;qHAfQ,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,EAAA,CAAA,YAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,kBAAA,EAAA,IAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,iLChBrC,kNAIA,EAAA,MAAA,EAAA,CAAA,qyfAAA,EAAA,ulBAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,SAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDYa,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAVpC,SAAS;AACI,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,yBAAyB,EAGlB,eAAA,EAAA,uBAAuB,CAAC,MAAM,EACzC,IAAA,EAAA;AACF,wBAAA,KAAK,EAAE,2BAA2B;AAClC,wBAAA,SAAS,EAAE,UAAU;AACxB,qBAAA,EAAA,QAAA,EAAA,kNAAA,EAAA,MAAA,EAAA,CAAA,qyfAAA,EAAA,ulBAAA,CAAA,EAAA,CAAA;;;8BAOI,QAAQ;;8BAAI,IAAI;;;;MEPZ,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,iBAHT,kBAAkB,EAAE,wBAAwB,EAAE,wBAAwB,CAD3E,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,YAAY,EAAE,cAAc,CAAA,EAAA,OAAA,EAAA,CAE1C,kBAAkB,EAAE,wBAAwB,EAAE,wBAAwB,CAAA,EAAA,CAAA,CAAA;AAEvE,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,YAJf,CAAC,YAAY,EAAE,YAAY,EAAE,cAAc,CAAC,CAAA,EAAA,CAAA,CAAA;2FAI5C,eAAe,EAAA,UAAA,EAAA,CAAA;kBAL3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,cAAc,CAAC;AACrD,oBAAA,YAAY,EAAE,CAAC,kBAAkB,EAAE,wBAAwB,EAAE,wBAAwB,CAAC;AACtF,oBAAA,OAAO,EAAE,CAAC,kBAAkB,EAAE,wBAAwB,EAAE,wBAAwB,CAAC;iBACpF,CAAA;;;ACbD;;AAEG;;;;"}