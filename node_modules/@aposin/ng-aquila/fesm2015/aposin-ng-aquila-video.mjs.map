{"version":3,"file":"aposin-ng-aquila-video.mjs","sources":["../../../projects/ng-aquila/src/video/video.component.ts","../../../projects/ng-aquila/src/video/video.component.html","../../../projects/ng-aquila/src/video/video.module.ts","../../../projects/ng-aquila/src/video/aposin-ng-aquila-video.ts"],"sourcesContent":["import { FocusMonitor } from '@angular/cdk/a11y';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, ViewChild } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n    selector: 'nx-video',\n    templateUrl: 'video.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['./video.component.scss'],\n})\n\n// note that this currently only supports youtube videos\nexport class NxVideoComponent implements AfterViewInit, OnDestroy {\n    private _videoId: string | null = null;\n\n    @ViewChild('playButton') _playButton!: ElementRef;\n\n    /** Sets the id of the YouTube video. */\n    @Input('nxVideoId')\n    set videoId(value: string) {\n        if (this._videoId !== value) {\n            this._videoId = value;\n            this._cdr.markForCheck();\n        }\n    }\n    get videoId(): string {\n        return this._videoId as string;\n    }\n\n    private _altText = '';\n\n    /** Sets the value of the alt attribute for the preview image. */\n    @Input('nxAltText')\n    set altText(value: string) {\n        if (this._altText !== value) {\n            this._altText = value;\n            this._cdr.markForCheck();\n        }\n    }\n    get altText(): string {\n        return this._altText;\n    }\n\n    private _playButtonAriaLabel = '';\n\n    /** Sets the value of the aria-label attribute on the play button (Default: Play Video). */\n    @Input('nxPlayButtonAriaLabel')\n    set nxPlayButtonAriaLabel(value: string) {\n        if (this._playButtonAriaLabel !== value) {\n            this._playButtonAriaLabel = value;\n            this._cdr.markForCheck();\n        }\n    }\n    get nxPlayButtonAriaLabel(): string {\n        return this._playButtonAriaLabel;\n    }\n\n    private _previewImageSrc: string | null = null;\n\n    /** Sets the preview image. If this is not provided, an image from YouTube will be used as default. */\n    @Input('nxPreviewImageSrc')\n    set previewImageSrc(value: string) {\n        if (this._previewImageSrc !== value) {\n            this._previewImageSrc = value;\n            this._cdr.markForCheck();\n        }\n    }\n    get previewImageSrc(): string {\n        return this._previewImageSrc as string;\n    }\n\n    private _showPlayerControls = true;\n\n    /** Sets player controls. If set to false, player controls are not available. */\n    @Input('nxShowPlayerControls')\n    set showPlayerControls(value: BooleanInput) {\n        this._showPlayerControls = coerceBooleanProperty(value);\n        this._cdr.markForCheck();\n    }\n    get showPlayerControls(): boolean {\n        return this._showPlayerControls;\n    }\n\n    private _allowFullScreen = true;\n\n    /** Sets fullscreen option. If set to false, fullscreen option is not available. */\n    @Input('nxAllowFullScreen')\n    set allowFullScreen(value: BooleanInput) {\n        this._allowFullScreen = coerceBooleanProperty(value);\n        this._cdr.markForCheck();\n    }\n    get allowFullScreen(): boolean {\n        return this._allowFullScreen;\n    }\n\n    private _interfaceLanguage: string | null = null;\n\n    /** Sets interface language. Can be used to override the interface language determined by YouTube. */\n    @Input('nxInterfaceLanguage')\n    set interfaceLanguage(value: string) {\n        if (this._interfaceLanguage !== value) {\n            this._interfaceLanguage = value;\n            this._cdr.markForCheck();\n        }\n    }\n    get interfaceLanguage(): string {\n        return this._interfaceLanguage as string;\n    }\n\n    /** @docs-private */\n    showPlayer = false;\n\n    constructor(private sanitizer: DomSanitizer, private _cdr: ChangeDetectorRef, private _focusMonitor: FocusMonitor) {}\n\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._playButton);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._playButton);\n    }\n\n    /** @docs-private */\n    select(): void {\n        this.showPlayer = true;\n        this._cdr.markForCheck();\n    }\n\n    /** Returns the safe resource URL of the YouTube video, given video id.  */\n    get videoSrc(): SafeResourceUrl {\n        let url = `https://www.youtube.com/embed/${this.videoId}?rel=0&showinfo=0&autoplay=1`;\n        if (!this.showPlayerControls) {\n            url += '&controls=0';\n        }\n        if (!this.allowFullScreen) {\n            url += '&fs=0';\n        }\n        if (this.interfaceLanguage) {\n            url += `&hl=${this.interfaceLanguage}`;\n        }\n        return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n    }\n\n    /** Returns the preview image source URL, given video id. */\n    get imgSrc() {\n        return this.previewImageSrc ? this.previewImageSrc : `https://img.youtube.com/vi/${this.videoId}/sddefault.jpg`;\n    }\n\n    /** Returns the labels for the control buttons. */\n    get playButtonAriaLabel() {\n        const defaultLabel = this.altText ? `${this.altText} - Play Video` : 'Play Video';\n        return this.nxPlayButtonAriaLabel ? this.nxPlayButtonAriaLabel : defaultLabel;\n    }\n}\n","<div class=\"nx-video\">\n    <div class=\"nx-video__iframe\">\n        <div *ngIf=\"!showPlayer\">\n            <button #playButton class=\"nx-video__play-button\" (click)=\"select()\" [attr.aria-label]=\"playButtonAriaLabel\" (keydown.enter)=\"select()\">\n                <nx-icon class=\"nx-video__high-contrast-icon\" name=\"play\" size=\"s\"></nx-icon>\n            </button>\n            <img [src]=\"imgSrc\" class=\"nx-video__thumbnail\" [alt]=\"altText\" (click)=\"select()\" (keydown.enter)=\"select()\" />\n        </div>\n        <div *ngIf=\"videoId && showPlayer\">\n            <iframe title=\"video\" class=\"nx-video__iframe\" [attr.allowfullscreen]=\"allowFullScreen\" [src]=\"videoSrc\"></iframe>\n        </div>\n    </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxIconModule } from '@aposin/ng-aquila/icon';\n\nimport { NxVideoComponent } from './video.component';\n\n@NgModule({\n    declarations: [NxVideoComponent],\n    exports: [NxVideoComponent],\n    imports: [CommonModule, NxIconModule],\n})\nexport class NxVideoModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}