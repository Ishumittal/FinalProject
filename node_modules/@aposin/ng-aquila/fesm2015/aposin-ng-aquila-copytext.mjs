import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';

const DEFAULT_TYPE = 'normal';
class NxCopytextComponent {
    constructor() {
        this._classNames = '';
        /** @docs-private */
        this.type = DEFAULT_TYPE;
        /** @docs-private */
        this.negative = false;
    }
    /**
     * Sets the type and whether the negative set of styling should be used.
     *
     * You can combine the values of type NxCopytextType and 'negative'.
     *
     * Default type: 'normal'
     */
    set classNames(value) {
        var _a, _b, _c;
        if (this._classNames === value) {
            return;
        }
        this._classNames = value;
        // TODO kick null safe-guards after setter value or any calling input values are properly coerced as string
        const [type = null] = (_b = (_a = this._classNames) === null || _a === void 0 ? void 0 : _a.match(/small|medium|normal|large/)) !== null && _b !== void 0 ? _b : [DEFAULT_TYPE];
        this.type = type;
        this.negative = !!((_c = this._classNames) === null || _c === void 0 ? void 0 : _c.match(/negative/));
    }
    get classNames() {
        return this._classNames;
    }
}
NxCopytextComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxCopytextComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
NxCopytextComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxCopytextComponent, selector: "[nxCopytext]", inputs: { classNames: ["nxCopytext", "classNames"] }, host: { properties: { "class.nx-copy": "true", "class.nx-copy--small": "type === \"small\"", "class.nx-copy--medium": "type === \"medium\"", "class.nx-copy--normal": "type === \"normal\"", "class.nx-copy--large": "type === \"large\"", "class.nx-copy--negative": "negative" } }, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, styles: [":host{margin:0;font-size:var(--paragraph-03-font-size);line-height:var(--paragraph-03-line-height);font-weight:var(--paragraph-03-font-weight);letter-spacing:var(--paragraph-03-letter-spacing)}:host.nx-copy.nx-copy{font-weight:400}:host(.nx-copy--negative){color:var(--negative)}:host(.nx-copy--small){font-size:var(--paragraph-05-font-size);line-height:var(--paragraph-05-line-height);font-weight:var(--paragraph-05-font-weight);letter-spacing:var(--paragraph-05-letter-spacing)}:host(.nx-copy--medium){font-size:var(--paragraph-04-font-size);line-height:var(--paragraph-04-line-height);font-weight:var(--paragraph-04-font-weight);letter-spacing:var(--paragraph-04-letter-spacing)}:host(.nx-copy--large){font-size:var(--paragraph-02-font-size);line-height:var(--paragraph-02-line-height);font-weight:var(--paragraph-02-font-weight);letter-spacing:var(--paragraph-02-letter-spacing)}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxCopytextComponent, decorators: [{
            type: Component,
            args: [{ selector: '[nxCopytext]', template: `<ng-content></ng-content>`, changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        '[class.nx-copy]': 'true',
                        '[class.nx-copy--small]': 'type === "small"',
                        '[class.nx-copy--medium]': 'type === "medium"',
                        '[class.nx-copy--normal]': 'type === "normal"',
                        '[class.nx-copy--large]': 'type === "large"',
                        '[class.nx-copy--negative]': 'negative',
                    }, styles: [":host{margin:0;font-size:var(--paragraph-03-font-size);line-height:var(--paragraph-03-line-height);font-weight:var(--paragraph-03-font-weight);letter-spacing:var(--paragraph-03-letter-spacing)}:host.nx-copy.nx-copy{font-weight:400}:host(.nx-copy--negative){color:var(--negative)}:host(.nx-copy--small){font-size:var(--paragraph-05-font-size);line-height:var(--paragraph-05-line-height);font-weight:var(--paragraph-05-font-weight);letter-spacing:var(--paragraph-05-letter-spacing)}:host(.nx-copy--medium){font-size:var(--paragraph-04-font-size);line-height:var(--paragraph-04-line-height);font-weight:var(--paragraph-04-font-weight);letter-spacing:var(--paragraph-04-letter-spacing)}:host(.nx-copy--large){font-size:var(--paragraph-02-font-size);line-height:var(--paragraph-02-line-height);font-weight:var(--paragraph-02-font-weight);letter-spacing:var(--paragraph-02-letter-spacing)}\n"] }]
        }], propDecorators: { classNames: [{
                type: Input,
                args: ['nxCopytext']
            }] } });

class NxCopytextModule {
}
NxCopytextModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxCopytextModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NxCopytextModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxCopytextModule, declarations: [NxCopytextComponent], exports: [NxCopytextComponent] });
NxCopytextModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxCopytextModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxCopytextModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NxCopytextComponent],
                    exports: [NxCopytextComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { NxCopytextComponent, NxCopytextModule };
//# sourceMappingURL=aposin-ng-aquila-copytext.mjs.map
