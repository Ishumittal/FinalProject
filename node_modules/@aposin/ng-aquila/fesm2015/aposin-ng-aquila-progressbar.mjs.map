{"version":3,"file":"aposin-ng-aquila-progressbar.mjs","sources":["../../../projects/ng-aquila/src/progressbar/progressbar.component.ts","../../../projects/ng-aquila/src/progressbar/progressbar.component.html","../../../projects/ng-aquila/src/progressbar/progressbar.module.ts","../../../projects/ng-aquila/src/progressbar/aposin-ng-aquila-progressbar.ts"],"sourcesContent":["import { NumberInput } from '@angular/cdk/coercion';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { clamp } from '@aposin/ng-aquila/utils';\n\nlet progressbarId = 0;\n\n@Component({\n    selector: 'nx-progressbar',\n    templateUrl: './progressbar.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['./progressbar.component.scss'],\n    host: {\n        '[attr.aria-valuenow]': 'value',\n    },\n})\nexport class NxProgressbarComponent {\n    /** @docs-private */\n    progressbarId = `nx-progress-bar-${progressbarId++}`;\n\n    /** Sets the value of the progress bar. Defaults to zero. Mirrored to aria-value now. */\n    @Input()\n    get value(): number {\n        return this._value;\n    }\n    set value(value: NumberInput) {\n        this._value = clamp((value as any) || 0); // TODO properly coerce input value\n    }\n    private _value = 0;\n\n    _primaryTransform() {\n        const scale = this.value;\n        return { transform: `scaleX(${scale})` };\n    }\n}\n","<div class=\"nx-progress__track\">\n    <div class=\"nx-progress__indicator\" [ngStyle]=\"_primaryTransform()\"></div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxProgressbarComponent } from './progressbar.component';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [NxProgressbarComponent],\n    declarations: [NxProgressbarComponent],\n    providers: [],\n})\nexport class NxProgressbarModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;AAIA,IAAI,aAAa,GAAG,CAAC,CAAC;MAWT,sBAAsB,CAAA;AATnC,IAAA,WAAA,GAAA;;AAWI,QAAA,IAAA,CAAA,aAAa,GAAG,mBAAmB,aAAa,EAAE,EAAE,CAAC;AAU7C,QAAA,IAAM,CAAA,MAAA,GAAG,CAAC,CAAC;KAMtB;;AAbG,IAAA,IACI,KAAK,GAAA;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;IACD,IAAI,KAAK,CAAC,KAAkB,EAAA;QACxB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAE,KAAa,IAAI,CAAC,CAAC,CAAC;KAC5C;IAGD,iBAAiB,GAAA;AACb,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACzB,QAAA,OAAO,EAAE,SAAS,EAAE,UAAU,KAAK,CAAA,CAAA,CAAG,EAAE,CAAC;KAC5C;;mHAjBQ,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,2ICfnC,kIAGA,EAAA,MAAA,EAAA,CAAA,+4BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDYa,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBATlC,SAAS;AACI,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,gBAAgB,EAET,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAEzC,IAAA,EAAA;AACF,wBAAA,sBAAsB,EAAE,OAAO;qBAClC,EAAA,QAAA,EAAA,kIAAA,EAAA,MAAA,EAAA,CAAA,+4BAAA,CAAA,EAAA,CAAA;8BAQG,KAAK,EAAA,CAAA;sBADR,KAAK;;;METG,mBAAmB,CAAA;;gHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,EAHb,YAAA,EAAA,CAAA,sBAAsB,CAF3B,EAAA,OAAA,EAAA,CAAA,YAAY,aACZ,sBAAsB,CAAA,EAAA,CAAA,CAAA;AAIvB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,EAFjB,SAAA,EAAA,EAAE,EAHJ,OAAA,EAAA,CAAA,CAAC,YAAY,CAAC,CAAA,EAAA,CAAA,CAAA;2FAKd,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAN/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,OAAO,EAAE,CAAC,sBAAsB,CAAC;oBACjC,YAAY,EAAE,CAAC,sBAAsB,CAAC;AACtC,oBAAA,SAAS,EAAE,EAAE;iBAChB,CAAA;;;ACVD;;AAEG;;;;"}