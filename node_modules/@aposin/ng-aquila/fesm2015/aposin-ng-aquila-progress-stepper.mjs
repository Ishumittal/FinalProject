import * as i1$2 from '@angular/cdk/stepper';
import { CdkStep, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepHeader, CdkStepperModule } from '@angular/cdk/stepper';
import * as i0 from '@angular/core';
import { forwardRef, Component, ChangeDetectionStrategy, Inject, SkipSelf, QueryList, Directive, Optional, ContentChildren, Input, ViewChildren, NgModule } from '@angular/core';
import * as i1 from '@aposin/ng-aquila/utils';
import { ErrorStateMatcher, clamp } from '@aposin/ng-aquila/utils';
import { Subject } from 'rxjs';
import { takeWhile, takeUntil } from 'rxjs/operators';
import * as i1$1 from '@angular/cdk/bidi';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import * as i1$3 from '@angular/cdk/a11y';
import * as i2 from '@aposin/ng-aquila/icon';
import { NxIconModule } from '@aposin/ng-aquila/icon';
import * as i3 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i2$1 from '@aposin/ng-aquila/progressbar';
import { NxProgressbarModule } from '@aposin/ng-aquila/progressbar';
import { NxLabelModule } from '@aposin/ng-aquila/base';

// We need to reference steps in stepper and stepper in steps. To prevent circular depenedency errors
// Provide both components in a single file. Otherwise we would have to introduce interface/abstract classes
// shared between both implementations.
class NxStepComponent extends CdkStep {
    constructor(stepper, _errorStateMatcher) {
        super(stepper);
        this.stepper = stepper;
        this._errorStateMatcher = _errorStateMatcher;
        this._destroyed = new Subject();
        this.interacted = false;
    }
    /** Custom error state matcher that checks for validity of the step form. */
    isErrorState(control, form) {
        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);
        // Checks for the validity of a step form that is not submitted or touched,
        // e.g when the user directly clicks the "next" button or directly on the step
        const customErrorState = !!((control === null || control === void 0 ? void 0 : control.invalid) && this.interacted);
        return originalErrorState || customErrorState;
    }
    ngOnChanges() {
        // We can't use the `changes: SimpleChanges` as a parameter here
        // because CdkStep only defines the ngOnChanges() method.
        super.ngOnChanges();
        if (this.stepControl !== this._stepControl) {
            this._stepControl = this.stepControl;
            // If a step control changes its state, the stepper needs to update.
            if (this._stepControl) {
                this._stepControl.statusChanges
                    .pipe(takeWhile(() => this._stepControl === this.stepControl), takeUntil(this._destroyed))
                    .subscribe(() => {
                    this.stepper._stateChanged();
                });
            }
        }
        if (this.interacted !== this._interacted) {
            this._interacted = this.interacted;
            if (this.stepper) {
                this.stepper._stateChanged();
            }
        }
    }
    ngOnDestroy() {
        this._destroyed.next();
        this._destroyed.complete();
    }
}
NxStepComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxStepComponent, deps: [{ token: forwardRef(() => NxProgressStepperDirective) }, { token: i1.ErrorStateMatcher, skipSelf: true }], target: i0.ɵɵFactoryTarget.Component });
NxStepComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxStepComponent, selector: "nx-step", providers: [{ provide: ErrorStateMatcher, useExisting: NxStepComponent }], exportAs: ["nxStep"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<ng-template><ng-content></ng-content></ng-template>\n", changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxStepComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-step', exportAs: 'nxStep', providers: [{ provide: ErrorStateMatcher, useExisting: NxStepComponent }], changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-template><ng-content></ng-content></ng-template>\n" }]
        }], ctorParameters: function () {
        return [{ type: NxProgressStepperDirective, decorators: [{
                        type: Inject,
                        args: [forwardRef(() => NxProgressStepperDirective)]
                    }] }, { type: i1.ErrorStateMatcher, decorators: [{
                        type: SkipSelf
                    }] }];
    } });
/** @docs-private */
class NxProgressStepperDirective extends CdkStepper {
    constructor(_cdr, _dir, _elementRef) {
        super(_dir, _cdr, _elementRef, null);
        this._cdr = _cdr;
        /** Steps that belong to the current stepper, excluding ones from nested steppers. */
        this.steps = new QueryList();
        this._stepHeader = new QueryList();
    }
    ngAfterContentInit() {
        super.ngAfterContentInit();
        // Mark the component for change detection whenever the content children query changes
        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {
            this._stateChanged();
        });
        // If a step control changes its state, the stepper needs to update.
        this.steps
            .filter(s => !!s.stepControl)
            .forEach(step => {
            step.stepControl.statusChanges.pipe(takeUntil(step._destroyed)).subscribe(() => {
                this._stateChanged();
            });
        });
        // we need to defer change detection that the nxStepperNext and NxStepperPrevious buttons
        // can run change detection again, because they are initialized before the stepper content
        Promise.resolve().then(() => {
            this._cdr.detectChanges();
        });
    }
    /** @docs-private */
    get hasPrevious() {
        return this.selectedIndex - 1 >= 0;
    }
    /** @docs-private */
    get hasNext() {
        return this.selectedIndex + 1 < this.count;
    }
    /** @docs-private */
    get count() {
        return this.steps ? this.steps.length : 0;
    }
    /** @docs-private */
    get currentStep() {
        if (this.count === 0 || this.selectedIndex === -1 || !this.steps) {
            return null;
        }
        const steps = this.steps.toArray();
        return steps[this.selectedIndex];
    }
    /** @docs-private */
    get nextStep() {
        if (this.selectedIndex + 1 >= this.steps.length) {
            return null;
        }
        return this.steps.toArray()[this.selectedIndex + 1];
    }
    /** @docs-private */
    get currentLabel() {
        const step = this.currentStep;
        if (!step) {
            return '';
        }
        const label = step.stepLabel || step.label;
        return this.currentStepLabel && label ? `${this.currentStepLabel} ${this.selectedIndex + 1}/${this.count}: ${label}` : '';
    }
}
NxProgressStepperDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxProgressStepperDirective, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$1.Directionality, optional: true }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
NxProgressStepperDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.1", type: NxProgressStepperDirective, selector: "[nxProgressStepper]", inputs: { currentStepLabel: "currentStepLabel" }, queries: [{ propertyName: "_steps", predicate: NxStepComponent, descendants: true }], exportAs: ["nxProgressStepper"], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxProgressStepperDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[nxProgressStepper]',
                    exportAs: 'nxProgressStepper',
                }]
        }], ctorParameters: function () {
        return [{ type: i0.ChangeDetectorRef }, { type: i1$1.Directionality, decorators: [{
                        type: Optional
                    }] }, { type: i0.ElementRef }];
    }, propDecorators: { _steps: [{
                type: ContentChildren,
                args: [NxStepComponent, { descendants: true }]
            }], currentStepLabel: [{
                type: Input
            }] } });

class NxStepperNextDirective extends CdkStepperNext {
    constructor(_stepper, _cdr) {
        super(_stepper);
        this._cdr = _cdr;
        /** @docs-private */
        this.disabled = false;
    }
    /**
     * Implemented to prevent changed after checked error after stepper init.
     * When the stepper initializes the directive is checked first before
     * the stepper can check its content thus it doesn't know about it's children yet
     * so _stepper.hasNext returns false and disables the buttons. In the same CD cycle
     * after the stepper has checked its contents the button needs to be enabled resulting
     * in the error.
     */
    ngDoCheck() {
        const stepper = this._stepper;
        if (this.disabled !== !stepper.hasNext) {
            this.disabled = !stepper.hasNext;
            this._cdr.markForCheck();
        }
    }
}
NxStepperNextDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxStepperNextDirective, deps: [{ token: i1$2.CdkStepper }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });
NxStepperNextDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.1", type: NxStepperNextDirective, selector: "button[nxStepperNext]", inputs: { type: "type" }, host: { properties: { "type": "type", "disabled": "disabled" } }, providers: [{ provide: CdkStepper, useExisting: NxProgressStepperDirective }], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxStepperNextDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'button[nxStepperNext]',
                    host: {
                        '[type]': 'type',
                        '[disabled]': 'disabled',
                    },
                    inputs: ['type'],
                    providers: [{ provide: CdkStepper, useExisting: NxProgressStepperDirective }],
                }]
        }], ctorParameters: function () { return [{ type: i1$2.CdkStepper }, { type: i0.ChangeDetectorRef }]; } });
class NxStepperPreviousDirective extends CdkStepperPrevious {
    constructor(_stepper) {
        super(_stepper);
    }
    get stepper() {
        return this._stepper;
    }
}
NxStepperPreviousDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxStepperPreviousDirective, deps: [{ token: i1$2.CdkStepper }], target: i0.ɵɵFactoryTarget.Directive });
NxStepperPreviousDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.1", type: NxStepperPreviousDirective, selector: "button[nxStepperPrevious]", inputs: { type: "type" }, host: { properties: { "type": "type", "disabled": "!stepper.hasPrevious" } }, providers: [{ provide: CdkStepper, useExisting: NxProgressStepperDirective }], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxStepperPreviousDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'button[nxStepperPrevious]',
                    host: {
                        '[type]': 'type',
                        '[disabled]': '!stepper.hasPrevious',
                    },
                    inputs: ['type'],
                    providers: [{ provide: CdkStepper, useExisting: NxProgressStepperDirective }],
                }]
        }], ctorParameters: function () { return [{ type: i1$2.CdkStepper }]; } });

class NxMultiStepperGroupComponent {
    constructor(_cdr) {
        this._cdr = _cdr;
    }
    /** Sets the label of a group that is shown to the user. */
    set label(value) {
        this._label = value;
        this._cdr.markForCheck();
    }
    get label() {
        return this._label;
    }
}
NxMultiStepperGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMultiStepperGroupComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
NxMultiStepperGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxMultiStepperGroupComponent, selector: "nx-step-group", inputs: { label: "label" }, queries: [{ propertyName: "steps", predicate: NxStepComponent, descendants: true }], ngImport: i0, template: "<ng-template><ng-content></ng-content></ng-template>\n", changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMultiStepperGroupComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-step-group', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-template><ng-content></ng-content></ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { steps: [{
                type: ContentChildren,
                args: [NxStepComponent, { descendants: true }]
            }], label: [{
                type: Input
            }] } });

/** @docs-private */
class NxMultiStepItemComponent extends CdkStepHeader {
    constructor(_cdr, _elementRef, _focusMonitor) {
        super(_elementRef);
        this._cdr = _cdr;
        this._elementRef = _elementRef;
        this._focusMonitor = _focusMonitor;
        this._direction = 'horizontal';
        this._focusMonitor.monitor(this._elementRef);
    }
    /** The direction of the step */
    get direction() {
        return this._direction;
    }
    set direction(value) {
        this._direction = value;
        this._cdr.markForCheck();
    }
    /** Sets the selected step. */
    get selected() {
        return this._selected;
    }
    set selected(value) {
        this._selected = coerceBooleanProperty(value);
        this._cdr.markForCheck();
    }
    /** Sets the active step. */
    get active() {
        return this._active;
    }
    set active(value) {
        this._active = coerceBooleanProperty(value);
        this._cdr.markForCheck();
    }
    get disabled() {
        return this._disabled;
    }
    set disabled(value) {
        this._disabled = coerceBooleanProperty(value);
        this._cdr.markForCheck();
    }
    /** Sets the last step. */
    get last() {
        return this._last;
    }
    set last(value) {
        this._last = coerceBooleanProperty(value);
        this._cdr.markForCheck();
    }
    /** Sets the step completed. */
    get completed() {
        return this._completed;
    }
    set completed(value) {
        this._completed = coerceBooleanProperty(value);
        this._cdr.markForCheck();
    }
    ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef);
    }
}
NxMultiStepItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMultiStepItemComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1$3.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });
NxMultiStepItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxMultiStepItemComponent, selector: "nx-multi-step-item", inputs: { direction: "direction", label: "label", selected: "selected", active: "active", disabled: "disabled", last: "last", completed: "completed" }, host: { attributes: { "role": "tab" }, properties: { "class.nx-multi-step-item--vertical": "direction === \"vertical\"", "class.is-selected": "selected", "class.is-completed": "completed", "class.is-active": "active", "class.is-disabled": "disabled", "class.is-last": "last", "attr.aria-disabled": "disabled ? \"true\" : null", "attr.aria-selected": "selected", "attr.aria-label": "label" } }, usesInheritance: true, ngImport: i0, template: "<div class=\"label-box\">\n    <div class=\"dot\">\n        <div *ngIf=\"!completed && selected\" class=\"small-dot\"></div>\n        <nx-icon *ngIf=\"completed && !disabled\" name=\"check\"></nx-icon>\n    </div>\n    <div *ngIf=\"direction === 'vertical'\" class=\"label\" [attr.label]=\"label\">{{ label }}</div>\n</div>\n\n<div *ngIf=\"!last\" class=\"line\"></div>\n", styles: [":host{flex:1 1 100%;display:flex;align-items:center;justify-content:center;position:relative;padding-bottom:8px;cursor:pointer;max-width:100%}:host:focus{outline:none}:host.cdk-keyboard-focused .dot{box-shadow:var(--focus-box-shadow)}@media screen and (-ms-high-contrast: active),(forced-colors: active){:host.cdk-keyboard-focused .dot{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}@media screen and (-ms-high-contrast: active){:host .dot{border-color:buttonText}:host .small-dot{background-color:buttonText}}:host.is-disabled{cursor:not-allowed}:host.is-disabled .dot{border-color:var(--multi-stepper-dot-disabled-color)}@media screen and (-ms-high-contrast: active){:host.is-disabled .label{color:GrayText}:host.is-disabled .dot{border-color:GrayText}}:host.is-completed:not(.is-disabled) .dot{background-color:var(--multi-stepper-dot-touched-color)}:host.nx-multi-step-item--vertical{flex:0 0 auto;flex-direction:column;align-items:flex-start;padding:0}:host.nx-multi-step-item--vertical .label-box{display:flex;align-items:center}:host.nx-multi-step-item--vertical .label{position:static;transform:none;margin-left:16px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;text-align:left;min-width:0;font-size:var(--multi-stepper-step-font-size);line-height:var(--multi-stepper-step-line-height);font-weight:var(--multi-stepper-step-font-weight);letter-spacing:var(--multi-stepper-step-letter-spacing)}[dir=rtl] :host.nx-multi-step-item--vertical .label{margin-right:16px;margin-left:0;margin-left:initial}:host.nx-multi-step-item--vertical .label:before{content:attr(label);height:0;overflow:hidden;display:block}@media screen and (-ms-high-contrast: active){:host.nx-multi-step-item--vertical .label{-ms-high-contrast-adjust:none;background-color:buttonFace;border-radius:4px;box-shadow:0 0 0 2px buttonFace;color:buttonText}}:host.nx-multi-step-item--vertical.is-disabled .label{color:var(--multi-stepper-step-disabled-color)}@media screen and (-ms-high-contrast: active){:host.nx-multi-step-item--vertical.is-disabled .label{color:GrayText}}:host.nx-multi-step-item--vertical.is-selected .label{font-weight:700}@media screen and (-ms-high-contrast: active){:host.nx-multi-step-item--vertical.is-selected .label{background-color:highlight;border-radius:4px;box-shadow:0 0 0 2px highlight;color:highlightText}}:host.nx-multi-step-item--vertical .line{border-top:0;border-left-width:4px;border-left-style:dotted;border-left-color:var(--multi-stepper-line-color);height:16px;flex:0 0 auto;margin-left:6px}[dir=rtl] :host.nx-multi-step-item--vertical .line{border-right-width:4px;border-right-style:dotted;border-right-color:var(--multi-stepper-line-color);margin-right:6px;margin-left:0;margin-left:initial;border-left:none}:host.nx-multi-step-item--vertical.is-active .line{border-left-style:solid;border-left-color:var(--multi-stepper-line-filled-color);margin-top:-5px;margin-bottom:-5px;height:26px}[dir=rtl] :host.nx-multi-step-item--vertical.is-active .line{border-right-style:solid;border-right-color:var(--multi-stepper-line-filled-color);border-left:none}@media screen and (-ms-high-contrast: active){:host.nx-multi-step-item--vertical.is-active .line{border-color:windowText}}:host.nx-multi-step-item--vertical.is-last{flex:0 0 auto}:host:not(.nx-multi-step-item--vertical) .line{border-top-width:4px;border-top-style:dotted;border-top-color:var(--multi-stepper-line-color);margin:0 4px;position:absolute;left:20px;width:calc(100% - 24px);transform:translate(50%);top:6px}[dir=rtl] :host:not(.nx-multi-step-item--vertical) .line{right:20px;left:auto;transform:translate(-50%)}:host:not(.nx-multi-step-item--vertical).is-active .line{border-top-color:var(--multi-stepper-line-filled-color);border-top-style:solid;margin:0;left:15px;width:calc(100% - 14px)}[dir=rtl] :host:not(.nx-multi-step-item--vertical).is-active .line{right:15px;left:auto}:host:not(:first-child):before{content:\"\"}:host.nx-multi-step-item--active:after{border-top-color:var(--multi-stepper-line-filled-color);border-top-style:solid;border-image-source:none;transition:border-style .1s ease-in;margin:0;left:8px;width:calc(100% - 4px)}[dir=rtl] :host.nx-multi-step-item--active:after{right:8px;left:auto}.label-box{outline:none;-webkit-appearance:none;appearance:none;border:none;padding:0;margin:0;background:transparent;max-width:100%}.label{position:absolute;top:24px;text-align:center;color:var(--multi-stepper-step-color);left:0;width:100%}:host-context([dir=rtl]) .label{right:0;left:auto}.dot{width:16px;height:16px;border-width:2px;border-style:solid;border-color:var(--multi-stepper-dot-touched-color);color:var(--multi-stepper-dot-checkmark-color);background:var(--multi-stepper-dot-background-color);border-radius:50%;flex:0 0 auto;position:relative}.dot nx-icon{font-size:16px;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}:host-context([dir=rtl]) .dot nx-icon{right:50%;left:auto;transform:translate(50%,-50%)}.small-dot{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);width:8px;height:8px;border-radius:50%;background-color:var(--multi-stepper-dot-touched-color)}:host-context([dir=rtl]) .small-dot{right:50%;left:auto;transform:translate(50%,-50%)}@media screen and (-ms-high-contrast: active){.small-dot{background-color:windowText}}\n"], components: [{ type: i2.NxIconComponent, selector: "nx-icon", inputs: ["name", "outline", "fill", "size", "font"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMultiStepItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-multi-step-item', changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        '[class.nx-multi-step-item--vertical]': 'direction === "vertical"',
                        '[class.is-selected]': 'selected',
                        '[class.is-completed]': 'completed',
                        '[class.is-active]': 'active',
                        '[class.is-disabled]': 'disabled',
                        '[class.is-last]': 'last',
                        '[attr.aria-disabled]': 'disabled ? "true" : null',
                        role: 'tab',
                        '[attr.aria-selected]': 'selected',
                        '[attr.aria-label]': 'label',
                    }, template: "<div class=\"label-box\">\n    <div class=\"dot\">\n        <div *ngIf=\"!completed && selected\" class=\"small-dot\"></div>\n        <nx-icon *ngIf=\"completed && !disabled\" name=\"check\"></nx-icon>\n    </div>\n    <div *ngIf=\"direction === 'vertical'\" class=\"label\" [attr.label]=\"label\">{{ label }}</div>\n</div>\n\n<div *ngIf=\"!last\" class=\"line\"></div>\n", styles: [":host{flex:1 1 100%;display:flex;align-items:center;justify-content:center;position:relative;padding-bottom:8px;cursor:pointer;max-width:100%}:host:focus{outline:none}:host.cdk-keyboard-focused .dot{box-shadow:var(--focus-box-shadow)}@media screen and (-ms-high-contrast: active),(forced-colors: active){:host.cdk-keyboard-focused .dot{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}@media screen and (-ms-high-contrast: active){:host .dot{border-color:buttonText}:host .small-dot{background-color:buttonText}}:host.is-disabled{cursor:not-allowed}:host.is-disabled .dot{border-color:var(--multi-stepper-dot-disabled-color)}@media screen and (-ms-high-contrast: active){:host.is-disabled .label{color:GrayText}:host.is-disabled .dot{border-color:GrayText}}:host.is-completed:not(.is-disabled) .dot{background-color:var(--multi-stepper-dot-touched-color)}:host.nx-multi-step-item--vertical{flex:0 0 auto;flex-direction:column;align-items:flex-start;padding:0}:host.nx-multi-step-item--vertical .label-box{display:flex;align-items:center}:host.nx-multi-step-item--vertical .label{position:static;transform:none;margin-left:16px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;text-align:left;min-width:0;font-size:var(--multi-stepper-step-font-size);line-height:var(--multi-stepper-step-line-height);font-weight:var(--multi-stepper-step-font-weight);letter-spacing:var(--multi-stepper-step-letter-spacing)}[dir=rtl] :host.nx-multi-step-item--vertical .label{margin-right:16px;margin-left:0;margin-left:initial}:host.nx-multi-step-item--vertical .label:before{content:attr(label);height:0;overflow:hidden;display:block}@media screen and (-ms-high-contrast: active){:host.nx-multi-step-item--vertical .label{-ms-high-contrast-adjust:none;background-color:buttonFace;border-radius:4px;box-shadow:0 0 0 2px buttonFace;color:buttonText}}:host.nx-multi-step-item--vertical.is-disabled .label{color:var(--multi-stepper-step-disabled-color)}@media screen and (-ms-high-contrast: active){:host.nx-multi-step-item--vertical.is-disabled .label{color:GrayText}}:host.nx-multi-step-item--vertical.is-selected .label{font-weight:700}@media screen and (-ms-high-contrast: active){:host.nx-multi-step-item--vertical.is-selected .label{background-color:highlight;border-radius:4px;box-shadow:0 0 0 2px highlight;color:highlightText}}:host.nx-multi-step-item--vertical .line{border-top:0;border-left-width:4px;border-left-style:dotted;border-left-color:var(--multi-stepper-line-color);height:16px;flex:0 0 auto;margin-left:6px}[dir=rtl] :host.nx-multi-step-item--vertical .line{border-right-width:4px;border-right-style:dotted;border-right-color:var(--multi-stepper-line-color);margin-right:6px;margin-left:0;margin-left:initial;border-left:none}:host.nx-multi-step-item--vertical.is-active .line{border-left-style:solid;border-left-color:var(--multi-stepper-line-filled-color);margin-top:-5px;margin-bottom:-5px;height:26px}[dir=rtl] :host.nx-multi-step-item--vertical.is-active .line{border-right-style:solid;border-right-color:var(--multi-stepper-line-filled-color);border-left:none}@media screen and (-ms-high-contrast: active){:host.nx-multi-step-item--vertical.is-active .line{border-color:windowText}}:host.nx-multi-step-item--vertical.is-last{flex:0 0 auto}:host:not(.nx-multi-step-item--vertical) .line{border-top-width:4px;border-top-style:dotted;border-top-color:var(--multi-stepper-line-color);margin:0 4px;position:absolute;left:20px;width:calc(100% - 24px);transform:translate(50%);top:6px}[dir=rtl] :host:not(.nx-multi-step-item--vertical) .line{right:20px;left:auto;transform:translate(-50%)}:host:not(.nx-multi-step-item--vertical).is-active .line{border-top-color:var(--multi-stepper-line-filled-color);border-top-style:solid;margin:0;left:15px;width:calc(100% - 14px)}[dir=rtl] :host:not(.nx-multi-step-item--vertical).is-active .line{right:15px;left:auto}:host:not(:first-child):before{content:\"\"}:host.nx-multi-step-item--active:after{border-top-color:var(--multi-stepper-line-filled-color);border-top-style:solid;border-image-source:none;transition:border-style .1s ease-in;margin:0;left:8px;width:calc(100% - 4px)}[dir=rtl] :host.nx-multi-step-item--active:after{right:8px;left:auto}.label-box{outline:none;-webkit-appearance:none;appearance:none;border:none;padding:0;margin:0;background:transparent;max-width:100%}.label{position:absolute;top:24px;text-align:center;color:var(--multi-stepper-step-color);left:0;width:100%}:host-context([dir=rtl]) .label{right:0;left:auto}.dot{width:16px;height:16px;border-width:2px;border-style:solid;border-color:var(--multi-stepper-dot-touched-color);color:var(--multi-stepper-dot-checkmark-color);background:var(--multi-stepper-dot-background-color);border-radius:50%;flex:0 0 auto;position:relative}.dot nx-icon{font-size:16px;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}:host-context([dir=rtl]) .dot nx-icon{right:50%;left:auto;transform:translate(50%,-50%)}.small-dot{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);width:8px;height:8px;border-radius:50%;background-color:var(--multi-stepper-dot-touched-color)}:host-context([dir=rtl]) .small-dot{right:50%;left:auto;transform:translate(50%,-50%)}@media screen and (-ms-high-contrast: active){.small-dot{background-color:windowText}}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i1$3.FocusMonitor }]; }, propDecorators: { direction: [{
                type: Input
            }], label: [{
                type: Input
            }], selected: [{
                type: Input
            }], active: [{
                type: Input
            }], disabled: [{
                type: Input
            }], last: [{
                type: Input
            }], completed: [{
                type: Input
            }] } });

class NxMultiStepperComponent extends NxProgressStepperDirective {
    constructor(_cdr, _dir, _el) {
        super(_cdr, _dir, _el);
        this._direction = 'horizontal';
    }
    /** Sets the direction of the multi stepper. */
    get direction() {
        return this._direction;
    }
    set direction(value) {
        this._direction = value;
    }
    ngAfterViewChecked() {
        // the _keyManager is currently private in the CdkStepper and the CDK/Material way
        // is to create to separate components for the vertical and horizontal stepper with no
        // possibility to change it during runtime
        // opened a ticket: https://github.com/angular/components/issues/21874
        // for now the quick solution is the hacky way to access the private property
        this['_keyManager'].withVerticalOrientation(this._direction === 'vertical');
    }
    ngAfterContentInit() {
        super.ngAfterContentInit();
        if (this.groups.length) {
            this.steps.reset(this._stepsInGroups);
            this.steps.notifyOnChanges();
        }
        this.groups.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {
            this.steps.reset(this._stepsInGroups);
            this.steps.notifyOnChanges();
        });
    }
    ngOnDestroy() {
        this._destroyed.next();
        this._destroyed.complete();
    }
    _stepDisabled(index) {
        const steps = this.steps.toArray();
        if (this.linear && index >= 0) {
            return steps.slice(0, index).some(step => {
                const control = step.stepControl;
                const isIncomplete = control ? control.invalid || control.pending || !step.interacted : !step.completed;
                return isIncomplete && !step.optional;
            });
        }
        return false;
    }
    get _stepsInGroups() {
        if (this.groups.length) {
            return this.groups.reduce((steps, group) => steps.concat(group.steps.toArray()), []);
        }
        return [];
    }
    // Returns the index of a certain step
    _getIndex(step) {
        return this.steps.toArray().indexOf(step);
    }
    _isGroupActive(groupIndex) {
        return this.selectedIndex >= this.getGroupItemIndex(groupIndex);
    }
    _isGroupDisabled(groupIndex) {
        return this._stepDisabled(this.getGroupItemIndex(groupIndex));
    }
    getGroupItemIndex(groupIndex) {
        let count = 0;
        const groups = this.groups.toArray();
        for (let i = 0; i < groupIndex; i++) {
            count += groups[i].steps.length;
        }
        return count;
    }
}
NxMultiStepperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMultiStepperComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$1.Directionality, optional: true }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
NxMultiStepperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxMultiStepperComponent, selector: "nx-multi-stepper", inputs: { direction: "direction" }, host: { properties: { "class.nx-multi-stepper--vertical": "direction === \"vertical\"" } }, providers: [{ provide: NxProgressStepperDirective, useExisting: NxMultiStepperComponent }], queries: [{ propertyName: "groups", predicate: NxMultiStepperGroupComponent, descendants: true }], viewQueries: [{ propertyName: "_stepHeader", predicate: NxMultiStepItemComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<span class=\"nx-progress-stepper__title\" *ngIf=\"direction === 'horizontal'\">\n    <ng-content select=\"nx-label\"></ng-content>\n</span>\n\n<div class=\"nx-multi-stepper__items\" role=\"tablist\">\n    <ng-container *ngIf=\"groups.length === 0 || direction === 'horizontal'; else groupsTemplate\">\n        <ng-container *ngFor=\"let step of steps; let i = index; let isLast = last; let isFirst = first\">\n            <nx-multi-step-item\n                (click)=\"!_stepDisabled(i) && step.select()\"\n                (keydown)=\"_onKeydown($event)\"\n                [last]=\"isLast\"\n                [tabindex]=\"_getFocusIndex() === i ? 0 : -1\"\n                [label]=\"step.stepLabel || step.label\"\n                [completed]=\"step.completed\"\n                [selected]=\"selectedIndex === i\"\n                [active]=\"selectedIndex > i\"\n                [disabled]=\"_stepDisabled(i)\"\n                [direction]=\"direction\"\n            >\n            </nx-multi-step-item>\n        </ng-container>\n    </ng-container>\n</div>\n\n<div class=\"labels-container\" *ngIf=\"direction === 'horizontal'\" role=\"tablist\">\n    <div\n        class=\"label\"\n        role=\"tab\"\n        tabindex=\"-1\"\n        [attr.aria-selected]=\"selectedIndex === i\"\n        *ngFor=\"let step of steps; let i = index\"\n        [ngClass]=\"{ 'is-disabled': _stepDisabled(i), 'is-selected': selectedIndex === i }\"\n        (click)=\"!_stepDisabled(i) && step.select()\"\n    >\n        <span>{{ step.label }}</span>\n    </div>\n</div>\n\n<div class=\"nx-progress-stepper__mobile-label\">\n    {{ currentLabel }}\n</div>\n\n<div\n    *ngFor=\"let step of steps; let i = index\"\n    class=\"nx-progress-stepper__content\"\n    role=\"tabpanel\"\n    [id]=\"_getStepContentId(i)\"\n    [attr.aria-label]=\"currentLabel\"\n    [attr.aria-expanded]=\"selectedIndex === i\"\n>\n    <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n\n<ng-template #groupsTemplate>\n    <ng-container *ngFor=\"let group of groups; let i = index\">\n        <div class=\"nx-multi-stepper__group\">\n            <div class=\"nx-multi-stepper__group-label\" [class.is-active]=\"_isGroupActive(i)\" [class.is-disabled]=\"_isGroupDisabled(i)\">\n                {{ group.label }}\n            </div>\n\n            <div class=\"nx-multi-stepper__group-items\">\n                <ng-container *ngFor=\"let step of group.steps; let isLast = last\">\n                    <nx-multi-step-item\n                        (click)=\"!_stepDisabled(_getIndex(step)) && step.select()\"\n                        (keydown)=\"_onKeydown($event)\"\n                        [tabindex]=\"_getFocusIndex() === _getIndex(step) ? 0 : -1\"\n                        [last]=\"isLast\"\n                        [label]=\"step.stepLabel || step.label\"\n                        [completed]=\"step.completed\"\n                        [selected]=\"selectedIndex === _getIndex(step)\"\n                        [active]=\"selectedIndex > _getIndex(step)\"\n                        [disabled]=\"_stepDisabled(_getIndex(step))\"\n                        [direction]=\"direction\"\n                    >\n                    </nx-multi-step-item>\n                </ng-container>\n            </div>\n        </div>\n    </ng-container>\n</ng-template>\n", styles: [":host{display:block}.nx-progress-stepper__content[aria-expanded=false]{height:0;overflow:hidden;visibility:hidden}.nx-progress-stepper__mobile-label{display:none;color:var(--progress-indicator-mobile-color);font-size:var(--progress-indicator-mobile-font-size);line-height:var(--progress-indicator-mobile-line-height);font-weight:var(--progress-indicator-mobile-font-weight);letter-spacing:var(--progress-indicator-mobile-letter-spacing)}@media (max-width: 703px){.nx-progress-stepper__mobile-label{display:block;text-align:center}}.nx-progress-stepper__title{display:block}.nx-progress-stepper__title ::ng-deep nx-label{margin-bottom:24px}\n", ":host{width:100%}@media (min-width: 704px){:host.nx-multi-stepper--vertical{display:flex}}:host.nx-multi-stepper--vertical .nx-progress-stepper__content[aria-expanded=false]{width:0}:host.nx-multi-stepper--vertical .nx-multi-stepper__items{align-items:flex-start;flex-direction:column;margin:0 56px 0 0;max-width:100%}[dir=rtl] :host.nx-multi-stepper--vertical .nx-multi-stepper__items{margin:0 0 0 56px}:host.nx-multi-stepper--vertical .nx-multi-stepper__group-items{flex-direction:column;max-width:100%}:host.nx-multi-stepper--vertical .nx-multi-stepper__group-label{transform:none;border-left:4px solid transparent;margin-bottom:16px;margin-left:6px;padding-left:22px}[dir=rtl] :host.nx-multi-stepper--vertical .nx-multi-stepper__group-label{margin-left:0;margin-left:initial;padding-left:0;padding-left:initial;margin-right:6px;padding-right:22px}:host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label{padding-top:16px;margin-top:16px;border-left-style:dotted;border-left-color:var(--multi-stepper-line-color)}:host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label.is-active{padding-top:36px;padding-bottom:20px;margin-top:-nx-spacer(3xs);margin-bottom:-nx-spacer(3xs);border-left-style:solid;border-left-color:var(--multi-stepper-line-filled-color)}[dir=rtl] :host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label{border-left-style:none;border-right-style:dotted;border-right-color:var(--multi-stepper-line-color)}[dir=rtl] :host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label.is-active{border-left-style:none;border-right-style:solid;border-right-color:var(--multi-stepper-line-filled-color)}:host .labels-container{width:100%;flex:1 1 100%;display:flex;margin:0 auto;vertical-align:top;align-self:flex-start;align-items:flex-start}@media (max-width: 703px){:host .labels-container{display:none}}:host .labels-container .label{flex:1 1 100%;display:flex;align-items:center;justify-content:center;position:relative;font-size:var(--multi-stepper-step-font-size);line-height:var(--multi-stepper-step-line-height);font-weight:var(--multi-stepper-step-font-weight);letter-spacing:var(--multi-stepper-step-letter-spacing);color:var(--multi-stepper-step-color);cursor:pointer;text-align:center}:host .labels-container .label.is-disabled{color:var(--multi-stepper-step-disabled-color);cursor:not-allowed}@media screen and (-ms-high-contrast: active){:host .labels-container .label{color:buttonText}:host .labels-container .label.is-disabled{color:GrayText}:host .labels-container .label:not(.is-disabled){color:buttonText}:host .labels-container .label span{-ms-high-contrast-adjust:none;background-color:buttonFace;border-radius:4px;box-shadow:0 0 0 2px buttonFace}:host .labels-container .label.is-selected span{background-color:highlight;border-radius:4px;box-shadow:0 0 0 2px highlight;color:highlightText}}.nx-multi-stepper__items{display:flex;margin:0 auto;align-items:center}@media (max-width: 703px){.nx-multi-stepper__items{display:none}}.nx-multi-stepper__group-items{display:flex}.nx-multi-stepper__group{display:flex;flex-direction:column;flex:1 1 auto;max-width:100%}.nx-multi-stepper__group-label{font-size:var(--multi-stepper-group-font-size);line-height:var(--multi-stepper-group-line-height);font-weight:var(--multi-stepper-group-font-weight);letter-spacing:var(--multi-stepper-group-letter-spacing);color:var(--multi-stepper-group-color)}.nx-multi-stepper__group-label.is-disabled{color:var(--multi-stepper-group-disabled-color)}\n"], components: [{ type: NxMultiStepItemComponent, selector: "nx-multi-step-item", inputs: ["direction", "label", "selected", "active", "disabled", "last", "completed"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMultiStepperComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-multi-stepper', providers: [{ provide: NxProgressStepperDirective, useExisting: NxMultiStepperComponent }], changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        '[class.nx-multi-stepper--vertical]': 'direction === "vertical"',
                    }, template: "<span class=\"nx-progress-stepper__title\" *ngIf=\"direction === 'horizontal'\">\n    <ng-content select=\"nx-label\"></ng-content>\n</span>\n\n<div class=\"nx-multi-stepper__items\" role=\"tablist\">\n    <ng-container *ngIf=\"groups.length === 0 || direction === 'horizontal'; else groupsTemplate\">\n        <ng-container *ngFor=\"let step of steps; let i = index; let isLast = last; let isFirst = first\">\n            <nx-multi-step-item\n                (click)=\"!_stepDisabled(i) && step.select()\"\n                (keydown)=\"_onKeydown($event)\"\n                [last]=\"isLast\"\n                [tabindex]=\"_getFocusIndex() === i ? 0 : -1\"\n                [label]=\"step.stepLabel || step.label\"\n                [completed]=\"step.completed\"\n                [selected]=\"selectedIndex === i\"\n                [active]=\"selectedIndex > i\"\n                [disabled]=\"_stepDisabled(i)\"\n                [direction]=\"direction\"\n            >\n            </nx-multi-step-item>\n        </ng-container>\n    </ng-container>\n</div>\n\n<div class=\"labels-container\" *ngIf=\"direction === 'horizontal'\" role=\"tablist\">\n    <div\n        class=\"label\"\n        role=\"tab\"\n        tabindex=\"-1\"\n        [attr.aria-selected]=\"selectedIndex === i\"\n        *ngFor=\"let step of steps; let i = index\"\n        [ngClass]=\"{ 'is-disabled': _stepDisabled(i), 'is-selected': selectedIndex === i }\"\n        (click)=\"!_stepDisabled(i) && step.select()\"\n    >\n        <span>{{ step.label }}</span>\n    </div>\n</div>\n\n<div class=\"nx-progress-stepper__mobile-label\">\n    {{ currentLabel }}\n</div>\n\n<div\n    *ngFor=\"let step of steps; let i = index\"\n    class=\"nx-progress-stepper__content\"\n    role=\"tabpanel\"\n    [id]=\"_getStepContentId(i)\"\n    [attr.aria-label]=\"currentLabel\"\n    [attr.aria-expanded]=\"selectedIndex === i\"\n>\n    <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n\n<ng-template #groupsTemplate>\n    <ng-container *ngFor=\"let group of groups; let i = index\">\n        <div class=\"nx-multi-stepper__group\">\n            <div class=\"nx-multi-stepper__group-label\" [class.is-active]=\"_isGroupActive(i)\" [class.is-disabled]=\"_isGroupDisabled(i)\">\n                {{ group.label }}\n            </div>\n\n            <div class=\"nx-multi-stepper__group-items\">\n                <ng-container *ngFor=\"let step of group.steps; let isLast = last\">\n                    <nx-multi-step-item\n                        (click)=\"!_stepDisabled(_getIndex(step)) && step.select()\"\n                        (keydown)=\"_onKeydown($event)\"\n                        [tabindex]=\"_getFocusIndex() === _getIndex(step) ? 0 : -1\"\n                        [last]=\"isLast\"\n                        [label]=\"step.stepLabel || step.label\"\n                        [completed]=\"step.completed\"\n                        [selected]=\"selectedIndex === _getIndex(step)\"\n                        [active]=\"selectedIndex > _getIndex(step)\"\n                        [disabled]=\"_stepDisabled(_getIndex(step))\"\n                        [direction]=\"direction\"\n                    >\n                    </nx-multi-step-item>\n                </ng-container>\n            </div>\n        </div>\n    </ng-container>\n</ng-template>\n", styles: [":host{display:block}.nx-progress-stepper__content[aria-expanded=false]{height:0;overflow:hidden;visibility:hidden}.nx-progress-stepper__mobile-label{display:none;color:var(--progress-indicator-mobile-color);font-size:var(--progress-indicator-mobile-font-size);line-height:var(--progress-indicator-mobile-line-height);font-weight:var(--progress-indicator-mobile-font-weight);letter-spacing:var(--progress-indicator-mobile-letter-spacing)}@media (max-width: 703px){.nx-progress-stepper__mobile-label{display:block;text-align:center}}.nx-progress-stepper__title{display:block}.nx-progress-stepper__title ::ng-deep nx-label{margin-bottom:24px}\n", ":host{width:100%}@media (min-width: 704px){:host.nx-multi-stepper--vertical{display:flex}}:host.nx-multi-stepper--vertical .nx-progress-stepper__content[aria-expanded=false]{width:0}:host.nx-multi-stepper--vertical .nx-multi-stepper__items{align-items:flex-start;flex-direction:column;margin:0 56px 0 0;max-width:100%}[dir=rtl] :host.nx-multi-stepper--vertical .nx-multi-stepper__items{margin:0 0 0 56px}:host.nx-multi-stepper--vertical .nx-multi-stepper__group-items{flex-direction:column;max-width:100%}:host.nx-multi-stepper--vertical .nx-multi-stepper__group-label{transform:none;border-left:4px solid transparent;margin-bottom:16px;margin-left:6px;padding-left:22px}[dir=rtl] :host.nx-multi-stepper--vertical .nx-multi-stepper__group-label{margin-left:0;margin-left:initial;padding-left:0;padding-left:initial;margin-right:6px;padding-right:22px}:host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label{padding-top:16px;margin-top:16px;border-left-style:dotted;border-left-color:var(--multi-stepper-line-color)}:host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label.is-active{padding-top:36px;padding-bottom:20px;margin-top:-nx-spacer(3xs);margin-bottom:-nx-spacer(3xs);border-left-style:solid;border-left-color:var(--multi-stepper-line-filled-color)}[dir=rtl] :host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label{border-left-style:none;border-right-style:dotted;border-right-color:var(--multi-stepper-line-color)}[dir=rtl] :host.nx-multi-stepper--vertical .nx-multi-stepper__group:nth-child(n+2) .nx-multi-stepper__group-label.is-active{border-left-style:none;border-right-style:solid;border-right-color:var(--multi-stepper-line-filled-color)}:host .labels-container{width:100%;flex:1 1 100%;display:flex;margin:0 auto;vertical-align:top;align-self:flex-start;align-items:flex-start}@media (max-width: 703px){:host .labels-container{display:none}}:host .labels-container .label{flex:1 1 100%;display:flex;align-items:center;justify-content:center;position:relative;font-size:var(--multi-stepper-step-font-size);line-height:var(--multi-stepper-step-line-height);font-weight:var(--multi-stepper-step-font-weight);letter-spacing:var(--multi-stepper-step-letter-spacing);color:var(--multi-stepper-step-color);cursor:pointer;text-align:center}:host .labels-container .label.is-disabled{color:var(--multi-stepper-step-disabled-color);cursor:not-allowed}@media screen and (-ms-high-contrast: active){:host .labels-container .label{color:buttonText}:host .labels-container .label.is-disabled{color:GrayText}:host .labels-container .label:not(.is-disabled){color:buttonText}:host .labels-container .label span{-ms-high-contrast-adjust:none;background-color:buttonFace;border-radius:4px;box-shadow:0 0 0 2px buttonFace}:host .labels-container .label.is-selected span{background-color:highlight;border-radius:4px;box-shadow:0 0 0 2px highlight;color:highlightText}}.nx-multi-stepper__items{display:flex;margin:0 auto;align-items:center}@media (max-width: 703px){.nx-multi-stepper__items{display:none}}.nx-multi-stepper__group-items{display:flex}.nx-multi-stepper__group{display:flex;flex-direction:column;flex:1 1 auto;max-width:100%}.nx-multi-stepper__group-label{font-size:var(--multi-stepper-group-font-size);line-height:var(--multi-stepper-group-line-height);font-weight:var(--multi-stepper-group-font-weight);letter-spacing:var(--multi-stepper-group-letter-spacing);color:var(--multi-stepper-group-color)}.nx-multi-stepper__group-label.is-disabled{color:var(--multi-stepper-group-disabled-color)}\n"] }]
        }], ctorParameters: function () {
        return [{ type: i0.ChangeDetectorRef }, { type: i1$1.Directionality, decorators: [{
                        type: Optional
                    }] }, { type: i0.ElementRef }];
    }, propDecorators: { _stepHeader: [{
                type: ViewChildren,
                args: [NxMultiStepItemComponent]
            }], groups: [{
                type: ContentChildren,
                args: [NxMultiStepperGroupComponent, { descendants: true }]
            }], direction: [{
                type: Input
            }] } });

class NxProgressStepperComponent extends NxProgressStepperDirective {
    constructor(_cdr, _dir, _el) {
        super(_cdr, _dir, _el);
        this._progress = 0;
    }
    /** Sets the current value/progress of the progress bar. */
    get progress() {
        return this._progress;
    }
    set progress(value) {
        this._progress = clamp(value || 0);
    }
}
NxProgressStepperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxProgressStepperComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$1.Directionality, optional: true }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
NxProgressStepperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxProgressStepperComponent, selector: "nx-progress-stepper", inputs: { progress: "progress" }, providers: [{ provide: NxProgressStepperDirective, useExisting: NxProgressStepperComponent }], usesInheritance: true, ngImport: i0, template: "<span class=\"nx-progress-stepper__title\">\n    <ng-content select=\"nx-label\"></ng-content>\n</span>\n\n<div class=\"nx-subprogress__items\">\n    <ng-container *ngFor=\"let step of steps; let i = index\">\n        <div\n            [class.nx-subprogress__item--inactive]=\"selectedIndex !== i && !step.completed\"\n            [attr.aria-disabled]=\"selectedIndex !== i && !step.completed\"\n            [class.nx-subprogress__item--selected]=\"selectedIndex === i\"\n            class=\"nx-subprogress__item\"\n        >\n            <div class=\"nx-subprogress__counter\">\n                <div class=\"nx-subprogress__number\">\n                    {{ i + 1 }}\n                </div>\n            </div>\n\n            <div class=\"nx-subprogress__label\">{{ step.stepLabel || step.label }}</div>\n\n            <div class=\"nx-subprogress__progress\" *ngIf=\"selectedIndex === i\">\n                <nx-progressbar [value]=\"progress\"></nx-progressbar>\n            </div>\n        </div>\n    </ng-container>\n</div>\n\n<div class=\"nx-progress-stepper__mobile-label\">\n    {{ currentLabel }}\n</div>\n\n<div\n    *ngFor=\"let step of steps; let i = index\"\n    class=\"nx-progress-stepper__content\"\n    role=\"tabpanel\"\n    [id]=\"_getStepContentId(i)\"\n    [attr.aria-label]=\"currentLabel\"\n    [attr.aria-expanded]=\"selectedIndex === i\"\n>\n    <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n", styles: [":host{display:block}.nx-progress-stepper__content[aria-expanded=false]{height:0;overflow:hidden;visibility:hidden}.nx-progress-stepper__mobile-label{display:none;color:var(--progress-indicator-mobile-color);font-size:var(--progress-indicator-mobile-font-size);line-height:var(--progress-indicator-mobile-line-height);font-weight:var(--progress-indicator-mobile-font-weight);letter-spacing:var(--progress-indicator-mobile-letter-spacing)}@media (max-width: 703px){.nx-progress-stepper__mobile-label{display:block;text-align:center}}.nx-progress-stepper__title{display:block}.nx-progress-stepper__title ::ng-deep nx-label{margin-bottom:24px}\n", ".nx-subprogress__items{display:flex;margin:0 auto}@media (max-width: 703px){.nx-subprogress__items{display:none}}.nx-subprogress__item{display:flex;flex:1 0 auto}.nx-subprogress__item:not(:first-child){margin-left:16px}:host-context([dir=rtl]) .nx-subprogress__item:not(:first-child){margin-right:16px;margin-left:0;margin-left:initial}.nx-subprogress__item--selected{display:flex;flex:1 1 100%;align-items:center}.nx-subprogress__progress{flex:1 1 100%;margin-left:8px}:host-context([dir=rtl]) .nx-subprogress__progress{margin-right:8px;margin-left:0;margin-left:initial}.nx-subprogress__item--inactive .nx-subprogress__counter{max-width:24px;background-color:transparent;border-width:2px;border-style:solid;border-color:var(--progress-stepper-dot-disabled-background-color);color:var(--progress-stepper-dot-disabled-background-color)}.nx-subprogress__item--inactive .nx-subprogress__label{color:var(--progress-stepper-step-disabled-color)}.nx-subprogress__label{flex:1 1 auto;white-space:nowrap;text-overflow:ellipsis;color:var(--progress-stepper-step-color);font-size:var(--progress-stepper-step-font-size);line-height:var(--progress-stepper-step-line-height);font-weight:var(--progress-stepper-step-font-weight);letter-spacing:var(--progress-stepper-step-letter-spacing)}.nx-subprogress__counter{flex:0 0 24px;display:flex;align-items:center;justify-content:center;background-color:var(--progress-stepper-dot-background-color);color:var(--progress-stepper-dot-color);width:24px;height:24px;text-align:center;border-radius:50%;margin-right:8px}:host-context([dir=rtl]) .nx-subprogress__counter{margin-right:0;margin-right:initial;margin-left:8px}@media screen and (-ms-high-contrast: active){.nx-subprogress__counter{-ms-high-contrast-adjust:none;background-color:transparent;color:windowText;border:1px solid windowText;border-radius:50%}.nx-subprogress__item--inactive{color:GrayText}.nx-subprogress__item--inactive .nx-subprogress__counter{color:GrayText;border:1px solid GrayText}}.nx-subprogress__number{font-size:var(--progress-stepper-dotnumber-font-size);line-height:var(--progress-stepper-dotnumber-line-height);font-weight:var(--progress-stepper-dotnumber-font-weight);letter-spacing:var(--progress-stepper-dotnumber-letter-spacing)}\n"], components: [{ type: i2$1.NxProgressbarComponent, selector: "nx-progressbar", inputs: ["value"] }], directives: [{ type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxProgressStepperComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-progress-stepper', providers: [{ provide: NxProgressStepperDirective, useExisting: NxProgressStepperComponent }], changeDetection: ChangeDetectionStrategy.OnPush, template: "<span class=\"nx-progress-stepper__title\">\n    <ng-content select=\"nx-label\"></ng-content>\n</span>\n\n<div class=\"nx-subprogress__items\">\n    <ng-container *ngFor=\"let step of steps; let i = index\">\n        <div\n            [class.nx-subprogress__item--inactive]=\"selectedIndex !== i && !step.completed\"\n            [attr.aria-disabled]=\"selectedIndex !== i && !step.completed\"\n            [class.nx-subprogress__item--selected]=\"selectedIndex === i\"\n            class=\"nx-subprogress__item\"\n        >\n            <div class=\"nx-subprogress__counter\">\n                <div class=\"nx-subprogress__number\">\n                    {{ i + 1 }}\n                </div>\n            </div>\n\n            <div class=\"nx-subprogress__label\">{{ step.stepLabel || step.label }}</div>\n\n            <div class=\"nx-subprogress__progress\" *ngIf=\"selectedIndex === i\">\n                <nx-progressbar [value]=\"progress\"></nx-progressbar>\n            </div>\n        </div>\n    </ng-container>\n</div>\n\n<div class=\"nx-progress-stepper__mobile-label\">\n    {{ currentLabel }}\n</div>\n\n<div\n    *ngFor=\"let step of steps; let i = index\"\n    class=\"nx-progress-stepper__content\"\n    role=\"tabpanel\"\n    [id]=\"_getStepContentId(i)\"\n    [attr.aria-label]=\"currentLabel\"\n    [attr.aria-expanded]=\"selectedIndex === i\"\n>\n    <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n", styles: [":host{display:block}.nx-progress-stepper__content[aria-expanded=false]{height:0;overflow:hidden;visibility:hidden}.nx-progress-stepper__mobile-label{display:none;color:var(--progress-indicator-mobile-color);font-size:var(--progress-indicator-mobile-font-size);line-height:var(--progress-indicator-mobile-line-height);font-weight:var(--progress-indicator-mobile-font-weight);letter-spacing:var(--progress-indicator-mobile-letter-spacing)}@media (max-width: 703px){.nx-progress-stepper__mobile-label{display:block;text-align:center}}.nx-progress-stepper__title{display:block}.nx-progress-stepper__title ::ng-deep nx-label{margin-bottom:24px}\n", ".nx-subprogress__items{display:flex;margin:0 auto}@media (max-width: 703px){.nx-subprogress__items{display:none}}.nx-subprogress__item{display:flex;flex:1 0 auto}.nx-subprogress__item:not(:first-child){margin-left:16px}:host-context([dir=rtl]) .nx-subprogress__item:not(:first-child){margin-right:16px;margin-left:0;margin-left:initial}.nx-subprogress__item--selected{display:flex;flex:1 1 100%;align-items:center}.nx-subprogress__progress{flex:1 1 100%;margin-left:8px}:host-context([dir=rtl]) .nx-subprogress__progress{margin-right:8px;margin-left:0;margin-left:initial}.nx-subprogress__item--inactive .nx-subprogress__counter{max-width:24px;background-color:transparent;border-width:2px;border-style:solid;border-color:var(--progress-stepper-dot-disabled-background-color);color:var(--progress-stepper-dot-disabled-background-color)}.nx-subprogress__item--inactive .nx-subprogress__label{color:var(--progress-stepper-step-disabled-color)}.nx-subprogress__label{flex:1 1 auto;white-space:nowrap;text-overflow:ellipsis;color:var(--progress-stepper-step-color);font-size:var(--progress-stepper-step-font-size);line-height:var(--progress-stepper-step-line-height);font-weight:var(--progress-stepper-step-font-weight);letter-spacing:var(--progress-stepper-step-letter-spacing)}.nx-subprogress__counter{flex:0 0 24px;display:flex;align-items:center;justify-content:center;background-color:var(--progress-stepper-dot-background-color);color:var(--progress-stepper-dot-color);width:24px;height:24px;text-align:center;border-radius:50%;margin-right:8px}:host-context([dir=rtl]) .nx-subprogress__counter{margin-right:0;margin-right:initial;margin-left:8px}@media screen and (-ms-high-contrast: active){.nx-subprogress__counter{-ms-high-contrast-adjust:none;background-color:transparent;color:windowText;border:1px solid windowText;border-radius:50%}.nx-subprogress__item--inactive{color:GrayText}.nx-subprogress__item--inactive .nx-subprogress__counter{color:GrayText;border:1px solid GrayText}}.nx-subprogress__number{font-size:var(--progress-stepper-dotnumber-font-size);line-height:var(--progress-stepper-dotnumber-line-height);font-weight:var(--progress-stepper-dotnumber-font-weight);letter-spacing:var(--progress-stepper-dotnumber-letter-spacing)}\n"] }]
        }], ctorParameters: function () {
        return [{ type: i0.ChangeDetectorRef }, { type: i1$1.Directionality, decorators: [{
                        type: Optional
                    }] }, { type: i0.ElementRef }];
    }, propDecorators: { progress: [{
                type: Input
            }] } });

class NxSingleStepperComponent extends NxProgressStepperDirective {
    constructor(_cdr, _dir, _el) {
        super(_cdr, _dir, _el);
        this._rightLabel = 'Next step:';
    }
    /** Sets the label on the right showing the next step. */
    get rightLabel() {
        return this._rightLabel;
    }
    set rightLabel(v) {
        this._rightLabel = v;
    }
    /** @docs-private */
    get progress() {
        return (this.selectedIndex + 1) / this.count;
    }
    /** @docs-private */
    get currentLabel() {
        const step = this.currentStep;
        const label = step.stepLabel || step.label;
        return `
    ${this.currentStepLabel} ${this.selectedIndex + 1}/${this.count}: ${label}
    `;
    }
    /** @docs-private */
    get nextLabel() {
        const step = this.nextStep;
        if (step) {
            const label = step.stepLabel || step.label;
            return `
        ${this.rightLabel} ${label}
      `;
        }
        return null;
    }
}
NxSingleStepperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxSingleStepperComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$1.Directionality, optional: true }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
NxSingleStepperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxSingleStepperComponent, selector: "nx-single-stepper", inputs: { rightLabel: ["nextLabel", "rightLabel"] }, providers: [{ provide: NxProgressStepperDirective, useExisting: NxSingleStepperComponent }], usesInheritance: true, ngImport: i0, template: "<div class=\"nx-single-step-container\">\n    <span class=\"nx-progress-stepper__title\">\n        <ng-content select=\"nx-label\"></ng-content>\n    </span>\n\n    <nx-progressbar [value]=\"progress\"></nx-progressbar>\n\n    <div class=\"nx-single-step__infos\">\n        <div class=\"nx-single-step__current\">\n            {{ currentLabel }}\n        </div>\n        <div class=\"nx-single-step__next\">\n            {{ nextLabel }}\n        </div>\n    </div>\n\n    <div class=\"nx-progress-stepper__mobile-label\">\n        {{ currentLabel }}\n    </div>\n</div>\n\n<div\n    *ngFor=\"let step of steps; let i = index\"\n    class=\"nx-progress-stepper__content\"\n    role=\"tabpanel\"\n    [id]=\"_getStepContentId(i)\"\n    [attr.aria-label]=\"currentLabel\"\n    [attr.aria-expanded]=\"selectedIndex === i\"\n>\n    <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n", styles: [":host{display:block}.nx-progress-stepper__content[aria-expanded=false]{height:0;overflow:hidden;visibility:hidden}.nx-progress-stepper__mobile-label{display:none;color:var(--progress-indicator-mobile-color);font-size:var(--progress-indicator-mobile-font-size);line-height:var(--progress-indicator-mobile-line-height);font-weight:var(--progress-indicator-mobile-font-weight);letter-spacing:var(--progress-indicator-mobile-letter-spacing)}@media (max-width: 703px){.nx-progress-stepper__mobile-label{display:block;text-align:center}}.nx-progress-stepper__title{display:block}.nx-progress-stepper__title ::ng-deep nx-label{margin-bottom:24px}\n", ":host{display:block}.nx-single-step__infos{display:flex;font-size:var(--single-stepper-step-font-size);line-height:var(--single-stepper-step-line-height);font-weight:var(--single-stepper-step-font-weight);letter-spacing:var(--single-stepper-step-letter-spacing);color:var(--single-stepper-step-color);margin-top:8px}nx-progressbar{margin-bottom:8px;display:block}@media (max-width: 703px){nx-progressbar,.nx-single-step__infos{display:none}}.nx-single-step__next{margin-left:auto}:host-context([dir=rtl]) .nx-single-step__next{margin-right:auto;margin-left:0;margin-left:initial}@media (max-width: 703px){.nx-single-step__next{display:none}}\n"], components: [{ type: i2$1.NxProgressbarComponent, selector: "nx-progressbar", inputs: ["value"] }], directives: [{ type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxSingleStepperComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-single-stepper', providers: [{ provide: NxProgressStepperDirective, useExisting: NxSingleStepperComponent }], changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"nx-single-step-container\">\n    <span class=\"nx-progress-stepper__title\">\n        <ng-content select=\"nx-label\"></ng-content>\n    </span>\n\n    <nx-progressbar [value]=\"progress\"></nx-progressbar>\n\n    <div class=\"nx-single-step__infos\">\n        <div class=\"nx-single-step__current\">\n            {{ currentLabel }}\n        </div>\n        <div class=\"nx-single-step__next\">\n            {{ nextLabel }}\n        </div>\n    </div>\n\n    <div class=\"nx-progress-stepper__mobile-label\">\n        {{ currentLabel }}\n    </div>\n</div>\n\n<div\n    *ngFor=\"let step of steps; let i = index\"\n    class=\"nx-progress-stepper__content\"\n    role=\"tabpanel\"\n    [id]=\"_getStepContentId(i)\"\n    [attr.aria-label]=\"currentLabel\"\n    [attr.aria-expanded]=\"selectedIndex === i\"\n>\n    <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n", styles: [":host{display:block}.nx-progress-stepper__content[aria-expanded=false]{height:0;overflow:hidden;visibility:hidden}.nx-progress-stepper__mobile-label{display:none;color:var(--progress-indicator-mobile-color);font-size:var(--progress-indicator-mobile-font-size);line-height:var(--progress-indicator-mobile-line-height);font-weight:var(--progress-indicator-mobile-font-weight);letter-spacing:var(--progress-indicator-mobile-letter-spacing)}@media (max-width: 703px){.nx-progress-stepper__mobile-label{display:block;text-align:center}}.nx-progress-stepper__title{display:block}.nx-progress-stepper__title ::ng-deep nx-label{margin-bottom:24px}\n", ":host{display:block}.nx-single-step__infos{display:flex;font-size:var(--single-stepper-step-font-size);line-height:var(--single-stepper-step-line-height);font-weight:var(--single-stepper-step-font-weight);letter-spacing:var(--single-stepper-step-letter-spacing);color:var(--single-stepper-step-color);margin-top:8px}nx-progressbar{margin-bottom:8px;display:block}@media (max-width: 703px){nx-progressbar,.nx-single-step__infos{display:none}}.nx-single-step__next{margin-left:auto}:host-context([dir=rtl]) .nx-single-step__next{margin-right:auto;margin-left:0;margin-left:initial}@media (max-width: 703px){.nx-single-step__next{display:none}}\n"] }]
        }], ctorParameters: function () {
        return [{ type: i0.ChangeDetectorRef }, { type: i1$1.Directionality, decorators: [{
                        type: Optional
                    }] }, { type: i0.ElementRef }];
    }, propDecorators: { rightLabel: [{
                type: Input,
                args: ['nextLabel']
            }] } });

class NxProgressStepperModule {
}
NxProgressStepperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxProgressStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NxProgressStepperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxProgressStepperModule, declarations: [NxProgressStepperDirective,
        NxMultiStepperComponent,
        NxStepComponent,
        NxStepperNextDirective,
        NxStepperPreviousDirective,
        NxProgressStepperComponent,
        NxSingleStepperComponent,
        NxMultiStepItemComponent,
        NxMultiStepperGroupComponent], imports: [CommonModule, CdkStepperModule, NxIconModule, NxProgressbarModule, NxLabelModule], exports: [NxProgressStepperDirective,
        NxSingleStepperComponent,
        NxProgressStepperComponent,
        NxMultiStepperComponent,
        NxStepComponent,
        NxStepperNextDirective,
        NxStepperPreviousDirective,
        NxMultiStepperGroupComponent] });
NxProgressStepperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxProgressStepperModule, imports: [[CommonModule, CdkStepperModule, NxIconModule, NxProgressbarModule, NxLabelModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxProgressStepperModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, CdkStepperModule, NxIconModule, NxProgressbarModule, NxLabelModule],
                    declarations: [
                        NxProgressStepperDirective,
                        NxMultiStepperComponent,
                        NxStepComponent,
                        NxStepperNextDirective,
                        NxStepperPreviousDirective,
                        NxProgressStepperComponent,
                        NxSingleStepperComponent,
                        NxMultiStepItemComponent,
                        NxMultiStepperGroupComponent,
                    ],
                    exports: [
                        NxProgressStepperDirective,
                        NxSingleStepperComponent,
                        NxProgressStepperComponent,
                        NxMultiStepperComponent,
                        NxStepComponent,
                        NxStepperNextDirective,
                        NxStepperPreviousDirective,
                        NxMultiStepperGroupComponent,
                    ],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { NxMultiStepItemComponent, NxMultiStepperComponent, NxMultiStepperGroupComponent, NxProgressStepperComponent, NxProgressStepperDirective, NxProgressStepperModule, NxSingleStepperComponent, NxStepComponent, NxStepperNextDirective, NxStepperPreviousDirective };
//# sourceMappingURL=aposin-ng-aquila-progress-stepper.mjs.map
