{"version":3,"file":"aposin-ng-aquila-radio-toggle.mjs","sources":["../../../projects/ng-aquila/src/radio-toggle/radio-toggle-button-base.component.ts","../../../projects/ng-aquila/src/radio-toggle/radio-toggle.component.ts","../../../projects/ng-aquila/src/radio-toggle/radio-toggle.component.html","../../../projects/ng-aquila/src/radio-toggle/radio-toggle-button.component.ts","../../../projects/ng-aquila/src/radio-toggle/radio-toggle-button.component.html","../../../projects/ng-aquila/src/radio-toggle/radio-toggle.module.ts","../../../projects/ng-aquila/src/radio-toggle/aposin-ng-aquila-radio-toggle.ts"],"sourcesContent":["import { Directive, ElementRef, Input, Renderer2, ViewChild } from '@angular/core';\nimport { removeClasses } from '@aposin/ng-aquila/utils';\n\nlet nextId = 0;\n\n/** @docs-private */\n@Directive()\nexport class NxRadioToggleButtonBaseComponent {\n    /** @docs-private */\n    toggleButtonId: string = 'nx-radio-toggle-button-' + nextId++;\n\n    /** @docs-private */\n    @Input('nxValue')\n    value: any;\n\n    /** @docs-private */\n    @ViewChild('toggleButtonLabelContainer', { static: true })\n    labelContainer!: ElementRef;\n\n    /** @docs-private */\n    @ViewChild('toggleInput', { static: true })\n    toggleInput!: ElementRef;\n\n    constructor(/** @docs-private */ protected renderer: Renderer2) {}\n\n    /** @docs-private */\n    triggerInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this.toggleInput.nativeElement.click();\n    }\n\n    /** @docs-private */\n    setFirstButton() {\n        this.renderer.addClass(this.labelContainer.nativeElement, 'nx-radio-toggle__label-container--first');\n    }\n\n    /** @docs-private */\n    setLastButton() {\n        this.renderer.addClass(this.labelContainer.nativeElement, 'nx-radio-toggle__label-container--last');\n    }\n\n    /** @docs-private */\n    resetClasses() {\n        removeClasses(this.renderer, this.labelContainer, 'nx-radio-toggle__label-container--first nx-radio-toggle__label-container--last');\n    }\n}\n","import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    DoCheck,\n    Input,\n    OnDestroy,\n    Optional,\n    QueryList,\n    Self,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher, mapClassNames } from '@aposin/ng-aquila/utils';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { startWith, switchMap, takeUntil } from 'rxjs/operators';\n\nimport { NxRadioToggleButtonChange, NxRadioToggleButtonComponent } from './radio-toggle-button.component';\nimport { NxRadioToggleButtonBaseComponent } from './radio-toggle-button-base.component';\n\nlet nextId = 0;\n\nconst MAPPING = {\n    negative: 'nx-radio-toggle--negative',\n    small: 'nx-radio-toggle--small',\n};\n\nexport const RESET_VALUES = [null, undefined, ''];\n\n@Component({\n    selector: 'nx-radio-toggle',\n    templateUrl: 'radio-toggle.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['radio-toggle.component.scss'],\n})\nexport class NxRadioToggleComponent implements ControlValueAccessor, OnDestroy, AfterContentInit, DoCheck {\n    private _toggleId: string = (nextId++).toString();\n\n    private _selection: any;\n\n    private _disabled = false;\n    /** @docs-private */\n    errorState = false;\n    // emits to signal children to run change detection\n    _disableChange = new Subject<void>();\n\n    /** @docs-private */\n    additionalClasses = '';\n\n    /** Sets the component to the disabled state.*/\n    @Input('nxDisabled')\n    set disabled(value: BooleanInput) {\n        const coerced = coerceBooleanProperty(value);\n        if (this._disabled !== coerced) {\n            this._disabled = coerced;\n            this._disableChange.next();\n        }\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    private _name!: string;\n\n    /** Sets the name used for accessibility. */\n    @Input('nxName')\n    set name(value: string) {\n        if (this._name !== value) {\n            this._name = value;\n            this._cdr.markForCheck();\n        }\n    }\n    get name(): string {\n        return this._name;\n    }\n\n    /** @docs-private */\n    @ContentChildren(NxRadioToggleButtonBaseComponent)\n    toggleButtons: QueryList<NxRadioToggleButtonBaseComponent> = new QueryList();\n\n    private readonly _destroyed = new Subject<void>();\n\n    private onTouchedCallback = () => {};\n\n    private onChangeCallback = (option: any) => {};\n\n    constructor(\n        private _cdr: ChangeDetectorRef,\n        /** @docs-private */ @Optional() @Self() public ngControl: NgControl | null,\n        private _errorStateMatcher: ErrorStateMatcher,\n        @Optional() private _parentForm: NgForm | null,\n        @Optional() private _parentFormGroup: FormGroupDirective | null,\n    ) {\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n    }\n\n    ngAfterContentInit() {\n        this.toggleButtons.changes\n            .pipe(\n                startWith(this.toggleButtons),\n                switchMap(_ => merge(...this.toggleButtons.map((button: any) => button.onChecked as Observable<NxRadioToggleButtonChange>))),\n                takeUntil(this._destroyed),\n            )\n            .subscribe(change => {\n                this._selection = change.value;\n                this.change(this._selection);\n            });\n\n        this.toggleButtons.changes\n            .pipe(startWith(this.toggleButtons), takeUntil(this._destroyed))\n            .subscribe((toggles: QueryList<NxRadioToggleButtonComponent>) => {\n                toggles.forEach(toggle => {\n                    toggle.resetClasses();\n                    if (toggle.value === this.selection) {\n                        // We need to defer the selection for the edge case that the button with the value of this.selection\n                        // didn't exist yet but was added afterwards to prevent changed after checked errors\n                        setTimeout(() => toggle.select());\n                    }\n                });\n                if (toggles.length > 0) {\n                    toggles.first.setFirstButton();\n                    toggles.last.setLastButton();\n                }\n            });\n    }\n\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._disableChange.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n\n    registerOnChange(onChangeCallback: any): void {\n        this.onChangeCallback = onChangeCallback;\n    }\n\n    registerOnTouched(onTouchedCallback: any): void {\n        this.onTouchedCallback = onTouchedCallback;\n    }\n\n    /** Preselects the respective options. */\n    @Input('nxSelection')\n    writeValue(value: any): void {\n        this._selection = value;\n        const correspondingButton = this.toggleButtons.find((button: NxRadioToggleButtonBaseComponent) => button.value === this._selection);\n        if (correspondingButton) {\n            (correspondingButton as NxRadioToggleButtonComponent).select();\n            return;\n        }\n        if (RESET_VALUES.includes(value)) {\n            this.toggleButtons.map((button: NxRadioToggleButtonBaseComponent) => (button as NxRadioToggleButtonComponent).deselect());\n        }\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    /** @docs-private */\n    get id(): string {\n        return `nx-radio-toggle-${this._toggleId}`;\n    }\n\n    /** Sets the modifiers for the component. */\n    @Input('nxStyle')\n    set style(value: string) {\n        this.additionalClasses = mapClassNames(value, [], MAPPING);\n    }\n\n    /**\n     * @docs-private\n     */\n    get selection(): any {\n        return this._selection;\n    }\n\n    /** @docs-private */\n    change(value: any) {\n        this.onChangeCallback(value);\n        if (this.onTouchedCallback) {\n            this.onTouchedCallback();\n        }\n    }\n\n    /** @docs-private */\n    updateErrorState() {\n        const oldState = this.errorState;\n        const parent = this._parentFormGroup || this._parentForm;\n        const control = this.ngControl ? (this.ngControl.control as FormControl) : null;\n        const newState = this._errorStateMatcher.isErrorState(control, parent);\n\n        if (newState !== oldState) {\n            this.errorState = newState;\n        }\n    }\n}\n","<div class=\"nx-radio-toggle\" [ngClass]=\"additionalClasses\" role=\"radiogroup\" [attr.aria-label]=\"name\">\n    <ng-content></ng-content>\n</div>\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    forwardRef,\n    HostListener,\n    Inject,\n    Input,\n    OnDestroy,\n    Renderer2,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NxRadioToggleComponent } from './radio-toggle.component';\nimport { NxRadioToggleButtonBaseComponent } from './radio-toggle-button-base.component';\n\n/** @docs-private */\nexport class NxRadioToggleButtonChange {\n    constructor(public source: NxRadioToggleButtonComponent, public value: any) {}\n}\n\n@Component({\n    selector: 'nx-radio-toggle-button',\n    styleUrls: ['radio-toggle-button.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: 'radio-toggle-button.component.html',\n    providers: [\n        {\n            provide: NxRadioToggleButtonBaseComponent,\n            useExisting: forwardRef(() => NxRadioToggleButtonComponent),\n        },\n    ],\n    host: {\n        '[class.has-error]': '_controlInvalid() || null',\n        '[attr.aria-invalid]': '_controlInvalid() || null',\n    },\n})\nexport class NxRadioToggleButtonComponent extends NxRadioToggleButtonBaseComponent implements AfterViewInit, OnDestroy {\n    /** @docs-private */\n    // emits when the button is checked to notify the group\n    readonly onChecked = new Subject<NxRadioToggleButtonChange>();\n\n    private _disabled = false;\n    private _selected = false;\n\n    /** @docs-private */\n    @Input('nxDisabled')\n    set disabled(value: BooleanInput) {\n        this._disabled = coerceBooleanProperty(value);\n        this._cdr.markForCheck();\n    }\n    get disabled(): boolean {\n        return this._disabled || this.radioToggle?.disabled;\n    }\n\n    /** Sets the checked state and notify siblings and the parent group about the change */\n    // Only use this if you want the onChecked event to be fired, this will inform the parent about the change!\n    // To select a button without firing the event use the select() function\n    @Input('nxSelected')\n    set selected(value: boolean) {\n        if (this._selected !== value) {\n            this._selected = value;\n            if (this._selected) {\n                this._notifySiblings();\n                this._emitCheckedEvent();\n            }\n\n            this._cdr.markForCheck();\n        }\n    }\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    private readonly _destroyed = new Subject<void>();\n\n    /** Unregister function for _expansionDispatcher. */\n    private _removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Inject(forwardRef(() => NxRadioToggleComponent)) private radioToggle: NxRadioToggleComponent,\n        /** @docs-private */ renderer: Renderer2,\n        private _cdr: ChangeDetectorRef,\n        private _toggleDispatcher: UniqueSelectionDispatcher,\n        private _focusMonitor: FocusMonitor,\n    ) {\n        super(renderer);\n\n        this._removeUniqueSelectionListener = this._toggleDispatcher.listen((id: string, radioToggleId: string) => {\n            if (this.radioToggle && this.radioToggle.id === radioToggleId && this.id !== id) {\n                this._selected = false;\n                // need to let change detector know in case that the select() function was called on another button\n                this._cdr.markForCheck();\n            }\n        });\n\n        this.radioToggle._disableChange.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._cdr.markForCheck();\n        });\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.toggleInput);\n    }\n\n    ngOnDestroy() {\n        this._removeUniqueSelectionListener();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._focusMonitor.stopMonitoring(this.toggleInput);\n    }\n\n    /** @docs-private */\n    get toggleId(): string {\n        return this.radioToggle.id;\n    }\n\n    /** @docs-private */\n    get id(): string {\n        return this.toggleButtonId;\n    }\n\n    private _notifySiblings() {\n        const toggleId = this.radioToggle ? this.radioToggle.id : this.id;\n        this._toggleDispatcher.notify(this.id, toggleId);\n    }\n\n    private _emitCheckedEvent() {\n        this.onChecked.next(new NxRadioToggleButtonChange(this, this.value));\n    }\n\n    // Does NOT emit the onChecked event. Useful when you need to set initial\n    // state. Used by the parent to set checked states on initialization and during\n    // writeValue() changes.\n    /** @docs-private */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._notifySiblings();\n        }\n\n        this._cdr.markForCheck();\n    }\n\n    /** @docs-private */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n        }\n\n        this._cdr.markForCheck();\n    }\n\n    /** @docs-private */\n    @HostListener('keyup.space')\n    onKeyupSpace(): void {\n        this._selected = false;\n        this._notifySiblings();\n    }\n\n    /** @docs-private */\n    _controlInvalid(): boolean {\n        return !!this.radioToggle?.errorState;\n    }\n}\n","<input\n    [attr.id]=\"toggleButtonId\"\n    #toggleInput\n    [attr.name]=\"toggleId\"\n    [checked]=\"selected\"\n    class=\"nx-radio-toggle__input\"\n    type=\"radio\"\n    (click)=\"selected = true\"\n    [disabled]=\"disabled\"\n/>\n<div (click)=\"triggerInputClick($event)\" #toggleButtonLabelContainer class=\"nx-radio-toggle__label-container\">\n    <label [attr.for]=\"toggleButtonId\" class=\"nx-radio-toggle__label\">\n        <nx-icon class=\"nx-toggle-button__mobile-check\" name=\"check\" aria-hidden=\"true\"></nx-icon>\n        <ng-content></ng-content>\n    </label>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NxIconModule } from '@aposin/ng-aquila/icon';\n\nimport { NxRadioToggleComponent } from './radio-toggle.component';\nimport { NxRadioToggleButtonComponent } from './radio-toggle-button.component';\n\n@NgModule({\n    declarations: [NxRadioToggleComponent, NxRadioToggleButtonComponent],\n    exports: [NxRadioToggleComponent, NxRadioToggleButtonComponent],\n    imports: [CommonModule, FormsModule, NxIconModule],\n})\nexport class NxRadioToggleModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["nextId","i1","i2","i3"],"mappings":"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"}