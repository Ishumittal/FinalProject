{"version":3,"file":"aposin-ng-aquila-popover.mjs","sources":["../../../projects/ng-aquila/src/popover/popover-content.ts","../../../projects/ng-aquila/src/popover/popover-intl.ts","../../../projects/ng-aquila/src/popover/popover.component.ts","../../../projects/ng-aquila/src/popover/popover.component.html","../../../projects/ng-aquila/src/popover/popover-trigger.directive.ts","../../../projects/ng-aquila/src/popover/popover.module.ts","../../../projects/ng-aquila/src/popover/aposin-ng-aquila-popover.ts"],"sourcesContent":["import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * Popover content that will be rendered lazily\n * after the popover is opened for the first time.\n */\n@Directive({\n    selector: 'ng-template[nxPopoverContent]',\n})\nexport class NxPopoverContentDirective {\n    constructor(public _template: TemplateRef<any>) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/** Popover data that requires internationalization. */\n@Injectable({ providedIn: 'root' })\nexport class NxPopoverIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** Aria-label for the delete icon. */\n    closeIconLabel = 'close';\n}\n","import { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    Output,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NxPopoverContentDirective } from './popover-content';\nimport { NxPopoverIntl } from './popover-intl';\n\n@Component({\n    selector: 'nx-popover',\n    templateUrl: './popover.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['./popover.component.scss'],\n    exportAs: 'nxPopover',\n})\nexport class NxPopoverComponent implements OnDestroy, OnInit {\n    /** @docs-private */\n    @ViewChild(TemplateRef)\n    templateRef!: TemplateRef<any>;\n\n    /** Content that will be rendered lazily. */\n    @ContentChild(NxPopoverContentDirective) _lazyContent!: NxPopoverContentDirective;\n\n    /** Event emitted when the popover is closed. */\n    @Output('nxClosed')\n    closed = new EventEmitter<void>();\n\n    /** @docs-private */\n    closeButtonClick = new Subject<void>();\n\n    /** @docs-private */\n    id!: string;\n\n    /** @docs-private */\n    direction!: string;\n\n    /** @docs-private */\n    showCloseButton = false;\n\n    /** @docs-private */\n    arrowStyle = {};\n\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(public _intl: NxPopoverIntl, private _cdr: ChangeDetectorRef) {}\n\n    ngOnInit() {\n        this._intl.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._cdr.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.closed.complete();\n    }\n\n    /**\n     * Emits event to notify the popover trigger directive that the close button was clicked.\n     * @docs-private\n     */\n    emitCloseButtonClick() {\n        this.closeButtonClick.next();\n    }\n\n    /** @docs-private */\n    _onCloseKeyup($event: KeyboardEvent) {\n        if ($event && ($event.keyCode === ENTER || $event.keyCode === SPACE)) {\n            this.emitCloseButtonClick();\n        }\n        $event.preventDefault();\n    }\n\n    /** @docs-private */\n    emitClosedEvent() {\n        this.closed.emit();\n    }\n\n    /** @docs-private */\n    get classList(): string {\n        if (this.direction) {\n            // Returning an array here caused an error that the classes were not set\n            // after a prod build. Couldn't reproduce it properly in an isolated way.\n            // As it doesn't make sense to return an array for a single value anyway\n            // changed it to a string and that seems to work.\n            return `nx-popover--${this.direction}`;\n        }\n        return '';\n    }\n\n    /** Prevent the popover from closing when the user clicks on the popover content. */\n    _onClick(event: Event) {\n        event.stopPropagation();\n    }\n}\n","<ng-template>\n    <div [ngClass]=\"classList\" class=\"nx-popover\" role=\"tooltip\" aria-hidden=\"false\" (click)=\"_onClick($event)\">\n        <div class=\"nx-popover__content\" tabindex=\"0\">\n            <div class=\"nx-popover__arrow\" [ngStyle]=\"arrowStyle\"></div>\n            <span\n                [attr.aria-label]=\"_intl.closeIconLabel\"\n                tabindex=\"0\"\n                role=\"button\"\n                class=\"nx-popover__close-icon\"\n                (click)=\"emitCloseButtonClick()\"\n                (keyup)=\"_onCloseKeyup($event)\"\n                *ngIf=\"showCloseButton\"\n            >\n                <nx-icon aria-hidden=\"true\" name=\"close\"></nx-icon>\n            </span>\n\n            <span [id]=\"id\">\n                <ng-content></ng-content>\n                <ng-container [ngTemplateOutlet]=\"_lazyContent?._template ?? null\"></ng-container>\n            </span>\n        </div>\n    </div>\n</ng-template>\n","import { FocusMonitor, FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport {\n    ConnectionPositionPair,\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    OriginConnectionPosition,\n    Overlay,\n    OverlayConfig,\n    OverlayConnectionPosition,\n    OverlayRef,\n    PositionStrategy,\n    ScrollStrategy,\n    VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    ViewContainerRef,\n} from '@angular/core';\nimport { EventManager } from '@angular/platform-browser';\nimport { Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\n\nimport { NxPopoverComponent } from './popover.component';\n\nexport declare type PopoverVerticalDirection = 'top' | 'bottom';\nexport declare type PopoverHorizontalDirection = 'left' | 'right';\nexport declare type PopoverDirection = PopoverHorizontalDirection | PopoverVerticalDirection;\nexport declare type PopoverTriggerType = 'click' | 'hover' | 'manual';\nexport declare type PopoverTriggerScrollStrategy = 'close' | 'reposition';\n\nlet nextId = 0;\nconst BASE_OFFSET = 16;\n\n/** Injection token that determines the scroll handling while a popover is open. */\nexport const NX_POPOVER_SCROLL_STRATEGY = new InjectionToken<() => ScrollStrategy>('nx-popover-scroll-strategy');\n\n/** @docs-private */\nexport function NX_POPOVER_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay): () => ScrollStrategy {\n    return () => overlay.scrollStrategies.close();\n}\n\n/** @docs-private */\nexport const NX_POPOVER_SCROLL_STRATEGY_PROVIDER = {\n    provide: NX_POPOVER_SCROLL_STRATEGY,\n    useFactory: NX_POPOVER_SCROLL_STRATEGY_PROVIDER_FACTORY,\n    deps: [Overlay],\n};\n\n/**\n * Creates an error to be thrown if the user provided an invalid popover direction.\n * @docs-private\n */\nexport function getNxPopoverInvalidDirectionError(direction: string) {\n    return Error(`Popover direction \"${direction}\" is invalid.`);\n}\n\n@Directive({\n    selector: '[nxPopoverTriggerFor]',\n    exportAs: 'nxPopoverTrigger',\n    host: {\n        '(click)': 'handleClick()',\n        'aria-haspopup': 'true',\n        '[attr.aria-expanded]': 'isOpen',\n        '[attr.aria-describedby]': 'isOpen ? id : null',\n    },\n})\nexport class NxPopoverTriggerDirective implements AfterViewInit, OnDestroy, OnInit {\n    private overlayRef!: OverlayRef | null;\n    private portal!: TemplatePortal<any>;\n    private _overlayDestroyed = new Subject<void>();\n    private _show = false;\n    private _closeable: boolean | null = null;\n    private _positionStrategy!: PositionStrategy;\n    private _embeddedViewRef!: EmbeddedViewRef<any> | null;\n    private _modal = false;\n    /** The class that traps and manages focus within the popover. */\n    private _focusTrap!: FocusTrap;\n    /** Element that was focused before the Popover was opened. Save this to restore upon close. */\n    private _elementFocusedBeforePopoverWasOpened: HTMLElement | null = null;\n    private _manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private _possiblePopoverDirections: PopoverDirection[] = ['bottom', 'top', 'left', 'right'];\n    private _removeEventListener!: () => void;\n\n    closeOnLeftViewport = new IntersectionObserver(\n        entries => {\n            entries.forEach(entry => {\n                if (!entry.isIntersecting) {\n                    this._ngZone.run(() => this.overlayRef?.detach());\n                }\n                this.closeOnLeftViewport.disconnect();\n            });\n        },\n        { threshold: 0.2 },\n    );\n\n    /** @docs-private */\n    id = 'nx-popover-' + nextId++;\n\n    /** An event is emitted if the visibility status of the popover changes. */\n    @Output('nxPopoverShowChange')\n    changeShow: EventEmitter<boolean> = new EventEmitter();\n\n    /** Whether to show or hide the popover. */\n    @Input('nxPopoverShow')\n    set show(value: BooleanInput) {\n        value = coerceBooleanProperty(value);\n        if (this._show !== value) {\n            this._show = value;\n            if (this._show) {\n                this.openPopover();\n            } else {\n                this.closePopover();\n            }\n        }\n    }\n\n    get show() {\n        return this._show;\n    }\n\n    /** Whether to show a close button. By default a close icon is only shown for trigger type click. */\n    @Input('nxPopoverCloseable')\n    set closeable(value: BooleanInput) {\n        this._closeable = coerceBooleanProperty(value);\n\n        if (this.popover) {\n            this.popover.showCloseButton = this.isCloseable();\n        }\n    }\n    get closeable(): boolean {\n        return this._closeable as boolean;\n    }\n\n    /** Whether the popover should be closed on click outside of the popover in the trigger modes 'manual' and 'click'. */\n    @Input()\n    set closeOnClickOutside(value: BooleanInput) {\n        this._closeOnClickOutside = coerceBooleanProperty(value);\n    }\n    get closeOnClickOutside(): boolean {\n        return this._closeOnClickOutside;\n    }\n\n    private _closeOnClickOutside = true;\n\n    /** Links the trigger with the popover to open. */\n    @Input('nxPopoverTriggerFor')\n    popover!: NxPopoverComponent;\n\n    /** Sets the desired direction to open the popover. E.g., right, left, bottom, top */\n    @Input('nxPopoverDirection')\n    direction: PopoverDirection = 'right';\n\n    /** Whether the popover will be opened automatically. */\n    @Input('nxPopoverInitialVisible')\n    popoverInitialVisible = false;\n\n    /** An event is emitted when the visibility of the popopver changes. */\n    @Input('nxPopoverVisibleChange')\n    visibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    /** Whether the popover opens in modal state. */\n    @Input('nxPopoverModal')\n    set modal(value: BooleanInput) {\n        this._modal = coerceBooleanProperty(value);\n    }\n    get modal(): boolean {\n        return this._modal;\n    }\n\n    // If nxPopoverTrigger equals to 'hover' the popover opens on mouseenter and closes on mouseout.\n    // If nxPopoverTrigger equals to 'click' the popover opens on click and closes on a click of the close icon or pressing ESC key.\n    // If nxPopoverTrigger equals to 'manual' the popover opens only when programatically requested.\n    /** Sets the way to trigger the popover. Options are hover, click, manual */\n    @Input('nxPopoverTrigger')\n    trigger: PopoverTriggerType = 'click';\n\n    /** Sets the scroll strategy. 'close' closes the popover on scroll while 'reposition' scrolls the popover with the origin. */\n    @Input('nxPopoverScrollStrategy')\n    set scrollStrategy(value: PopoverTriggerScrollStrategy | null | undefined) {\n        if (this.#scrollStrategy !== value) {\n            this.#scrollStrategy = value;\n            this._scrollStrategyFactory = value ? this.getScrollStrategyFactory(value) : this._defaultScrollStrategyFactory;\n            this._cdr.markForCheck();\n        }\n    }\n    get scrollStrategy(): PopoverTriggerScrollStrategy | null | undefined {\n        return this.#scrollStrategy;\n    }\n    #scrollStrategy?: PopoverTriggerScrollStrategy | null;\n\n    private readonly _destroyed = new Subject<void>();\n\n    /** Strategy factory that will be used to handle scrolling while the popover panel is open. */\n    private _scrollStrategyFactory = this._defaultScrollStrategyFactory;\n\n    constructor(\n        private overlay: Overlay,\n        private elementRef: ElementRef,\n        private viewContainerRef: ViewContainerRef,\n        private eventManager: EventManager,\n        private _focusTrapFactory: FocusTrapFactory,\n        private _focusMonitor: FocusMonitor,\n        private _ngZone: NgZone,\n        private _platform: Platform,\n        @Optional() private _dir: Directionality | null,\n        @Inject(NX_POPOVER_SCROLL_STRATEGY) private _defaultScrollStrategyFactory: () => ScrollStrategy,\n        private _cdr: ChangeDetectorRef,\n    ) {\n        const element: HTMLElement = elementRef.nativeElement;\n        if (!this._platform.IOS && !this._platform.ANDROID) {\n            this._manualListeners\n                .set('mouseenter', () => {\n                    if (this.trigger === 'hover') {\n                        this.show = true;\n                    }\n                })\n                .set('mouseleave', () => {\n                    if (this.trigger === 'hover') {\n                        this.show = false;\n                    }\n                })\n                .set('keydown', (event: any) => {\n                    switch (event.keyCode) {\n                        case SPACE:\n                        case ENTER:\n                            this.handleClick();\n                            break;\n                        default:\n                    }\n                });\n        } else {\n            this._manualListeners.set('touchstart', () => {\n                if (this.trigger === 'hover') {\n                    this.show = true;\n                }\n            });\n        }\n\n        this._manualListeners.forEach((listener, event) => element.addEventListener(event, listener));\n\n        this._focusMonitor\n            .monitor(element)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n                if (origin === 'keyboard' && this.trigger === 'hover') {\n                    this._ngZone.run(() => (this.show = true));\n                }\n            });\n\n        this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(this._dirChangeHandler.bind(this));\n    }\n\n    ngOnInit() {\n        this.popover.showCloseButton = this.isCloseable();\n    }\n\n    ngAfterViewInit(): void {\n        this.popover.id = this.id;\n\n        this._removeEventListener = this.eventManager.addGlobalEventListener('window', 'keyup.esc', () => {\n            if (this.isOpen) {\n                this.show = false;\n            }\n        }) as () => void;\n\n        this.popover.closeButtonClick.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this.show = false;\n        });\n\n        if (this.popoverInitialVisible || this._show) {\n            this.show = true;\n        }\n    }\n\n    ngOnDestroy(): void {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.show = false;\n        this._removeEventListener();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        // Clean up the event listeners set in the constructor\n        this._manualListeners.forEach((listener, event) => {\n            this.elementRef.nativeElement.removeEventListener(event, listener);\n        });\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        this._manualListeners.clear();\n        this._overlayDestroyed.next();\n        this._overlayDestroyed.complete();\n    }\n\n    /** @docs-private */\n    get isOpen() {\n        return this.overlayRef && this.createOverlay().hasAttached();\n    }\n\n    /** @docs-private */\n    isCloseable(): boolean {\n        return (this.trigger === 'click' && this._closeable === null) || !!this._closeable;\n    }\n\n    /** Update the popover with the given position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n\n    /** @docs-private */\n    handleClick() {\n        if (this.trigger === 'click') {\n            this.show = !this.isOpen;\n        } else if (this.trigger === 'hover') {\n            this.show = true;\n        }\n    }\n\n    /** Open the popover instance. */\n    open(): void {\n        this.show = true;\n    }\n\n    /** Close the popover instance. */\n    close(): void {\n        this.show = false;\n    }\n\n    /** Toggle the popover instance. */\n    toggle(): void {\n        this.show = !this.show;\n    }\n\n    private openPopover(): void {\n        if (!this.createOverlay().hasAttached()) {\n            this._embeddedViewRef = this.createOverlay().attach(this.portal);\n\n            const element = this.getPopoverContainer() as HTMLElement;\n            this._focusTrap = this._focusTrapFactory.create(element);\n            this._elementFocusedBeforePopoverWasOpened = this.elementRef.nativeElement;\n\n            this._focusMonitor.monitor(element.querySelector('.nx-popover__content') as HTMLElement);\n            const closeIcon: HTMLElement = element.querySelector('.nx-popover__close-icon') as HTMLElement;\n            if (closeIcon) {\n                this._focusMonitor.monitor(closeIcon);\n            }\n\n            this._autoFocusFirstTabbableElement(element);\n\n            // attach a close click listener only if it makes sense (ignore it on hover e.g.)\n            if (this.closeOnClickOutside) {\n                this.waitForClose();\n            }\n        }\n    }\n\n    /**\n     * Autofocus the first tabbable element inside of the popover, if there is not a tabbable element,\n     * focus the popover instead.\n     */\n    private _autoFocusFirstTabbableElement(element: HTMLElement) {\n        this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n            // If we didn't find any focusable elements inside the popover, focus the\n            // container so the user can't tab into other elements behind it.\n            if (!hasMovedFocus) {\n                element.focus();\n            }\n        });\n    }\n\n    // detaches the overlay\n    // we are listening to the detachments observable which will then emit the nxClosed event\n    // on the popover component\n    private closePopover(): void {\n        if (this.overlayRef!.hasAttached()) {\n            const element = this.getPopoverContainer();\n            this._focusMonitor.stopMonitoring(element!.querySelector('.nx-popover__content') as HTMLElement);\n            this._focusMonitor.stopMonitoring(element!.querySelector('.nx-popover__close-icon') as HTMLElement);\n\n            this._returnFocusAfterPopover();\n            this.overlayRef!.detach();\n            this._embeddedViewRef = null;\n            this._focusTrap.destroy();\n        }\n    }\n\n    private getScrollStrategyFactory(scrollStrategy: PopoverTriggerScrollStrategy): () => ScrollStrategy {\n        switch (scrollStrategy) {\n            case 'reposition':\n                return this.overlay.scrollStrategies.reposition;\n            default:\n                return this.overlay.scrollStrategies.close;\n        }\n    }\n\n    private createOverlay(): OverlayRef {\n        if (!this.overlayRef) {\n            this.portal = new TemplatePortal(this.popover.templateRef, this.viewContainerRef);\n            const overlayState = new OverlayConfig();\n            overlayState.positionStrategy = this.getPosition();\n            this._positionStrategy = overlayState.positionStrategy;\n\n            overlayState.scrollStrategy = this._scrollStrategyFactory();\n\n            overlayState.scrollStrategy.enable();\n            overlayState.direction = this._dir?.value || 'ltr';\n\n            if (this._modal) {\n                overlayState.hasBackdrop = true;\n            }\n\n            this.overlayRef = this.overlay.create(overlayState);\n            this.subscribeToPositions(overlayState.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._subscribeToAttach();\n            this._subscribeToDetach();\n            if (this._modal && this._closeOnClickOutside) {\n                this._subscribeToBackdropClick();\n            }\n        }\n        return this.overlayRef;\n    }\n\n    private subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        position.positionChanges.pipe(takeUntil(this._overlayDestroyed)).subscribe(change => {\n            const pair = change.connectionPair;\n            this.positionOverlay(pair);\n            this.positionArrow(pair);\n\n            this.closeOnLeftViewport.observe(this.elementRef.nativeElement);\n\n            // These position changes arrive too late,\n            // We have to trigger the change detection manually\n            // as it's detached from any render hierarchy\n            // and only updated by the overlay when attached.\n            if (this._embeddedViewRef && !this._embeddedViewRef.destroyed) {\n                this._embeddedViewRef.detectChanges();\n            }\n        });\n    }\n\n    // for modal popovers close the popover on backdrop clicks\n    private _subscribeToBackdropClick() {\n        this.overlayRef!.backdropClick()\n            .pipe(takeUntil(this._overlayDestroyed))\n            .subscribe(event => {\n                this.show = false;\n            });\n    }\n\n    // Emit the nxClosed and the show status change event on the popover component when the overlay detaches\n    private _subscribeToDetach() {\n        this.overlayRef!.detachments()\n            .pipe(takeUntil(this._overlayDestroyed))\n            .subscribe(data => {\n                // This is an exception: when the popover is closed by a scrolling event,\n                // then only the detached method is called but the show state variable remains unchanged.\n                if (this.show) {\n                    this.show = false;\n                }\n                this.changeShow.emit(this._show);\n                this.popover.emitClosedEvent();\n            });\n    }\n\n    private _subscribeToAttach() {\n        this.overlayRef!.attachments()\n            .pipe(takeUntil(this._overlayDestroyed))\n            .subscribe(data => {\n                this.changeShow.emit(this._show);\n            });\n    }\n\n    // subscribe to document clicks when trigger='click' to close the popover on clicks on the background\n    private waitForClose() {\n        return this.overlayRef!.outsidePointerEvents()\n            .pipe(\n                map(event => event.target),\n                filter(target => !this.elementRef.nativeElement.contains(target)),\n                takeUntil(this.popover.closed),\n            )\n            .subscribe(() => {\n                this.show = false;\n            });\n    }\n\n    private positionOverlay(pair: ConnectionPositionPair) {\n        if (pair.originX === 'end' && pair.overlayX === 'start') {\n            this.popover.direction = this.isRtl ? 'left' : 'right';\n        } else if (pair.originY === 'bottom' && pair.overlayY === 'top') {\n            this.popover.direction = 'bottom';\n        } else if (pair.originX === 'start' && pair.overlayX === 'end') {\n            this.popover.direction = this.isRtl ? 'right' : 'left';\n        } else if (pair.originY === 'top' && pair.overlayY === 'bottom') {\n            this.popover.direction = 'top';\n        }\n    }\n\n    private positionArrow(pair: ConnectionPositionPair) {\n        const parentElementPositionX = this.elementRef.nativeElement.getBoundingClientRect().left;\n        const parentElementWidth = this.elementRef.nativeElement.getBoundingClientRect().width / 2;\n        const parentElementLeftOffset = this.overlayRef!.overlayElement.parentElement!.offsetLeft;\n        const overlayElementLeftOffset = this.overlayRef!.overlayElement.offsetLeft;\n\n        // calculation for x position of the parent element. In this case, overlay left offset is the one thing to consider.\n        const targetPosition = parentElementPositionX + parentElementWidth - (parentElementLeftOffset + overlayElementLeftOffset);\n        if (pair.originX === pair.overlayX) {\n            const direction = 'left';\n            const arrowStyle = { left: '0' };\n\n            arrowStyle[direction] = targetPosition + 'px';\n            this.popover.arrowStyle = arrowStyle;\n        }\n        if ((pair.originY === 'bottom' || pair.originY === 'top') && pair.overlayX === 'center') {\n            this.popover.arrowStyle = { left: targetPosition + 'px' };\n        }\n\n        if ((pair.originX === 'end' || pair.originX === 'start') && pair.overlayY === 'center') {\n            this.popover.arrowStyle = { top: '50%' };\n        }\n    }\n\n    private getPosition(): FlexibleConnectedPositionStrategy {\n        const origin = this._getOrigin(this.direction);\n        const overlay = this._getOverlayPosition(this.direction);\n        const offset = this._getOffset(this.direction);\n        const fallbacks = this._getFallbackPositions(this.direction);\n        return this.overlay\n            .position()\n            .flexibleConnectedTo(this.elementRef)\n            .withPositions([\n                {\n                    ...origin,\n                    ...overlay,\n                    ...offset,\n                },\n                ...fallbacks,\n            ])\n            .withFlexibleDimensions(false);\n    }\n\n    /** Returns the focus to the element focused before the Popover was open. */\n    private _returnFocusAfterPopover() {\n        const toFocus = this._elementFocusedBeforePopoverWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (toFocus && typeof toFocus.focus === 'function') {\n            toFocus.focus();\n        }\n    }\n\n    /** Returns the main popover container of the injected content. */\n    private getPopoverContainer(): HTMLElement | null {\n        return this.overlayRef!.overlayElement.querySelector('.nx-popover');\n    }\n\n    /**\n     * Returns the origin position based on the user's direction preference.\n     */\n    _getOrigin(direction: PopoverDirection): OriginConnectionPosition {\n        switch (direction) {\n            case 'top':\n            case 'bottom': {\n                return {\n                    originX: 'center',\n                    originY: direction,\n                };\n            }\n            case 'left': {\n                return {\n                    originX: this.isRtl ? 'end' : 'start',\n                    originY: 'center',\n                };\n            }\n            case 'right': {\n                return {\n                    originX: this.isRtl ? 'start' : 'end',\n                    originY: 'center',\n                };\n            }\n            default: {\n                throw getNxPopoverInvalidDirectionError(direction);\n            }\n        }\n    }\n\n    /** Returns the overlay position based on the user's direction preference */\n    _getOverlayPosition(direction: PopoverDirection): OverlayConnectionPosition {\n        switch (direction) {\n            case 'top':\n            case 'bottom': {\n                return {\n                    overlayX: 'center',\n                    overlayY: this._getInversePosition(direction) as VerticalConnectionPos,\n                };\n            }\n            case 'left': {\n                return {\n                    overlayX: this.isRtl ? 'start' : 'end',\n                    overlayY: 'center',\n                };\n            }\n            case 'right': {\n                return {\n                    overlayX: this.isRtl ? 'end' : 'start',\n                    overlayY: 'center',\n                };\n            }\n            default: {\n                throw getNxPopoverInvalidDirectionError(direction);\n            }\n        }\n    }\n\n    /** Returns the overlay offset required by the user's direction preference */\n    private _getOffset(direction: PopoverDirection) {\n        switch (direction) {\n            case 'top': {\n                return {\n                    offsetY: BASE_OFFSET * -1,\n                };\n            }\n            case 'bottom': {\n                return {\n                    offsetY: BASE_OFFSET,\n                };\n            }\n            case 'left': {\n                return {\n                    offsetX: BASE_OFFSET * -1,\n                };\n            }\n            case 'right': {\n                return {\n                    offsetX: BASE_OFFSET,\n                };\n            }\n            default: {\n                throw getNxPopoverInvalidDirectionError(direction);\n            }\n        }\n    }\n\n    /** Returns the opposite direction, using aquila popover direction naming: top, right, bottom, left */\n    private _getInversePopoverDirection(direction: PopoverDirection): PopoverDirection {\n        const popoverDirectionPairs = {\n            top: 'bottom',\n            right: 'left',\n            bottom: 'top',\n            left: 'right',\n        };\n        return popoverDirectionPairs[direction] as PopoverDirection;\n    }\n\n    /** Returns the opposite position, using angular position naming: top, bottom, start, end, center */\n    private _getInversePosition(position: string): VerticalConnectionPos | HorizontalConnectionPos {\n        const positionPairs: { [k: string]: VerticalConnectionPos | HorizontalConnectionPos } = {\n            top: 'bottom',\n            bottom: 'top',\n            start: 'end',\n            end: 'start',\n            center: 'center',\n        };\n        return positionPairs[position];\n    }\n\n    /** Returns an array of fallback positions for popover, following the algoritm:\n     * 1) Slightly alternate preferred position if applicable. I.e. for 'top' try 'top-start' and 'top-end' positioning.\n     * 2) Try the opposite position, i.e. for 'top' try 'bottom'.\n     * 3) Slightly alternate opposite position, i.e. 'bottom-start', 'bottom-end'\n     * 4) All remaining positions from positions list\n     */\n    private _getFallbackPositions(\n        direction: PopoverDirection,\n        possibleDirections: PopoverDirection[] = this._possiblePopoverDirections,\n    ): ConnectionPositionPair[] {\n        if (!direction) {\n            return [];\n        }\n        const remainigDirections = possibleDirections.filter(possibleDirection => possibleDirection !== direction);\n        let fallbackPositions: ConnectionPositionPair[] = [];\n        switch (direction) {\n            case 'top':\n            case 'bottom': {\n                fallbackPositions = this._getVerticalFallbackPositionPairs(direction);\n                break;\n            }\n            case 'left':\n            case 'right': {\n                fallbackPositions = this._getHorizontalFallbackPositionPairs(direction);\n                break;\n            }\n        }\n\n        const inverseDirection = this._getInversePopoverDirection(direction);\n        const nextFallbackPosition = remainigDirections.includes(inverseDirection) ? inverseDirection : possibleDirections[0];\n        return [...fallbackPositions, ...this._getFallbackPositions(nextFallbackPosition, remainigDirections)];\n    }\n\n    /** Calculates fallbacks for vertical popover positioning */\n    private _getVerticalFallbackPositionPairs(direction: PopoverVerticalDirection): ConnectionPositionPair[] {\n        const isSelectedDirection = direction === this.direction;\n        const verticalFallbackPositionPairs: ConnectionPositionPair[] = [];\n        const basePositionPair = {\n            ...this._getOrigin(direction),\n            ...this._getOverlayPosition(direction),\n            ...this._getOffset(direction),\n        };\n\n        if (!isSelectedDirection) {\n            // HINT: selected direction matches basePosition, so we don't need to repeat it in fallback\n            verticalFallbackPositionPairs.push(basePositionPair);\n        }\n        verticalFallbackPositionPairs.push(\n            {\n                ...basePositionPair,\n                originX: 'start',\n                overlayX: 'start',\n            },\n            {\n                ...basePositionPair,\n                originX: 'end',\n                overlayX: 'end',\n            },\n        );\n        return verticalFallbackPositionPairs;\n    }\n\n    /** Calculates fallbacks for horizontal popover positioning */\n    private _getHorizontalFallbackPositionPairs(direction: PopoverHorizontalDirection): ConnectionPositionPair[] {\n        const offset = this._getOffset(direction);\n\n        return [\n            {\n                ...this._getOrigin(direction),\n                ...this._getOverlayPosition(direction),\n                ...offset,\n            },\n        ];\n    }\n\n    private _dirChangeHandler() {\n        if (this.overlayRef) {\n            this.closePopover();\n            this.overlayRef.dispose();\n            this.overlayRef = null;\n            this._overlayDestroyed.next();\n        }\n    }\n\n    get isRtl(): boolean {\n        return this._dir?.value === 'rtl';\n    }\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxIconModule } from '@aposin/ng-aquila/icon';\n\nimport { NxPopoverComponent } from './popover.component';\nimport { NxPopoverContentDirective } from './popover-content';\nimport { NxPopoverIntl } from './popover-intl';\nimport { NX_POPOVER_SCROLL_STRATEGY_PROVIDER, NxPopoverTriggerDirective } from './popover-trigger.directive';\n\n@NgModule({\n    imports: [CommonModule, OverlayModule, NxIconModule],\n    declarations: [NxPopoverTriggerDirective, NxPopoverComponent, NxPopoverContentDirective],\n    exports: [NxPopoverTriggerDirective, NxPopoverComponent, NxPopoverContentDirective],\n    providers: [NxPopoverIntl, NX_POPOVER_SCROLL_STRATEGY_PROVIDER],\n})\nexport class NxPopoverModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.NxPopoverIntl"],"mappings":"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"}