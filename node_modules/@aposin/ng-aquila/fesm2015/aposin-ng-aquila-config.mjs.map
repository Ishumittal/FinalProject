{"version":3,"file":"aposin-ng-aquila-config.mjs","sources":["../../../projects/ng-aquila/src/config/configuration-service.ts","../../../projects/ng-aquila/src/config/configuration.module.ts","../../../projects/ng-aquila/src/config/nx-direct.module.ts","../../../projects/ng-aquila/src/config/nx-expert.module.ts","../../../projects/ng-aquila/src/config/nx-scroll-strategy.helpers.ts","../../../projects/ng-aquila/src/config/nx-scroll-strategy.module.ts","../../../projects/ng-aquila/src/config/aposin-ng-aquila-config.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ErrorDefaultOptions, LabelDefaultOptions } from '@aposin/ng-aquila/base';\nimport { SelectableCardDefaultOptions } from '@aposin/ng-aquila/card';\nimport { CircleToggleGroupDefaultOptions } from '@aposin/ng-aquila/circle-toggle';\nimport { DataDisplayDefaultOptions } from '@aposin/ng-aquila/data-display';\nimport { DatepickerDefaultOptions } from '@aposin/ng-aquila/datefield';\nimport { FormfieldDefaultOptions } from '@aposin/ng-aquila/formfield';\nimport { SmallStageDefaultOptions } from '@aposin/ng-aquila/small-stage';\nimport { TabGroupDefaultOptions, TabNavBarDefaultOptions } from '@aposin/ng-aquila/tabs';\nimport { Subject } from 'rxjs';\n\nexport const datepickerOptions: DatepickerDefaultOptions = { changes: new Subject<void>() };\nexport const errorOptions: ErrorDefaultOptions = { changes: new Subject<void>() };\nexport const formfieldOptions: FormfieldDefaultOptions = {};\nexport const labelOptions: LabelDefaultOptions = {};\nexport const tabGroupOptions: TabGroupDefaultOptions = {};\nexport const tabNavBarOptions: TabNavBarDefaultOptions = {};\nexport const selectableCardOptions: SelectableCardDefaultOptions = {};\nexport const smallStageOptions: SmallStageDefaultOptions = {};\nexport const circleToggleGroupOptions: CircleToggleGroupDefaultOptions = {};\nexport const dataDisplayOptions: DataDisplayDefaultOptions = {};\n\n/**\n * Service for switching values of the defaultOptions injection tokens at runtime.\n * WARNING: This service should not be used in actual applications!\n * It is only meant to showcase different options for documentation purposes.\n */\n@Injectable({ providedIn: 'root' })\nexport class NxConfigurationService {\n    clearOptions() {\n        delete datepickerOptions.toggleIconTabindex;\n        datepickerOptions.changes!.next();\n        delete errorOptions.appearance;\n        errorOptions.changes!.next();\n        delete formfieldOptions.appearance;\n        delete formfieldOptions.nxFloatLabel;\n        delete labelOptions.size;\n        delete tabGroupOptions.appearance;\n        delete tabNavBarOptions.appearance;\n        delete selectableCardOptions.appearance;\n        delete smallStageOptions.appearance;\n        delete circleToggleGroupOptions.appearance;\n        delete dataDisplayOptions.size;\n    }\n\n    switchToExpert() {\n        datepickerOptions.toggleIconTabindex = -1;\n        datepickerOptions.changes!.next();\n        errorOptions.appearance = 'text';\n        errorOptions.changes!.next();\n        formfieldOptions.appearance = 'outline';\n        formfieldOptions.nxFloatLabel = 'always';\n        labelOptions.size = 'small';\n        tabGroupOptions.appearance = 'expert';\n        tabNavBarOptions.appearance = 'expert';\n        selectableCardOptions.appearance = 'expert';\n        smallStageOptions.appearance = 'expert';\n        circleToggleGroupOptions.appearance = 'expert';\n        dataDisplayOptions.size = 'medium';\n    }\n\n    switchToRetail() {\n        datepickerOptions.toggleIconTabindex = 0;\n        datepickerOptions.changes!.next();\n        errorOptions.appearance = 'message';\n        errorOptions.changes!.next();\n        formfieldOptions.appearance = 'auto';\n        formfieldOptions.nxFloatLabel = 'auto';\n        labelOptions.size = 'large';\n        tabGroupOptions.appearance = 'default';\n        tabNavBarOptions.appearance = 'default';\n        selectableCardOptions.appearance = 'default';\n        smallStageOptions.appearance = 'default';\n        circleToggleGroupOptions.appearance = 'default';\n        dataDisplayOptions.size = 'large';\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { ERROR_DEFAULT_OPTIONS, LABEL_DEFAULT_OPTIONS } from '@aposin/ng-aquila/base';\nimport { SELECTABLE_CARD_DEFAULT_OPTIONS } from '@aposin/ng-aquila/card';\nimport { CIRCLE_TOGGLE_GROUP_DEFAULT_OPTIONS } from '@aposin/ng-aquila/circle-toggle';\nimport { DATEPICKER_DEFAULT_OPTIONS } from '@aposin/ng-aquila/datefield';\nimport { FORMFIELD_DEFAULT_OPTIONS } from '@aposin/ng-aquila/formfield';\nimport { SMALL_STAGE_DEFAULT_OPTIONS } from '@aposin/ng-aquila/small-stage';\nimport { TAB_GROUP_DEFAULT_OPTIONS, TAB_NAV_BAR_DEFAULT_OPTIONS } from '@aposin/ng-aquila/tabs';\n\nimport {\n    circleToggleGroupOptions,\n    datepickerOptions,\n    errorOptions,\n    formfieldOptions,\n    labelOptions,\n    selectableCardOptions,\n    smallStageOptions,\n    tabGroupOptions,\n    tabNavBarOptions,\n} from './configuration-service';\n\n@NgModule({\n    providers: [\n        { provide: FORMFIELD_DEFAULT_OPTIONS, useValue: formfieldOptions },\n        { provide: LABEL_DEFAULT_OPTIONS, useValue: labelOptions },\n        { provide: DATEPICKER_DEFAULT_OPTIONS, useValue: datepickerOptions },\n        { provide: ERROR_DEFAULT_OPTIONS, useValue: errorOptions },\n        { provide: TAB_GROUP_DEFAULT_OPTIONS, useValue: tabGroupOptions },\n        { provide: TAB_NAV_BAR_DEFAULT_OPTIONS, useValue: tabNavBarOptions },\n        { provide: SELECTABLE_CARD_DEFAULT_OPTIONS, useValue: selectableCardOptions },\n        { provide: SMALL_STAGE_DEFAULT_OPTIONS, useValue: smallStageOptions },\n        { provide: CIRCLE_TOGGLE_GROUP_DEFAULT_OPTIONS, useValue: circleToggleGroupOptions },\n    ],\n})\nexport class NxConfigurationModule {}\n","import { NgModule } from '@angular/core';\nimport { FORMFIELD_DEFAULT_OPTIONS, FormfieldDefaultOptions } from '@aposin/ng-aquila/formfield';\n\nconst formfieldDirectOptions: FormfieldDefaultOptions = {\n    nxFloatLabel: 'always',\n};\n\n@NgModule({\n    providers: [{ provide: FORMFIELD_DEFAULT_OPTIONS, useValue: formfieldDirectOptions }],\n})\nexport class NxDirectModule {}\n","import { NgModule } from '@angular/core';\nimport { ERROR_DEFAULT_OPTIONS, ErrorDefaultOptions, LABEL_DEFAULT_OPTIONS, LabelDefaultOptions } from '@aposin/ng-aquila/base';\nimport { SELECTABLE_CARD_DEFAULT_OPTIONS, SelectableCardDefaultOptions } from '@aposin/ng-aquila/card';\nimport { CIRCLE_TOGGLE_GROUP_DEFAULT_OPTIONS, CircleToggleGroupDefaultOptions } from '@aposin/ng-aquila/circle-toggle';\nimport { COMPARISON_TABLE_DEFAULT_OPTIONS, ComparisonTableDefaultOptions } from '@aposin/ng-aquila/comparison-table';\nimport { DATA_DISPLAY_DEFAULT_OPTIONS, DataDisplayDefaultOptions } from '@aposin/ng-aquila/data-display';\nimport { DATEPICKER_DEFAULT_OPTIONS, DatepickerDefaultOptions } from '@aposin/ng-aquila/datefield';\nimport { FORMFIELD_DEFAULT_OPTIONS, FormfieldDefaultOptions } from '@aposin/ng-aquila/formfield';\nimport { SMALL_STAGE_DEFAULT_OPTIONS, SmallStageDefaultOptions } from '@aposin/ng-aquila/small-stage';\nimport { TAB_GROUP_DEFAULT_OPTIONS, TAB_NAV_BAR_DEFAULT_OPTIONS, TabGroupDefaultOptions, TabNavBarDefaultOptions } from '@aposin/ng-aquila/tabs';\n\n// expert presets\nconst comparisonTableExpertOptions: ComparisonTableDefaultOptions = { useFullRowForExpandableArea: true };\nconst formfieldExpertOptions: FormfieldDefaultOptions = {\n    appearance: 'outline',\n    nxFloatLabel: 'always',\n};\nconst errorExpertOptions: ErrorDefaultOptions = { appearance: 'text' };\nconst labelExpertOptions: LabelDefaultOptions = { size: 'small' };\nconst datepickerExpertOptions: DatepickerDefaultOptions = { toggleIconTabindex: -1 };\nconst tabGroupOptions: TabGroupDefaultOptions = { appearance: 'expert' };\nconst tabNavBarOptions: TabNavBarDefaultOptions = { appearance: 'expert' };\nconst selectableCardOptions: SelectableCardDefaultOptions = { appearance: 'expert' };\nconst smallStageOptions: SmallStageDefaultOptions = { appearance: 'expert' };\nconst circleToggleGroupOptions: CircleToggleGroupDefaultOptions = { appearance: 'expert' };\nconst dataDisplayOptions: DataDisplayDefaultOptions = { size: 'medium' };\n\n@NgModule({\n    providers: [\n        { provide: COMPARISON_TABLE_DEFAULT_OPTIONS, useValue: comparisonTableExpertOptions },\n        { provide: FORMFIELD_DEFAULT_OPTIONS, useValue: formfieldExpertOptions },\n        { provide: LABEL_DEFAULT_OPTIONS, useValue: labelExpertOptions },\n        { provide: DATEPICKER_DEFAULT_OPTIONS, useValue: datepickerExpertOptions },\n        { provide: ERROR_DEFAULT_OPTIONS, useValue: errorExpertOptions },\n        { provide: TAB_GROUP_DEFAULT_OPTIONS, useValue: tabGroupOptions },\n        { provide: TAB_NAV_BAR_DEFAULT_OPTIONS, useValue: tabNavBarOptions },\n        { provide: SELECTABLE_CARD_DEFAULT_OPTIONS, useValue: selectableCardOptions },\n        { provide: SMALL_STAGE_DEFAULT_OPTIONS, useValue: smallStageOptions },\n        { provide: CIRCLE_TOGGLE_GROUP_DEFAULT_OPTIONS, useValue: circleToggleGroupOptions },\n        { provide: DATA_DISPLAY_DEFAULT_OPTIONS, useValue: dataDisplayOptions },\n    ],\n})\n\n// should not be a singleton since different tokens can be used in separate modules\nexport class NxExpertModule {}\n","import { Overlay, ScrollStrategy } from '@angular/cdk/overlay';\nimport { FactoryProvider, InjectionToken } from '@angular/core';\nimport { NX_AUTOCOMPLETE_SCROLL_STRATEGY } from '@aposin/ng-aquila/autocomplete';\nimport { NX_CONTEXT_MENU_SCROLL_STRATEGY } from '@aposin/ng-aquila/context-menu';\nimport { NX_DATEPICKER_SCROLL_STRATEGY } from '@aposin/ng-aquila/datefield';\nimport { NX_DROPDOWN_SCROLL_STRATEGY } from '@aposin/ng-aquila/dropdown';\nimport { NX_MODAL_SCROLL_STRATEGY } from '@aposin/ng-aquila/modal';\nimport { NX_NOTIFICATION_PANEL_SCROLL_STRATEGY } from '@aposin/ng-aquila/notification-panel';\nimport { NX_OVERLAY_SCROLL_STRATEGY } from '@aposin/ng-aquila/overlay';\nimport { NX_POPOVER_SCROLL_STRATEGY } from '@aposin/ng-aquila/popover';\nimport { NX_TOOLTIP_SCROLL_STRATEGY } from '@aposin/ng-aquila/tooltip';\n\nimport { NxScrollStrategy, NxScrollStrategyDefaultConfig, NxScrollStrategyFactoryConfig, NxScrollStrategyOptions } from './nx-scroll-strategy.models';\n\n/** Return an appropriate scroll strategy factory from the `Overlay` service. */\nexport function getScrollStrategyFactory(preset: NxScrollStrategy, overlay: Overlay, options?: NxScrollStrategyOptions): () => ScrollStrategy {\n    switch (preset) {\n        case 'reposition':\n            return () => overlay.scrollStrategies.reposition({ autoClose: options?.autoClose, scrollThrottle: options?.scrollThrottle });\n        case 'close':\n            return () => overlay.scrollStrategies.close({ threshold: options?.threshold });\n        case 'block':\n            return overlay.scrollStrategies.block;\n        case 'noop':\n            return overlay.scrollStrategies.noop;\n        default:\n            return overlay.scrollStrategies.reposition;\n    }\n}\n\n/** Return an array of scroll strategy providers based on the provided default config. */\nexport function getScrollStrategyDefaultProviders(config: NxScrollStrategyDefaultConfig): FactoryProvider[] {\n    return [\n        { provide: NX_AUTOCOMPLETE_SCROLL_STRATEGY, useFactory: getFactoryFnByDefaultConfig(config, 'autocomplete'), deps: [Overlay] },\n        { provide: NX_CONTEXT_MENU_SCROLL_STRATEGY, useFactory: getFactoryFnByDefaultConfig(config, 'contextMenu'), deps: [Overlay] },\n        { provide: NX_DATEPICKER_SCROLL_STRATEGY, useFactory: getFactoryFnByDefaultConfig(config, 'datepicker'), deps: [Overlay] },\n        { provide: NX_DROPDOWN_SCROLL_STRATEGY, useFactory: getFactoryFnByDefaultConfig(config, 'dropdown'), deps: [Overlay] },\n        { provide: NX_NOTIFICATION_PANEL_SCROLL_STRATEGY, useFactory: getFactoryFnByDefaultConfig(config, 'notificationPanel'), deps: [Overlay] },\n        ...getExtraProvidersByDefaultConfig(config),\n    ];\n}\n\nfunction getFactoryFnByDefaultConfig(\n    config: NxScrollStrategyDefaultConfig,\n    componentName: keyof (NxScrollStrategyDefaultConfig['overrides'] & Record<never, never>),\n): (overlay: Overlay) => () => ScrollStrategy {\n    const componentConfig = config.overrides?.[componentName] ?? config;\n    return (overlay: Overlay) => getScrollStrategyFactory(componentConfig.scrollStrategy, overlay, componentConfig.scrollStrategyOptions);\n}\n\nfunction getExtraProvidersByDefaultConfig(config: NxScrollStrategyDefaultConfig): FactoryProvider[] {\n    return Object.entries(config.extraComponents ?? {}).map(([componentName, { scrollStrategy, scrollStrategyOptions }]) => ({\n        provide: getInjectionToken(componentName),\n        useFactory: (overlay: Overlay) => getScrollStrategyFactory(scrollStrategy, overlay, scrollStrategyOptions),\n        deps: [Overlay],\n    }));\n}\n\n/** Return an array of scroll strategy providers based on the provided factory config. */\nexport function getScrollStrategyFactoryProviders(config: NxScrollStrategyFactoryConfig): FactoryProvider[] {\n    return [\n        { provide: NX_AUTOCOMPLETE_SCROLL_STRATEGY, useFactory: getFactoryFnByFactoryConfig(config, 'autocomplete'), deps: [Overlay] },\n        { provide: NX_CONTEXT_MENU_SCROLL_STRATEGY, useFactory: getFactoryFnByFactoryConfig(config, 'contextMenu'), deps: [Overlay] },\n        { provide: NX_DATEPICKER_SCROLL_STRATEGY, useFactory: getFactoryFnByFactoryConfig(config, 'datepicker'), deps: [Overlay] },\n        { provide: NX_DROPDOWN_SCROLL_STRATEGY, useFactory: getFactoryFnByFactoryConfig(config, 'dropdown'), deps: [Overlay] },\n        { provide: NX_NOTIFICATION_PANEL_SCROLL_STRATEGY, useFactory: getFactoryFnByFactoryConfig(config, 'notificationPanel'), deps: [Overlay] },\n        ...getExtraProvidersByFactoryConfig(config),\n    ];\n}\n\nfunction getFactoryFnByFactoryConfig(\n    config: NxScrollStrategyFactoryConfig,\n    componentName: keyof (NxScrollStrategyDefaultConfig['overrides'] & Record<never, never>),\n): (overlay: Overlay) => () => ScrollStrategy {\n    return (config.overrides?.[componentName] ?? config).scrollStrategyFactory;\n}\n\nfunction getExtraProvidersByFactoryConfig(config: NxScrollStrategyFactoryConfig): FactoryProvider[] {\n    return Object.entries(config.extraComponents ?? {}).map(([componentName, { scrollStrategyFactory }]) => ({\n        provide: getInjectionToken(componentName),\n        useFactory: scrollStrategyFactory,\n        deps: [Overlay],\n    }));\n}\n\nfunction getInjectionToken(componentName: string): InjectionToken<() => ScrollStrategy> {\n    switch (componentName) {\n        case 'dialog':\n            return NX_MODAL_SCROLL_STRATEGY;\n        case 'overlay':\n            return NX_OVERLAY_SCROLL_STRATEGY;\n        case 'popover':\n            return NX_POPOVER_SCROLL_STRATEGY;\n        case 'tooltip':\n            return NX_TOOLTIP_SCROLL_STRATEGY;\n        default:\n            throw new Error(`Injection token for ${componentName} scroll strategy not recognized.`);\n    }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { getScrollStrategyDefaultProviders, getScrollStrategyFactoryProviders } from './nx-scroll-strategy.helpers';\nimport { NxScrollStrategyDefaultConfig, NxScrollStrategyFactoryConfig } from './nx-scroll-strategy.models';\n\n/**\n * Provide a specific scroll strategy for a select collection of overlay-based components:\n *\n * - autocomplete\n * - context-menu\n * - datepicker\n * - dropdown\n * - notification-panel\n *\n * These components will be affected only if configured separately in the `extraComponents` property:\n *\n * - dialog\n * - overlay\n * - popover\n * - tooltip\n *\n * @example\n * NxScrollStrategyModule.withConfig({\n *   scrollStrategy: 'close',\n *   scrollStrategyOptions: { threshold: 100 },\n * })\n *\n * @example\n * NxScrollStrategyModule.withFactory({\n *   scrollStrategyFactory: overlay => () => overlay.scrollStrategies.close({ threshold: 100 }),\n * })\n */\n@NgModule()\nexport class NxScrollStrategyModule {\n    static withConfig(config: NxScrollStrategyDefaultConfig): ModuleWithProviders<NxScrollStrategyModule> {\n        return {\n            ngModule: NxScrollStrategyModule,\n            providers: getScrollStrategyDefaultProviders(config),\n        };\n    }\n\n    static withFactory(config: NxScrollStrategyFactoryConfig): ModuleWithProviders<NxScrollStrategyModule> {\n        return {\n            ngModule: NxScrollStrategyModule,\n            providers: getScrollStrategyFactoryProviders(config),\n        };\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["tabGroupOptions","tabNavBarOptions","selectableCardOptions","smallStageOptions","circleToggleGroupOptions","dataDisplayOptions"],"mappings":"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"}