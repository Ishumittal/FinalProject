import { coerceBooleanProperty } from '@angular/cdk/coercion';
import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Input, Directive, NgModule } from '@angular/core';
import * as i1 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i2 from '@aposin/ng-aquila/icon';
import { NxIconModule } from '@aposin/ng-aquila/icon';
import * as i1$1 from '@angular/cdk/a11y';

/**
  This components is a collapsible menu for usage on smaller devices.
  Can contain any content, but usually [nxMenuLink], [nxMenuGroup] and [nxAction].
*/
class NxMenuComponent {
    constructor(_cdr) {
        this._cdr = _cdr;
        this._open = false;
    }
    /** Whether the menu is open or closed. */
    set open(value) {
        const open = coerceBooleanProperty(value);
        if (open !== this._open) {
            this._open = open;
            this._cdr.markForCheck();
        }
    }
    get open() {
        return this._open;
    }
    /* Toggles the open state of the menu. */
    toggle() {
        this.open = !this.open;
    }
}
NxMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMenuComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
NxMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxMenuComponent, selector: "nx-menu", inputs: { open: "open" }, host: { properties: { "attr.aria-expanded": "open" } }, ngImport: i0, template: "<div class=\"nx-menu__wrapper\" *ngIf=\"open\">\n    <ng-content></ng-content>\n</div>\n", styles: [":host(.nx-menu){display:block}.nx-menu__wrapper{position:fixed;top:60px;left:0;right:0;bottom:0;z-index:1;overflow:auto;background:var(--menu-background-color)}::ng-deep .nx-menu__link{display:block;padding:12px 0;font-size:18px;line-height:24px;outline:none}::ng-deep .nx-menu__link+.nx-menu__link{margin-top:8px}::ng-deep .nx-menu__link.cdk-keyboard-focused{box-shadow:var(--focus-box-shadow);border-radius:4px;outline:none}@media screen and (-ms-high-contrast: active),(forced-colors: active){::ng-deep .nx-menu__link.cdk-keyboard-focused{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}::ng-deep .nx-menu__item.nx-menu__item--small,::ng-deep .nx-menu__item.nx-menu__item--large{padding:24px;border-bottom:1px solid var(--menu-item-border-color)}@media screen and (-ms-high-contrast: active){::ng-deep .nx-menu__item.nx-menu__item--small,::ng-deep .nx-menu__item.nx-menu__item--large{border-bottom-color:windowText}}::ng-deep .nx-menu__item.nx-menu__item--large{padding-left:64px}:host-context([dir=rtl]) ::ng-deep .nx-menu__item.nx-menu__item--large{padding-right:64px;padding-left:0;padding-left:initial}@media screen and (-ms-high-contrast: active){::ng-deep .nx-menu__link{text-decoration:none}}\n"], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMenuComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-menu', changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        '[attr.aria-expanded]': 'open',
                    }, template: "<div class=\"nx-menu__wrapper\" *ngIf=\"open\">\n    <ng-content></ng-content>\n</div>\n", styles: [":host(.nx-menu){display:block}.nx-menu__wrapper{position:fixed;top:60px;left:0;right:0;bottom:0;z-index:1;overflow:auto;background:var(--menu-background-color)}::ng-deep .nx-menu__link{display:block;padding:12px 0;font-size:18px;line-height:24px;outline:none}::ng-deep .nx-menu__link+.nx-menu__link{margin-top:8px}::ng-deep .nx-menu__link.cdk-keyboard-focused{box-shadow:var(--focus-box-shadow);border-radius:4px;outline:none}@media screen and (-ms-high-contrast: active),(forced-colors: active){::ng-deep .nx-menu__link.cdk-keyboard-focused{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}::ng-deep .nx-menu__item.nx-menu__item--small,::ng-deep .nx-menu__item.nx-menu__item--large{padding:24px;border-bottom:1px solid var(--menu-item-border-color)}@media screen and (-ms-high-contrast: active){::ng-deep .nx-menu__item.nx-menu__item--small,::ng-deep .nx-menu__item.nx-menu__item--large{border-bottom-color:windowText}}::ng-deep .nx-menu__item.nx-menu__item--large{padding-left:64px}:host-context([dir=rtl]) ::ng-deep .nx-menu__item.nx-menu__item--large{padding-right:64px;padding-left:0;padding-left:initial}@media screen and (-ms-high-contrast: active){::ng-deep .nx-menu__link{text-decoration:none}}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { open: [{
                type: Input
            }] } });

/**
 * @title MenuButton
 */
class NxMenuButtonComponent {
    constructor(_cdr, _focusMonitor, _elementRef) {
        this._cdr = _cdr;
        this._focusMonitor = _focusMonitor;
        this._elementRef = _elementRef;
        this._expandable = false;
        this._expanded = false;
        this._type = 'root';
        this._focusMonitor.monitor(this._elementRef);
    }
    /** Whether this menu button is expandable or not. Will add a caret icon. */
    set expandable(value) {
        this._expandable = coerceBooleanProperty(value);
        this._cdr.markForCheck();
    }
    get expandable() {
        return this._expandable;
    }
    /**
     * Whether this menu button is expanded or not.
     * Only works in combination with the `expandable` option set to `true`.
     */
    set expanded(value) {
        this._expanded = coerceBooleanProperty(value);
        this._cdr.markForCheck();
    }
    get expanded() {
        return this._expanded;
    }
    /**
     * The type of this menu button.
     * Can be `primary` or `secondary`, defaults to `primary`.
     */
    set type(value) {
        if (value === 'root' || value === 'nested') {
            this._type = value;
            this._cdr.markForCheck();
        }
    }
    get type() {
        return this._type;
    }
    ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef);
    }
}
NxMenuButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMenuButtonComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$1.FocusMonitor }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
NxMenuButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxMenuButtonComponent, selector: "[nxMenuButton]", inputs: { expandable: "expandable", expanded: "expanded", type: ["nxType", "type"] }, host: { properties: { "class.is-expanded": "expandable && expanded", "class.is-expandable": "expandable", "attr.aria-expanded": "expandable ? expanded : null", "class.nx-menu-button--nested": "type === \"nested\"", "class.nx-menu-button--root": "type === \"root\"" }, classAttribute: "nx-menu-button" }, ngImport: i0, template: "<ng-content select=\"[nxMenuButtonIcon]\"></ng-content>\n<span class=\"nx-menu-button__label\">\n    <ng-content></ng-content>\n</span>\n<nx-icon *ngIf=\"expandable\" class=\"nx-menu-button__expand-icon\" name=\"chevron-down\"></nx-icon>\n", styles: [":host{display:flex;align-items:center;background:var(--menu-button-background-color);color:var(--menu-button-text-color);-webkit-appearance:none;appearance:none;outline:none;box-shadow:none;border:none;margin:0;cursor:pointer;line-height:24px;font-weight:400;font-size:18px;width:100%;transition:all .2s ease,padding 0 none;text-decoration:none;padding:24px}:host:hover{background:var(--menu-button-hover-background-color)}:host.is-expanded{font-weight:700;background:var(--menu-button-expanded-background-color);color:var(--menu-button-expanded-text-color);border-color:var(--menu-button-expanded-border-color)}:host.is-expanded .nx-menu-button__expand-icon{transform:rotate(180deg)}:host.nx-menu-button--nested{background:var(--menu-button-nested-background-color)}:host.nx-menu-button--nested.is-expanded{background:var(--menu-button-nested-expanded-background-color);border-color:var(--menu-button-nested-expanded-border-color);color:var(--menu-button-nested-expanded-color)}:host::-moz-focus-inner{border:0}:host.cdk-keyboard-focused{box-shadow:var(--focus-inset-box-shadow);border-radius:8px;border:none}@media screen and (-ms-high-contrast: active){:host.cdk-keyboard-focused{box-shadow:inset 0 0 0 4px windowText,inset 0 0 0 6px background;border:4px solid CanvasText}}.nx-menu-button__expand-icon{display:flex;justify-content:center;transition:all .2s ease;transform:rotate(0);width:16px;height:24px;margin-right:8px;flex:0 0 auto;font-size:24px}:host-context([dir=rtl]) .nx-menu-button__expand-icon{margin-right:0;margin-right:initial;margin-left:8px}.nx-menu-button__label{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;flex:1 1 auto;text-align:left;line-height:1;padding:4px 0}:host-context([dir=rtl]) .nx-menu-button__label{text-align:right}::ng-deep .nx-menu-button__icon{margin-right:16px;height:24px;font-weight:400;flex:0 0 auto}:host-context([dir=rtl]) ::ng-deep .nx-menu-button__icon{margin-right:0;margin-right:initial;margin-left:16px}@media screen and (-ms-high-contrast: active){:host,:host.is-expanded,:host.nx-menu-button--nested,:host.nx-menu-button--nested.is-expanded{-ms-high-contrast-adjust:none;color:buttonText;background-color:buttonFace}:host:hover,:host.nx-menu-button--nested.is-expanded:hover{background-color:highlight;color:highlightText;border-bottom-color:windowText}}\n"], components: [{ type: i2.NxIconComponent, selector: "nx-icon", inputs: ["name", "outline", "fill", "size", "font"] }], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMenuButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: '[nxMenuButton]', host: {
                        '[class.is-expanded]': 'expandable && expanded',
                        '[class.is-expandable]': 'expandable',
                        '[attr.aria-expanded]': 'expandable ? expanded : null',
                        '[class.nx-menu-button--nested]': 'type === "nested"',
                        '[class.nx-menu-button--root]': 'type === "root"',
                        class: 'nx-menu-button',
                    }, changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-content select=\"[nxMenuButtonIcon]\"></ng-content>\n<span class=\"nx-menu-button__label\">\n    <ng-content></ng-content>\n</span>\n<nx-icon *ngIf=\"expandable\" class=\"nx-menu-button__expand-icon\" name=\"chevron-down\"></nx-icon>\n", styles: [":host{display:flex;align-items:center;background:var(--menu-button-background-color);color:var(--menu-button-text-color);-webkit-appearance:none;appearance:none;outline:none;box-shadow:none;border:none;margin:0;cursor:pointer;line-height:24px;font-weight:400;font-size:18px;width:100%;transition:all .2s ease,padding 0 none;text-decoration:none;padding:24px}:host:hover{background:var(--menu-button-hover-background-color)}:host.is-expanded{font-weight:700;background:var(--menu-button-expanded-background-color);color:var(--menu-button-expanded-text-color);border-color:var(--menu-button-expanded-border-color)}:host.is-expanded .nx-menu-button__expand-icon{transform:rotate(180deg)}:host.nx-menu-button--nested{background:var(--menu-button-nested-background-color)}:host.nx-menu-button--nested.is-expanded{background:var(--menu-button-nested-expanded-background-color);border-color:var(--menu-button-nested-expanded-border-color);color:var(--menu-button-nested-expanded-color)}:host::-moz-focus-inner{border:0}:host.cdk-keyboard-focused{box-shadow:var(--focus-inset-box-shadow);border-radius:8px;border:none}@media screen and (-ms-high-contrast: active){:host.cdk-keyboard-focused{box-shadow:inset 0 0 0 4px windowText,inset 0 0 0 6px background;border:4px solid CanvasText}}.nx-menu-button__expand-icon{display:flex;justify-content:center;transition:all .2s ease;transform:rotate(0);width:16px;height:24px;margin-right:8px;flex:0 0 auto;font-size:24px}:host-context([dir=rtl]) .nx-menu-button__expand-icon{margin-right:0;margin-right:initial;margin-left:8px}.nx-menu-button__label{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;flex:1 1 auto;text-align:left;line-height:1;padding:4px 0}:host-context([dir=rtl]) .nx-menu-button__label{text-align:right}::ng-deep .nx-menu-button__icon{margin-right:16px;height:24px;font-weight:400;flex:0 0 auto}:host-context([dir=rtl]) ::ng-deep .nx-menu-button__icon{margin-right:0;margin-right:initial;margin-left:16px}@media screen and (-ms-high-contrast: active){:host,:host.is-expanded,:host.nx-menu-button--nested,:host.nx-menu-button--nested.is-expanded{-ms-high-contrast-adjust:none;color:buttonText;background-color:buttonFace}:host:hover,:host.nx-menu-button--nested.is-expanded:hover{background-color:highlight;color:highlightText;border-bottom-color:windowText}}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1$1.FocusMonitor }, { type: i0.ElementRef }]; }, propDecorators: { expandable: [{
                type: Input
            }], expanded: [{
                type: Input
            }], type: [{
                type: Input,
                args: ['nxType']
            }] } });
/**
 * Icon that can be added to a [nxButton].
 */
class NxMenuButtonIconDirective {
}
NxMenuButtonIconDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMenuButtonIconDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
NxMenuButtonIconDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.1", type: NxMenuButtonIconDirective, selector: "[nxMenuButtonIcon]", host: { classAttribute: "nx-menu-button__icon" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMenuButtonIconDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[nxMenuButtonIcon]',
                    host: {
                        class: 'nx-menu-button__icon',
                    },
                }]
        }] });

/**
  This is a menu item is used to structure content whithin a menu.
 */
class NxMenuItemDirective {
    constructor() {
        this._size = 's';
    }
    set size(value) {
        this._size = value === 'l' ? 'l' : 's';
    }
    get size() {
        return this._size;
    }
}
NxMenuItemDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMenuItemDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
NxMenuItemDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.1", type: NxMenuItemDirective, selector: "[nxMenuItem]", inputs: { size: ["nxMenuItem", "size"] }, host: { properties: { "class.nx-menu__item--small": "size === \"s\"", "class.nx-menu__item--large": "size === \"l\"" }, classAttribute: "nx-menu__item" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMenuItemDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[nxMenuItem]',
                    host: {
                        class: 'nx-menu__item',
                        '[class.nx-menu__item--small]': 'size === "s"',
                        '[class.nx-menu__item--large]': 'size === "l"',
                    },
                }]
        }], propDecorators: { size: [{
                type: Input,
                args: ['nxMenuItem']
            }] } });

/**
  This is a menu link.
  It adds styling to a link and is usually used within a [nxMenuItem].
 */
class NxMenuLinkDirective {
    constructor(_elementRef, _focusMonitor) {
        this._elementRef = _elementRef;
        this._focusMonitor = _focusMonitor;
        this._focusMonitor.monitor(this._elementRef);
    }
    ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef);
    }
}
NxMenuLinkDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMenuLinkDirective, deps: [{ token: i0.ElementRef }, { token: i1$1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });
NxMenuLinkDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.1", type: NxMenuLinkDirective, selector: "a[nxMenuLink]", host: { classAttribute: "nx-menu__link" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMenuLinkDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'a[nxMenuLink]',
                    host: {
                        class: 'nx-menu__link',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1$1.FocusMonitor }]; } });

const EXPORTED_MODULES = [NxMenuComponent, NxMenuLinkDirective, NxMenuItemDirective, NxMenuButtonComponent, NxMenuButtonIconDirective];
class NxMenuModule {
}
NxMenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NxMenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMenuModule, declarations: [NxMenuComponent, NxMenuLinkDirective, NxMenuItemDirective, NxMenuButtonComponent, NxMenuButtonIconDirective], imports: [CommonModule, NxIconModule], exports: [NxMenuComponent, NxMenuLinkDirective, NxMenuItemDirective, NxMenuButtonComponent, NxMenuButtonIconDirective] });
NxMenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMenuModule, imports: [[CommonModule, NxIconModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxMenuModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, NxIconModule],
                    declarations: EXPORTED_MODULES,
                    exports: EXPORTED_MODULES,
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { NxMenuButtonComponent, NxMenuButtonIconDirective, NxMenuComponent, NxMenuItemDirective, NxMenuLinkDirective, NxMenuModule };
//# sourceMappingURL=aposin-ng-aquila-menu.mjs.map
