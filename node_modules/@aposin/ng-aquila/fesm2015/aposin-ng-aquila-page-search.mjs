import { coerceBooleanProperty } from '@angular/cdk/coercion';
import * as i0 from '@angular/core';
import { EventEmitter, Component, ChangeDetectionStrategy, Output, Input, NgModule } from '@angular/core';
import * as i1 from '@aposin/ng-aquila/grid';
import { NxGridModule } from '@aposin/ng-aquila/grid';
import * as i2 from '@aposin/ng-aquila/button';
import { NxButtonModule } from '@aposin/ng-aquila/button';
import * as i3 from '@angular/common';
import { CommonModule } from '@angular/common';
import { NxAutocompleteModule } from '@aposin/ng-aquila/autocomplete';
import { NxFormfieldModule } from '@aposin/ng-aquila/formfield';

class NxPageSearchComponent {
    constructor(_cdr) {
        this._cdr = _cdr;
        /** An event emitted when the user clicks the search button. */
        this.buttonClick = new EventEmitter();
        this._buttonLabel = null;
        this._hideSearchButton = false;
        this._buttonLayout = '12,12,12,2';
        this._contentLayout = null;
    }
    /** Sets the text label of the button. */
    set buttonLabel(value) {
        if (this._buttonLabel !== value) {
            this._buttonLabel = value;
            this._cdr.markForCheck();
        }
    }
    get buttonLabel() {
        return this._buttonLabel;
    }
    /** Whether the search button should be hidden. */
    set hideSearchButton(value) {
        this._hideSearchButton = coerceBooleanProperty(value);
        this._cdr.markForCheck();
    }
    get hideSearchButton() {
        return this._hideSearchButton;
    }
    /** Layout of the search button inside of a NxGrid. Default: 12,12,12,2. */
    set buttonLayout(value) {
        if (this._buttonLayout !== value) {
            this._buttonLayout = value;
            this._cdr.markForCheck();
        }
    }
    get buttonLayout() {
        return this._buttonLayout;
    }
    /** Layout of the content area inside of a NxGrid. Default: 12,12,12,10 | 12 (if search button is hidden). */
    set contentLayout(value) {
        if (this._contentLayout !== value) {
            this._contentLayout = value;
            this._cdr.markForCheck();
        }
    }
    get contentLayout() {
        if (this._contentLayout) {
            return this._contentLayout;
        }
        return this.hideSearchButton ? '12' : '12,12,12,10';
    }
    /** @docs-private */
    onButtonClick() {
        this.buttonClick.emit();
    }
}
NxPageSearchComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPageSearchComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
NxPageSearchComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxPageSearchComponent, selector: "nx-page-search", inputs: { buttonLabel: ["nxButtonLabel", "buttonLabel"], hideSearchButton: ["nxHideSearchButton", "hideSearchButton"], buttonLayout: ["nxButtonLayout", "buttonLayout"], contentLayout: ["nxContentLayout", "contentLayout"] }, outputs: { buttonClick: "nxButtonClick" }, host: { properties: { "attr.role": "\"search\"" } }, ngImport: i0, template: "<div class=\"nx-pagesearch\">\n    <div nxLayout=\"grid\">\n        <div nxRow>\n            <div [nxCol]=\"contentLayout\" class=\"nx-pagesearch--content\">\n                <ng-content></ng-content>\n            </div>\n            <div [nxCol]=\"buttonLayout\" *ngIf=\"!hideSearchButton\" class=\"nx-pagesearch__actions\">\n                <button nxButton=\"primary medium\" (click)=\"onButtonClick()\" type=\"button\">{{ buttonLabel }}</button>\n            </div>\n        </div>\n    </div>\n</div>\n", styles: [".nx-pagesearch{padding:32px 0;background:var(--page-search-background-color);box-shadow:var(--page-search-box-shadow)}.nx-pagesearch ::ng-deep .nx-formfield__wrapper{padding-bottom:0}.nx-pagesearch ::ng-deep .has-outline .nx-formfield__wrapper{padding-top:4px}.nx-pagesearch ::ng-deep .c-input{height:auto;font-size:var(--page-search-font-size);line-height:var(--page-search-line-height);font-weight:var(--page-search-font-weight);letter-spacing:var(--page-search-letter-spacing)}.nx-pagesearch ::ng-deep .c-input.is-filled{font-weight:600}.nx-pagesearch ::ng-deep .c-input::placeholder{font-weight:300}.nx-pagesearch ::ng-deep .nx-formfield__input-container{align-items:center}.nx-pagesearch ::ng-deep .nx-formfield__prefix,.nx-pagesearch ::ng-deep .nx-formfield__suffix{color:var(--page-search-icon-color)}.nx-pagesearch ::ng-deep .nx-formfield__suffix{cursor:pointer}.nx-pagesearch ::ng-deep button{margin:0}.nx-pagesearch ::ng-deep .nx-icon--auto{font-size:24px}.nx-pagesearch .nx-pagesearch__actions{display:flex;align-items:center;margin-top:0}@media (max-width: 991px){.nx-pagesearch .nx-pagesearch__actions{margin-top:16px}}\n"], components: [{ type: i1.NxLayoutComponent, selector: "[nxLayout]", inputs: ["nxLayout"] }, { type: i1.NxRowComponent, selector: "[nxRow]", inputs: ["nxRow", "nxRowJustify", "nxRowAlignContent", "nxRowAlignItems", "nxRowWrap", "class"] }, { type: i1.NxColComponent, selector: "[nxCol]", inputs: ["nxCol", "nxColOffset", "nxAlignSelf", "nxColOrder", "class"] }, { type: i2.NxButtonComponent, selector: "button[nxButton]", inputs: ["nxButton"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPageSearchComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-page-search', changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        '[attr.role]': '"search"',
                    }, template: "<div class=\"nx-pagesearch\">\n    <div nxLayout=\"grid\">\n        <div nxRow>\n            <div [nxCol]=\"contentLayout\" class=\"nx-pagesearch--content\">\n                <ng-content></ng-content>\n            </div>\n            <div [nxCol]=\"buttonLayout\" *ngIf=\"!hideSearchButton\" class=\"nx-pagesearch__actions\">\n                <button nxButton=\"primary medium\" (click)=\"onButtonClick()\" type=\"button\">{{ buttonLabel }}</button>\n            </div>\n        </div>\n    </div>\n</div>\n", styles: [".nx-pagesearch{padding:32px 0;background:var(--page-search-background-color);box-shadow:var(--page-search-box-shadow)}.nx-pagesearch ::ng-deep .nx-formfield__wrapper{padding-bottom:0}.nx-pagesearch ::ng-deep .has-outline .nx-formfield__wrapper{padding-top:4px}.nx-pagesearch ::ng-deep .c-input{height:auto;font-size:var(--page-search-font-size);line-height:var(--page-search-line-height);font-weight:var(--page-search-font-weight);letter-spacing:var(--page-search-letter-spacing)}.nx-pagesearch ::ng-deep .c-input.is-filled{font-weight:600}.nx-pagesearch ::ng-deep .c-input::placeholder{font-weight:300}.nx-pagesearch ::ng-deep .nx-formfield__input-container{align-items:center}.nx-pagesearch ::ng-deep .nx-formfield__prefix,.nx-pagesearch ::ng-deep .nx-formfield__suffix{color:var(--page-search-icon-color)}.nx-pagesearch ::ng-deep .nx-formfield__suffix{cursor:pointer}.nx-pagesearch ::ng-deep button{margin:0}.nx-pagesearch ::ng-deep .nx-icon--auto{font-size:24px}.nx-pagesearch .nx-pagesearch__actions{display:flex;align-items:center;margin-top:0}@media (max-width: 991px){.nx-pagesearch .nx-pagesearch__actions{margin-top:16px}}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { buttonClick: [{
                type: Output,
                args: ['nxButtonClick']
            }], buttonLabel: [{
                type: Input,
                args: ['nxButtonLabel']
            }], hideSearchButton: [{
                type: Input,
                args: ['nxHideSearchButton']
            }], buttonLayout: [{
                type: Input,
                args: ['nxButtonLayout']
            }], contentLayout: [{
                type: Input,
                args: ['nxContentLayout']
            }] } });

class NxPageSearchModule {
}
NxPageSearchModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPageSearchModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NxPageSearchModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPageSearchModule, declarations: [NxPageSearchComponent], imports: [CommonModule, NxAutocompleteModule, NxFormfieldModule, NxButtonModule, NxGridModule], exports: [NxPageSearchComponent] });
NxPageSearchModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPageSearchModule, imports: [[CommonModule, NxAutocompleteModule, NxFormfieldModule, NxButtonModule, NxGridModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPageSearchModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, NxAutocompleteModule, NxFormfieldModule, NxButtonModule, NxGridModule],
                    declarations: [NxPageSearchComponent],
                    exports: [NxPageSearchComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { NxPageSearchComponent, NxPageSearchModule };
//# sourceMappingURL=aposin-ng-aquila-page-search.mjs.map
