import { CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { Directive, Input, Component, ChangeDetectionStrategy, HostBinding, NgModule } from '@angular/core';
import { NG_VALIDATORS } from '@angular/forms';
import * as i1 from '@aposin/ng-aquila/formfield';

const DE_SPECIAL_PATTERN = /^[\dA-Za-zÄÖÜäöü]{1,3}[ -]?[\dA-Za-z]{1,5}[ -]?[\dA-Za-z]{1,5}$/;
const DE_STANDARD_PATTERN = /^[A-Za-zÄÖÜäöü]{1,3}-[A-Za-z]{1,2} \d{1,4}[EHeh]?$/;
const OTHER_PATTERN = /^.+$/;
const LICENCE_PLATE_PATTERNS = {
    de_standard: DE_STANDARD_PATTERN,
    de_special: DE_SPECIAL_PATTERN,
    de_season: DE_STANDARD_PATTERN,
    other: OTHER_PATTERN,
    euro: OTHER_PATTERN,
};
/**
 * Licence plate validator.
 * Supports validation for german standard and special plate numbers.
 * Choose `other` to allow all values.
 */
function nxLicensePlateValidator(type) {
    return (control) => {
        const valid = LICENCE_PLATE_PATTERNS[type].test(control.value);
        if (valid) {
            return null;
        }
        return { nxLicensePlateError: true };
    };
}
class NxLicencePlateValidatorDirective {
    constructor() {
        /**
         * Licence plate type.
         * Supports validation for german standard and special plate numbers.
         * Choose `other` to allow all values.
         */
        this.type = 'other';
    }
    validate(control) {
        return nxLicensePlateValidator(this.type)(control);
    }
}
NxLicencePlateValidatorDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxLicencePlateValidatorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
NxLicencePlateValidatorDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.1", type: NxLicencePlateValidatorDirective, selector: "[nxLicensePlate]", inputs: { type: ["nxLicensePlate", "type"] }, providers: [
        {
            provide: NG_VALIDATORS,
            useExisting: NxLicencePlateValidatorDirective,
            multi: true,
        },
    ], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxLicencePlateValidatorDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[nxLicensePlate]',
                    providers: [
                        {
                            provide: NG_VALIDATORS,
                            useExisting: NxLicencePlateValidatorDirective,
                            multi: true,
                        },
                    ],
                }]
        }], propDecorators: { type: [{
                type: Input,
                args: ['nxLicensePlate']
            }] } });

/**
 * Euro country prefix for the licence plate input.
 */
class NxLicencePlateEuroPrefixComponent {
    constructor(_formField) {
        this._formField = _formField;
    }
    get _disabled() {
        var _a;
        return (_a = this._formField._control) === null || _a === void 0 ? void 0 : _a.disabled;
    }
    get _hasOutline() {
        return this._formField.appearance === 'outline';
    }
}
NxLicencePlateEuroPrefixComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxLicencePlateEuroPrefixComponent, deps: [{ token: i1.NxFormfieldComponent }], target: i0.ɵɵFactoryTarget.Component });
NxLicencePlateEuroPrefixComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxLicencePlateEuroPrefixComponent, selector: "nx-licence-plate-euro-prefix", host: { properties: { "class.is-disabled": "this._disabled", "class.has-outline": "this._hasOutline" } }, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, styles: [":host{display:flex;align-items:center;justify-content:center;text-transform:uppercase;overflow:hidden;background-color:var(--licence-plate-prefix-background);height:100%;min-width:24px;max-width:40px;border-radius:4px;padding:0 4px;font-size:var(--paragraph-03-font-size);line-height:var(--paragraph-03-line-height);font-weight:var(--paragraph-03-font-weight);letter-spacing:var(--paragraph-03-letter-spacing);color:var(--licence-plate-prefix-color)}:host(.has-outline){margin-left:-7px;border-radius:3px 0 0 3px}:host(.is-disabled){-webkit-text-fill-color:var(--licence-plate-prefix-color);color:var(--licence-plate-prefix-color);background-color:var(--formfield-disabled-border-color)}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxLicencePlateEuroPrefixComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-licence-plate-euro-prefix', template: `<ng-content></ng-content>`, changeDetection: ChangeDetectionStrategy.OnPush, styles: [":host{display:flex;align-items:center;justify-content:center;text-transform:uppercase;overflow:hidden;background-color:var(--licence-plate-prefix-background);height:100%;min-width:24px;max-width:40px;border-radius:4px;padding:0 4px;font-size:var(--paragraph-03-font-size);line-height:var(--paragraph-03-line-height);font-weight:var(--paragraph-03-font-weight);letter-spacing:var(--paragraph-03-letter-spacing);color:var(--licence-plate-prefix-color)}:host(.has-outline){margin-left:-7px;border-radius:3px 0 0 3px}:host(.is-disabled){-webkit-text-fill-color:var(--licence-plate-prefix-color);color:var(--licence-plate-prefix-color);background-color:var(--formfield-disabled-border-color)}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.NxFormfieldComponent }]; }, propDecorators: { _disabled: [{
                type: HostBinding,
                args: ['class.is-disabled']
            }], _hasOutline: [{
                type: HostBinding,
                args: ['class.has-outline']
            }] } });

/**
 * Suffix for seasonal licence plate inputs.
 */
class NxLicencePlateSeasonSuffixComponent {
    constructor(_formField) {
        this._formField = _formField;
        /**
         * Start month of the licence plate.
         */
        this.startMonth = 1;
        /**
         * End month of the licence plate.
         */
        this.endMonth = 1;
    }
    get _disabled() {
        var _a;
        return (_a = this._formField._control) === null || _a === void 0 ? void 0 : _a.disabled;
    }
    get _hasOutline() {
        return this._formField.appearance === 'outline';
    }
    _format(value) {
        if (typeof value !== 'number') {
            return '';
        }
        return value >= 10 ? value.toString() : '0' + value;
    }
}
NxLicencePlateSeasonSuffixComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxLicencePlateSeasonSuffixComponent, deps: [{ token: i1.NxFormfieldComponent }], target: i0.ɵɵFactoryTarget.Component });
NxLicencePlateSeasonSuffixComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxLicencePlateSeasonSuffixComponent, selector: "nx-licence-plate-season-suffix", inputs: { startMonth: "startMonth", endMonth: "endMonth" }, host: { properties: { "class.is-disabled": "this._disabled", "class.has-outline": "this._hasOutline" } }, ngImport: i0, template: `
        <span>{{ _format(startMonth) }}</span>
        <span>{{ _format(endMonth) }}</span>
    `, isInline: true, styles: [":host{display:flex;flex-direction:column;justify-content:center;font-size:var(--paragraph-05-font-size);line-height:var(--paragraph-05-line-height);font-weight:var(--paragraph-05-font-weight);letter-spacing:var(--paragraph-05-letter-spacing);line-height:14px;color:var(--text-01)}span{width:14px}span:first-child{border-bottom:1px solid}:host(.has-outline){font-size:var(--paragraph-04-font-size);line-height:var(--paragraph-04-line-height);font-weight:var(--paragraph-04-font-weight);letter-spacing:var(--paragraph-04-letter-spacing);line-height:16px}:host(.is-disabled) span{border-color:var(--formfield-disabled-border-color)}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxLicencePlateSeasonSuffixComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-licence-plate-season-suffix', template: `
        <span>{{ _format(startMonth) }}</span>
        <span>{{ _format(endMonth) }}</span>
    `, changeDetection: ChangeDetectionStrategy.OnPush, styles: [":host{display:flex;flex-direction:column;justify-content:center;font-size:var(--paragraph-05-font-size);line-height:var(--paragraph-05-line-height);font-weight:var(--paragraph-05-font-weight);letter-spacing:var(--paragraph-05-letter-spacing);line-height:14px;color:var(--text-01)}span{width:14px}span:first-child{border-bottom:1px solid}:host(.has-outline){font-size:var(--paragraph-04-font-size);line-height:var(--paragraph-04-line-height);font-weight:var(--paragraph-04-font-weight);letter-spacing:var(--paragraph-04-letter-spacing);line-height:16px}:host(.is-disabled) span{border-color:var(--formfield-disabled-border-color)}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.NxFormfieldComponent }]; }, propDecorators: { startMonth: [{
                type: Input
            }], endMonth: [{
                type: Input
            }], _disabled: [{
                type: HostBinding,
                args: ['class.is-disabled']
            }], _hasOutline: [{
                type: HostBinding,
                args: ['class.has-outline']
            }] } });

class NxLicencePlateModule {
}
NxLicencePlateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxLicencePlateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NxLicencePlateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxLicencePlateModule, declarations: [NxLicencePlateValidatorDirective, NxLicencePlateEuroPrefixComponent, NxLicencePlateSeasonSuffixComponent], imports: [CommonModule], exports: [NxLicencePlateValidatorDirective, NxLicencePlateEuroPrefixComponent, NxLicencePlateSeasonSuffixComponent] });
NxLicencePlateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxLicencePlateModule, imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxLicencePlateModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NxLicencePlateValidatorDirective, NxLicencePlateEuroPrefixComponent, NxLicencePlateSeasonSuffixComponent],
                    imports: [CommonModule],
                    exports: [NxLicencePlateValidatorDirective, NxLicencePlateEuroPrefixComponent, NxLicencePlateSeasonSuffixComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { NxLicencePlateEuroPrefixComponent, NxLicencePlateModule, NxLicencePlateSeasonSuffixComponent, NxLicencePlateValidatorDirective, nxLicensePlateValidator };
//# sourceMappingURL=aposin-ng-aquila-licence-plate.mjs.map
