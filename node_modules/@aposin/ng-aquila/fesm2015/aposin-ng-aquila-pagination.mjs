import * as i0 from '@angular/core';
import { InjectionToken, Injectable, EventEmitter, Component, ChangeDetectionStrategy, Optional, Inject, ViewChildren, Input, Output, NgModule } from '@angular/core';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import * as i1 from '@angular/cdk/bidi';
import * as i3 from '@angular/cdk/a11y';
import * as i4 from '@aposin/ng-aquila/icon';
import { NxIconModule } from '@aposin/ng-aquila/icon';
import * as i5 from '@angular/common';
import { CommonModule } from '@angular/common';

const DefaultPaginationTexts = {
    previous: 'Previous',
    next: 'Next',
    first: 'First',
    last: 'Last',
    ofLabel: 'of',
    ariaLabel: 'Please select your page',
};
/** InjectionToken for pagination that can be used to override default locale code. */
const NX_PAGINATION_TEXTS = new InjectionToken('nx-pagination-texts');

/** @docs-private */
class NxPaginationUtils {
    constructor() {
        this._pagesMobile = 3;
        this._elipsisText = '...';
        this._classExpanded = 'expanded-view';
    }
    getPages(currentPage, totalPages) {
        let pages = [];
        let start = [], middle = [], end = [];
        // First array -> start
        start = this.getStartArray(currentPage, totalPages);
        // Second array -> middle
        middle = this.getMiddleArray(currentPage, totalPages);
        // Third array -> end
        end = this.getEndArray(currentPage, totalPages);
        pages = [...start, ...middle, ...end];
        return pages;
    }
    getMiddleArray(currentPage, totalPages) {
        let pageNumber = currentPage < 6 ? 4 : currentPage - 1;
        const middle = [];
        while (middle.length < 3 && pageNumber >= 2 && pageNumber <= totalPages - 3 && pageNumber <= currentPage + 1 && pageNumber >= currentPage - 1) {
            middle.push(this.createPaginationItem(pageNumber, pageNumber));
            pageNumber++;
        }
        return middle;
    }
    getEndArray(currentPage, totalPages) {
        const end = [];
        let currentItemToShow = totalPages <= 3 ? totalPages + 1 : totalPages <= 6 ? totalPages - (totalPages - 4) : totalPages - 2;
        const showEllipsis = currentPage < totalPages - 4;
        while (currentItemToShow <= totalPages) {
            const endItem = end.length === 0 && showEllipsis
                ? this.createPaginationItem(this._elipsisText, currentItemToShow, true)
                : this.createPaginationItem(currentItemToShow, currentItemToShow, true);
            end.push(endItem);
            currentItemToShow++;
        }
        return end;
    }
    getStartArray(currentPage, totalPages) {
        let counterPages = 0;
        const start = [];
        const maxSizeArray = 3;
        while (counterPages < maxSizeArray && counterPages < totalPages) {
            const startItem = counterPages === 2 && currentPage > 5
                ? this.createPaginationItem(this._elipsisText, counterPages, true)
                : this.createPaginationItem(counterPages + 1, counterPages + 1, true);
            start.push(startItem);
            counterPages++;
        }
        return start;
    }
    getMobilePages(currentPage, totalPages) {
        // if we have less pages than the number we want to display take all
        if (totalPages < this._pagesMobile) {
            return Array.from(Array(totalPages).keys()).map(item => this.createPaginationItem(item + 1, item + 1));
        }
        switch (currentPage) {
            // first page active
            case 1:
                return [1, 2, 3].map(item => this.createPaginationItem(item, item));
            // last page active
            case totalPages:
                return [totalPages - 2, totalPages - 1, totalPages].map(item => this.createPaginationItem(item, item));
            // any other page active
            default:
                return [currentPage - 1, currentPage, currentPage + 1].map(item => this.createPaginationItem(item, item));
        }
    }
    createPaginationItem(label, value, classExpanded) {
        return { label, value, class: classExpanded ? this._classExpanded : '' };
    }
}
NxPaginationUtils.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPaginationUtils, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
NxPaginationUtils.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPaginationUtils });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPaginationUtils, decorators: [{
            type: Injectable
        }] });

class NxPaginationComponent {
    constructor(paginationTexts, _dir, paginationUtilsService, _cdr, _focusMonitor) {
        var _a;
        this._dir = _dir;
        this.paginationUtilsService = paginationUtilsService;
        this._cdr = _cdr;
        this._focusMonitor = _focusMonitor;
        this._type = 'simple';
        /** @docs-private */
        this.totalNumberPages = 0;
        /** An event emitted when the previous page button is clicked. */
        this.nxGoPrev = new EventEmitter();
        /** An event emitted when the next page button is clicked */
        this.nxGoNext = new EventEmitter();
        /**
         * An event emitted when a page number is clicked.
         * Provides the number of the page as parameter.
         */
        this.nxGoPage = new EventEmitter();
        this._destroyed = new Subject();
        this.paginationTexts = paginationTexts || DefaultPaginationTexts;
        (_a = this._dir) === null || _a === void 0 ? void 0 : _a.change.pipe(takeUntil(this._destroyed)).subscribe(() => {
            this._cdr.detectChanges();
        });
    }
    get page() {
        return this._page;
    }
    /** Sets the current page. */
    set page(value) {
        this._page = value;
        this._cdr.markForCheck();
    }
    get count() {
        return this._count;
    }
    /** Number of total items over all pages. */
    set count(value) {
        this._count = value;
        this.totalNumberPages = this.calculateTotalPages();
        this._cdr.markForCheck();
    }
    get perPage() {
        return this._perPage;
    }
    /** Sets the number of items you want to show per page. */
    set perPage(value) {
        this._perPage = value;
        this.totalNumberPages = this.calculateTotalPages();
        this._cdr.markForCheck();
    }
    get type() {
        return this._type;
    }
    /**
     * Determines the type of pagination.
     *
     * Values: simple | advanced, default: simple.
     */
    set type(value) {
        // type advanced or simple
        this._type = value;
        this._cdr.markForCheck();
    }
    ngOnInit() {
        this.totalNumberPages = this.calculateTotalPages();
    }
    ngAfterContentInit() {
        if (this.type === 'advanced' && (!this.paginationTexts.last || !this.paginationTexts.first)) {
            console.warn('Please define aria labels for the last and first arrows.');
        }
    }
    ngAfterViewInit() {
        this._linkElements.forEach(link => this._focusMonitor.monitor(link));
        this._linkElementsPrevious = this._linkElements;
        this._linkElements.changes.subscribe(_linkElements => {
            this._linkElementsPrevious.forEach(link => this._focusMonitor.stopMonitoring(link));
            this._linkElementsPrevious = this._linkElements;
            this._linkElements.forEach(link => this._focusMonitor.monitor(link));
        });
    }
    ngOnDestroy() {
        var _a;
        this._destroyed.next();
        this._destroyed.complete();
        (_a = this._linkElements) === null || _a === void 0 ? void 0 : _a.forEach(link => this._focusMonitor.stopMonitoring(link));
    }
    /** Returns the number of the first page. */
    getMin() {
        return this.totalNumberPages > 0 ? 1 : 0;
    }
    /** Returns the number of the last page. */
    getMax() {
        let max = this._perPage * this._page;
        if (max > this._count) {
            max = this._count;
        }
        return max;
    }
    /** Returns the total number of pages */
    calculateTotalPages() {
        return Math.ceil(this._count / this._perPage) || 0;
    }
    /** Directs to the page with number n. */
    onPage(n) {
        this.nxGoPage.emit(n);
    }
    /** Directs to the previous page. */
    onPrev() {
        if (!this._isPaginationPreviousDisabled()) {
            this.nxGoPrev.emit();
        }
    }
    /** Directs to the next page. */
    onNext() {
        if (!this._isPaginationNextDisabled()) {
            this.nxGoNext.emit();
        }
    }
    /** Directs to the first page. */
    onFirst() {
        if (!this._isPaginationPreviousDisabled()) {
            this.onPage(1);
        }
    }
    /** Directs to the last page. */
    onLast() {
        if (!this._isPaginationNextDisabled()) {
            this.onPage(this.totalNumberPages);
        }
    }
    /** Returns if the current page is the last page. */
    lastPage() {
        return this._perPage * this._page >= this._count;
    }
    /** @docs-private */
    getPages() {
        return this.paginationUtilsService.getPages(this._page, this.totalNumberPages);
    }
    /** @docs-private */
    getMobilePages() {
        return this.paginationUtilsService.getMobilePages(this._page, this.totalNumberPages);
    }
    /** @docs-private */
    getPaginationItemClasses(page) {
        const classes = {
            'is-ellipsis': page.label === '...',
            'nx-pagination__item--expanded-view': page.class === 'expanded-view',
        };
        return classes;
    }
    /** @docs-private */
    getPaginationNumberClasses(page) {
        const classes = {
            'is-active': page.value === this.page,
            'nx-pagination__ellipsis': page.label === '...',
            'nx-pagination__link': page.label !== '...',
        };
        return classes;
    }
    /** Returns true, if `nxCount` is greater than 0, else false. */
    isPaginationVisible() {
        return this.count > 0;
    }
    /** Returns true, if `nxCount` is greater than 0 and the type of pagination is 'simple', else false. */
    isPaginationCompactVisible() {
        return this.type.includes('simple') && this.count > 0;
    }
    /** @docs-private */
    isPaginationContainerVisible() {
        return this.type.includes('advanced');
    }
    _isPaginationPreviousDisabled() {
        return this.page === this.getMin();
    }
    _isPaginationNextDisabled() {
        return this.page === this.totalNumberPages;
    }
    get _isRTL() {
        var _a;
        return ((_a = this._dir) === null || _a === void 0 ? void 0 : _a.value) === 'rtl';
    }
}
NxPaginationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPaginationComponent, deps: [{ token: NX_PAGINATION_TEXTS, optional: true }, { token: i1.Directionality, optional: true }, { token: NxPaginationUtils }, { token: i0.ChangeDetectorRef }, { token: i3.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });
NxPaginationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxPaginationComponent, selector: "nx-pagination", inputs: { page: ["nxPage", "page"], count: ["nxCount", "count"], perPage: ["nxPerPage", "perPage"], type: ["nxType", "type"] }, outputs: { nxGoPrev: "nxGoPrev", nxGoNext: "nxGoNext", nxGoPage: "nxGoPage" }, viewQueries: [{ propertyName: "_linkElements", predicate: ["link"], descendants: true }], ngImport: i0, template: "<nav *ngIf=\"isPaginationVisible()\" aria-label=\"Page navigation\" class=\"nx-pagination\">\n    <ul *ngIf=\"isPaginationContainerVisible()\" [attr.aria-label]=\"paginationTexts.ariaLabel\" class=\"nx-pagination__container\">\n        <li class=\"nx-pagination__item\">\n            <button\n                #link\n                [disabled]=\"_isPaginationPreviousDisabled()\"\n                [attr.aria-label]=\"paginationTexts.first\"\n                [class.is-disabled]=\"_isPaginationPreviousDisabled()\"\n                class=\"nx-pagination__link nx-pagination__link--first\"\n                (click)=\"onFirst()\"\n            >\n                <nx-icon class=\"nx-pagination__arrow\" [name]=\"_isRTL ? 'arrow-last' : 'arrow-first'\"></nx-icon>\n            </button>\n        </li>\n        <li class=\"nx-pagination__item nx-pagination__item-previous\">\n            <button\n                #link\n                [disabled]=\"_isPaginationPreviousDisabled()\"\n                [attr.aria-label]=\"paginationTexts.previous\"\n                [class.is-disabled]=\"_isPaginationPreviousDisabled()\"\n                class=\"nx-pagination__link nx-pagination__link--previous\"\n                (click)=\"onPrev()\"\n            >\n                <nx-icon class=\"nx-pagination__arrow\" [name]=\"_isRTL ? 'arrow-right' : 'arrow-left'\"></nx-icon>\n            </button>\n        </li>\n        <li *ngFor=\"let pageNum of getPages()\" class=\"nx-pagination__item nx-pagination__item--desktop\" [ngClass]=\"getPaginationItemClasses(pageNum)\">\n            <button\n                #link\n                class=\"nx-pagination--number\"\n                *ngIf=\"pageNum.label !== '...'\"\n                (click)=\"onPage(pageNum.value)\"\n                [attr.aria-current]=\"pageNum.value === page ? 'page' : ''\"\n                [ngClass]=\"getPaginationNumberClasses(pageNum)\"\n            >\n                {{ pageNum.label }}\n            </button>\n            <span *ngIf=\"pageNum.label === '...'\">\n                {{ pageNum.label }}\n            </span>\n        </li>\n        <li *ngFor=\"let pageNum of getMobilePages()\" class=\"nx-pagination__item nx-pagination__item--mobile\" [ngClass]=\"getPaginationItemClasses(pageNum)\">\n            <button\n                #link\n                class=\"nx-pagination--number\"\n                (click)=\"onPage(pageNum.value)\"\n                [attr.aria-current]=\"pageNum.value === page ? 'page' : ''\"\n                [ngClass]=\"getPaginationNumberClasses(pageNum)\"\n            >\n                {{ pageNum.label }}\n            </button>\n        </li>\n        <li class=\"nx-pagination__item nx-pagination__item-next\">\n            <button\n                #link\n                [disabled]=\"_isPaginationNextDisabled()\"\n                [attr.aria-label]=\"paginationTexts.next\"\n                [class.is-disabled]=\"_isPaginationNextDisabled()\"\n                class=\"nx-pagination__link nx-pagination__link--next\"\n                (click)=\"onNext()\"\n            >\n                <nx-icon class=\"nx-pagination__arrow\" [name]=\"_isRTL ? 'arrow-left' : 'arrow-right'\"></nx-icon>\n            </button>\n        </li>\n        <li class=\"nx-pagination__item\">\n            <button\n                #link\n                [disabled]=\"_isPaginationNextDisabled()\"\n                [attr.aria-label]=\"paginationTexts.last\"\n                [class.is-disabled]=\"_isPaginationNextDisabled()\"\n                class=\"nx-pagination__link nx-pagination__link--last\"\n                (click)=\"onLast()\"\n            >\n                <nx-icon class=\"nx-pagination__arrow\" [name]=\"_isRTL ? 'arrow-first' : 'arrow-last'\"></nx-icon>\n            </button>\n        </li>\n    </ul>\n</nav>\n<nav *ngIf=\"isPaginationCompactVisible()\" [attr.aria-label]=\"paginationTexts.ariaLabel\" class=\"nx-pagination-compact\">\n    <button\n        #link\n        [attr.aria-label]=\"paginationTexts.previous\"\n        class=\"nx-pagination-compact__previous\"\n        [disabled]=\"_isPaginationPreviousDisabled()\"\n        [class.is-disabled]=\"_isPaginationPreviousDisabled()\"\n        (click)=\"onPrev()\"\n    >\n        <nx-icon class=\"nx-pagination__arrow\" [name]=\"_isRTL ? 'arrow-right' : 'arrow-left'\"></nx-icon>\n        <span class=\"nx-pagination-compact__direction-label\">\n            {{ paginationTexts.previous }}\n        </span>\n    </button>\n    <div class=\"nx-pagination-compact__display\">\n        <span class=\"nx-pagination-compact__current-page\">{{ page }}</span>\n        <span class=\"nx-pagination-compact__page-separator\"> {{ paginationTexts.ofLabel }} </span>\n        <span class=\"nx-pagination-compact__total-pages\">{{ totalNumberPages }}</span>\n    </div>\n    <button\n        #link\n        class=\"nx-pagination-compact__next\"\n        [disabled]=\"_isPaginationNextDisabled()\"\n        [class.is-disabled]=\"_isPaginationNextDisabled()\"\n        [attr.aria-label]=\"paginationTexts.next\"\n        (click)=\"onNext()\"\n    >\n        <span class=\"nx-pagination-compact__direction-label\"> {{ paginationTexts.next }} </span>\n        <nx-icon class=\"nx-pagination__arrow\" [name]=\"_isRTL ? 'arrow-left' : 'arrow-right'\"></nx-icon>\n    </button>\n</nav>\n", styles: [":host button:focus{outline:none}:host button::-moz-focus-inner{border:0}.nx-pagination__container{display:flex;font-size:var(--pagination-font-size);line-height:var(--pagination-line-height);font-weight:var(--pagination-font-weight);letter-spacing:var(--pagination-letter-spacing);padding:0}.nx-pagination__item{margin:0 16px;list-style:none;font-weight:var(--pagination-item-font-weight)}.nx-pagination__item:first-child{margin:0}.nx-pagination__item:last-child{margin:0}.nx-pagination__item.is-ellipsis{color:var(--pagination-text-color)}.nx-pagination__item--expanded-view{display:block}.nx-pagination__link{color:var(--pagination-link-color);padding:0;text-decoration:none;background-color:transparent;border:0;cursor:pointer}.nx-pagination__link.is-active{color:var(--pagination-text-color);font-weight:700;cursor:default}@media screen and (-ms-high-contrast: active){.nx-pagination__link.is-active{border-bottom:4px solid windowText}}nx-icon.nx-pagination__arrow,nx-icon.nx-pagination__arrow{font-size:var(--pagination-icon-size)}.nx-pagination-compact{display:flex;font-size:var(--pagination-font-size);line-height:var(--pagination-line-height);font-weight:var(--pagination-font-weight);letter-spacing:var(--pagination-letter-spacing);padding:0}.nx-pagination-compact__display{color:var(--pagination-text-color);display:flex}.nx-pagination-compact__current-page{font-weight:700;margin-right:8px}:host-context([dir=rtl]) .nx-pagination-compact__current-page{margin-right:0;margin-right:initial;margin-left:8px}.nx-pagination-compact__total-pages{margin-left:8px}:host-context([dir=rtl]) .nx-pagination-compact__total-pages{margin-right:8px;margin-left:0;margin-left:initial}.nx-pagination-compact__next,.nx-pagination-compact__previous,.nx-pagination__arrow-last,.nx-pagination__arrow-first{color:var(--pagination-link-color);font-weight:var(--pagination-icon-font-weight);text-decoration:none;text-transform:uppercase;display:flex;align-items:center;padding:0;background-color:transparent;cursor:pointer;border:0}.nx-pagination-compact__previous{margin-right:32px}:host-context([dir=rtl]) .nx-pagination-compact__previous{margin-right:0;margin-right:initial;margin-left:32px}.nx-pagination-compact__next{margin-left:32px}:host-context([dir=rtl]) .nx-pagination-compact__next{margin-right:32px;margin-left:0;margin-left:initial}.nx-pagination-compact__direction-label{display:block;font-size:var(--pagination-compact-direction-font-size);line-height:var(--pagination-compact-direction-line-height);font-weight:var(--pagination-compact-direction-font-weight);letter-spacing:var(--pagination-compact-direction-letter-spacing)}.nx-pagination-compact__direction-label:first-child{margin-right:8px}:host-context([dir=rtl]) .nx-pagination-compact__direction-label:first-child{margin-right:0;margin-right:initial;margin-left:8px}.nx-pagination-compact__direction-label:last-child{margin-left:8px}:host-context([dir=rtl]) .nx-pagination-compact__direction-label:last-child{margin-right:8px;margin-left:0;margin-left:initial}.nx-pagination-compact__previous.is-disabled,.nx-pagination-compact__next.is-disabled,.nx-pagination__link.is-disabled{color:var(--pagination-link-disabled-color);cursor:not-allowed}@media screen and (-ms-high-contrast: active){.nx-pagination-compact__previous.is-disabled,.nx-pagination-compact__next.is-disabled,.nx-pagination__link.is-disabled{color:GrayText}}.nx-pagination-compact__previous.cdk-keyboard-focused,.nx-pagination-compact__next.cdk-keyboard-focused,.nx-pagination__link.cdk-keyboard-focused,.nx-pagination--number.cdk-keyboard-focused{box-shadow:var(--focus-box-shadow);border-radius:4px}@media screen and (-ms-high-contrast: active),(forced-colors: active){.nx-pagination-compact__previous.cdk-keyboard-focused,.nx-pagination-compact__next.cdk-keyboard-focused,.nx-pagination__link.cdk-keyboard-focused,.nx-pagination--number.cdk-keyboard-focused{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}.nx-pagination__link--next,.nx-pagination__link--previous,.nx-pagination__link--first,.nx-pagination__link--last{display:flex;align-items:center}.nx-pagination__item-next{margin-right:8px}:host-context([dir=rtl]) .nx-pagination__item-next{margin-right:0;margin-right:initial;margin-left:8px}.nx-pagination__item-previous{margin-left:8px}:host-context([dir=rtl]) .nx-pagination__item-previous{margin-right:8px;margin-left:0;margin-left:initial}.nx-pagination-compact__direction-label,.nx-pagination__link--first,.nx-pagination__link--last,.nx-pagination__item--desktop{display:flex}@media (max-width: 703px){.nx-pagination-compact__direction-label,.nx-pagination__link--first,.nx-pagination__link--last,.nx-pagination__item--desktop{display:none}}.nx-pagination__item--mobile{display:none}@media (max-width: 703px){.nx-pagination__item--mobile{display:block}}\n"], components: [{ type: i4.NxIconComponent, selector: "nx-icon", inputs: ["name", "outline", "fill", "size", "font"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPaginationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-pagination', changeDetection: ChangeDetectionStrategy.OnPush, template: "<nav *ngIf=\"isPaginationVisible()\" aria-label=\"Page navigation\" class=\"nx-pagination\">\n    <ul *ngIf=\"isPaginationContainerVisible()\" [attr.aria-label]=\"paginationTexts.ariaLabel\" class=\"nx-pagination__container\">\n        <li class=\"nx-pagination__item\">\n            <button\n                #link\n                [disabled]=\"_isPaginationPreviousDisabled()\"\n                [attr.aria-label]=\"paginationTexts.first\"\n                [class.is-disabled]=\"_isPaginationPreviousDisabled()\"\n                class=\"nx-pagination__link nx-pagination__link--first\"\n                (click)=\"onFirst()\"\n            >\n                <nx-icon class=\"nx-pagination__arrow\" [name]=\"_isRTL ? 'arrow-last' : 'arrow-first'\"></nx-icon>\n            </button>\n        </li>\n        <li class=\"nx-pagination__item nx-pagination__item-previous\">\n            <button\n                #link\n                [disabled]=\"_isPaginationPreviousDisabled()\"\n                [attr.aria-label]=\"paginationTexts.previous\"\n                [class.is-disabled]=\"_isPaginationPreviousDisabled()\"\n                class=\"nx-pagination__link nx-pagination__link--previous\"\n                (click)=\"onPrev()\"\n            >\n                <nx-icon class=\"nx-pagination__arrow\" [name]=\"_isRTL ? 'arrow-right' : 'arrow-left'\"></nx-icon>\n            </button>\n        </li>\n        <li *ngFor=\"let pageNum of getPages()\" class=\"nx-pagination__item nx-pagination__item--desktop\" [ngClass]=\"getPaginationItemClasses(pageNum)\">\n            <button\n                #link\n                class=\"nx-pagination--number\"\n                *ngIf=\"pageNum.label !== '...'\"\n                (click)=\"onPage(pageNum.value)\"\n                [attr.aria-current]=\"pageNum.value === page ? 'page' : ''\"\n                [ngClass]=\"getPaginationNumberClasses(pageNum)\"\n            >\n                {{ pageNum.label }}\n            </button>\n            <span *ngIf=\"pageNum.label === '...'\">\n                {{ pageNum.label }}\n            </span>\n        </li>\n        <li *ngFor=\"let pageNum of getMobilePages()\" class=\"nx-pagination__item nx-pagination__item--mobile\" [ngClass]=\"getPaginationItemClasses(pageNum)\">\n            <button\n                #link\n                class=\"nx-pagination--number\"\n                (click)=\"onPage(pageNum.value)\"\n                [attr.aria-current]=\"pageNum.value === page ? 'page' : ''\"\n                [ngClass]=\"getPaginationNumberClasses(pageNum)\"\n            >\n                {{ pageNum.label }}\n            </button>\n        </li>\n        <li class=\"nx-pagination__item nx-pagination__item-next\">\n            <button\n                #link\n                [disabled]=\"_isPaginationNextDisabled()\"\n                [attr.aria-label]=\"paginationTexts.next\"\n                [class.is-disabled]=\"_isPaginationNextDisabled()\"\n                class=\"nx-pagination__link nx-pagination__link--next\"\n                (click)=\"onNext()\"\n            >\n                <nx-icon class=\"nx-pagination__arrow\" [name]=\"_isRTL ? 'arrow-left' : 'arrow-right'\"></nx-icon>\n            </button>\n        </li>\n        <li class=\"nx-pagination__item\">\n            <button\n                #link\n                [disabled]=\"_isPaginationNextDisabled()\"\n                [attr.aria-label]=\"paginationTexts.last\"\n                [class.is-disabled]=\"_isPaginationNextDisabled()\"\n                class=\"nx-pagination__link nx-pagination__link--last\"\n                (click)=\"onLast()\"\n            >\n                <nx-icon class=\"nx-pagination__arrow\" [name]=\"_isRTL ? 'arrow-first' : 'arrow-last'\"></nx-icon>\n            </button>\n        </li>\n    </ul>\n</nav>\n<nav *ngIf=\"isPaginationCompactVisible()\" [attr.aria-label]=\"paginationTexts.ariaLabel\" class=\"nx-pagination-compact\">\n    <button\n        #link\n        [attr.aria-label]=\"paginationTexts.previous\"\n        class=\"nx-pagination-compact__previous\"\n        [disabled]=\"_isPaginationPreviousDisabled()\"\n        [class.is-disabled]=\"_isPaginationPreviousDisabled()\"\n        (click)=\"onPrev()\"\n    >\n        <nx-icon class=\"nx-pagination__arrow\" [name]=\"_isRTL ? 'arrow-right' : 'arrow-left'\"></nx-icon>\n        <span class=\"nx-pagination-compact__direction-label\">\n            {{ paginationTexts.previous }}\n        </span>\n    </button>\n    <div class=\"nx-pagination-compact__display\">\n        <span class=\"nx-pagination-compact__current-page\">{{ page }}</span>\n        <span class=\"nx-pagination-compact__page-separator\"> {{ paginationTexts.ofLabel }} </span>\n        <span class=\"nx-pagination-compact__total-pages\">{{ totalNumberPages }}</span>\n    </div>\n    <button\n        #link\n        class=\"nx-pagination-compact__next\"\n        [disabled]=\"_isPaginationNextDisabled()\"\n        [class.is-disabled]=\"_isPaginationNextDisabled()\"\n        [attr.aria-label]=\"paginationTexts.next\"\n        (click)=\"onNext()\"\n    >\n        <span class=\"nx-pagination-compact__direction-label\"> {{ paginationTexts.next }} </span>\n        <nx-icon class=\"nx-pagination__arrow\" [name]=\"_isRTL ? 'arrow-left' : 'arrow-right'\"></nx-icon>\n    </button>\n</nav>\n", styles: [":host button:focus{outline:none}:host button::-moz-focus-inner{border:0}.nx-pagination__container{display:flex;font-size:var(--pagination-font-size);line-height:var(--pagination-line-height);font-weight:var(--pagination-font-weight);letter-spacing:var(--pagination-letter-spacing);padding:0}.nx-pagination__item{margin:0 16px;list-style:none;font-weight:var(--pagination-item-font-weight)}.nx-pagination__item:first-child{margin:0}.nx-pagination__item:last-child{margin:0}.nx-pagination__item.is-ellipsis{color:var(--pagination-text-color)}.nx-pagination__item--expanded-view{display:block}.nx-pagination__link{color:var(--pagination-link-color);padding:0;text-decoration:none;background-color:transparent;border:0;cursor:pointer}.nx-pagination__link.is-active{color:var(--pagination-text-color);font-weight:700;cursor:default}@media screen and (-ms-high-contrast: active){.nx-pagination__link.is-active{border-bottom:4px solid windowText}}nx-icon.nx-pagination__arrow,nx-icon.nx-pagination__arrow{font-size:var(--pagination-icon-size)}.nx-pagination-compact{display:flex;font-size:var(--pagination-font-size);line-height:var(--pagination-line-height);font-weight:var(--pagination-font-weight);letter-spacing:var(--pagination-letter-spacing);padding:0}.nx-pagination-compact__display{color:var(--pagination-text-color);display:flex}.nx-pagination-compact__current-page{font-weight:700;margin-right:8px}:host-context([dir=rtl]) .nx-pagination-compact__current-page{margin-right:0;margin-right:initial;margin-left:8px}.nx-pagination-compact__total-pages{margin-left:8px}:host-context([dir=rtl]) .nx-pagination-compact__total-pages{margin-right:8px;margin-left:0;margin-left:initial}.nx-pagination-compact__next,.nx-pagination-compact__previous,.nx-pagination__arrow-last,.nx-pagination__arrow-first{color:var(--pagination-link-color);font-weight:var(--pagination-icon-font-weight);text-decoration:none;text-transform:uppercase;display:flex;align-items:center;padding:0;background-color:transparent;cursor:pointer;border:0}.nx-pagination-compact__previous{margin-right:32px}:host-context([dir=rtl]) .nx-pagination-compact__previous{margin-right:0;margin-right:initial;margin-left:32px}.nx-pagination-compact__next{margin-left:32px}:host-context([dir=rtl]) .nx-pagination-compact__next{margin-right:32px;margin-left:0;margin-left:initial}.nx-pagination-compact__direction-label{display:block;font-size:var(--pagination-compact-direction-font-size);line-height:var(--pagination-compact-direction-line-height);font-weight:var(--pagination-compact-direction-font-weight);letter-spacing:var(--pagination-compact-direction-letter-spacing)}.nx-pagination-compact__direction-label:first-child{margin-right:8px}:host-context([dir=rtl]) .nx-pagination-compact__direction-label:first-child{margin-right:0;margin-right:initial;margin-left:8px}.nx-pagination-compact__direction-label:last-child{margin-left:8px}:host-context([dir=rtl]) .nx-pagination-compact__direction-label:last-child{margin-right:8px;margin-left:0;margin-left:initial}.nx-pagination-compact__previous.is-disabled,.nx-pagination-compact__next.is-disabled,.nx-pagination__link.is-disabled{color:var(--pagination-link-disabled-color);cursor:not-allowed}@media screen and (-ms-high-contrast: active){.nx-pagination-compact__previous.is-disabled,.nx-pagination-compact__next.is-disabled,.nx-pagination__link.is-disabled{color:GrayText}}.nx-pagination-compact__previous.cdk-keyboard-focused,.nx-pagination-compact__next.cdk-keyboard-focused,.nx-pagination__link.cdk-keyboard-focused,.nx-pagination--number.cdk-keyboard-focused{box-shadow:var(--focus-box-shadow);border-radius:4px}@media screen and (-ms-high-contrast: active),(forced-colors: active){.nx-pagination-compact__previous.cdk-keyboard-focused,.nx-pagination-compact__next.cdk-keyboard-focused,.nx-pagination__link.cdk-keyboard-focused,.nx-pagination--number.cdk-keyboard-focused{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}.nx-pagination__link--next,.nx-pagination__link--previous,.nx-pagination__link--first,.nx-pagination__link--last{display:flex;align-items:center}.nx-pagination__item-next{margin-right:8px}:host-context([dir=rtl]) .nx-pagination__item-next{margin-right:0;margin-right:initial;margin-left:8px}.nx-pagination__item-previous{margin-left:8px}:host-context([dir=rtl]) .nx-pagination__item-previous{margin-right:8px;margin-left:0;margin-left:initial}.nx-pagination-compact__direction-label,.nx-pagination__link--first,.nx-pagination__link--last,.nx-pagination__item--desktop{display:flex}@media (max-width: 703px){.nx-pagination-compact__direction-label,.nx-pagination__link--first,.nx-pagination__link--last,.nx-pagination__item--desktop{display:none}}.nx-pagination__item--mobile{display:none}@media (max-width: 703px){.nx-pagination__item--mobile{display:block}}\n"] }]
        }], ctorParameters: function () {
        return [{ type: undefined, decorators: [{
                        type: Optional
                    }, {
                        type: Inject,
                        args: [NX_PAGINATION_TEXTS]
                    }] }, { type: i1.Directionality, decorators: [{
                        type: Optional
                    }] }, { type: NxPaginationUtils }, { type: i0.ChangeDetectorRef }, { type: i3.FocusMonitor }];
    }, propDecorators: { _linkElements: [{
                type: ViewChildren,
                args: ['link']
            }], page: [{
                type: Input,
                args: ['nxPage']
            }], count: [{
                type: Input,
                args: ['nxCount']
            }], perPage: [{
                type: Input,
                args: ['nxPerPage']
            }], type: [{
                type: Input,
                args: ['nxType']
            }], nxGoPrev: [{
                type: Output
            }], nxGoNext: [{
                type: Output
            }], nxGoPage: [{
                type: Output
            }] } });

class NxPaginationModule {
}
NxPaginationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPaginationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NxPaginationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPaginationModule, declarations: [NxPaginationComponent], imports: [CommonModule, NxIconModule], exports: [NxPaginationComponent] });
NxPaginationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPaginationModule, providers: [NxPaginationUtils], imports: [[CommonModule, NxIconModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxPaginationModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, NxIconModule],
                    declarations: [NxPaginationComponent],
                    exports: [NxPaginationComponent],
                    providers: [NxPaginationUtils],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { DefaultPaginationTexts, NX_PAGINATION_TEXTS, NxPaginationComponent, NxPaginationModule, NxPaginationUtils };
//# sourceMappingURL=aposin-ng-aquila-pagination.mjs.map
