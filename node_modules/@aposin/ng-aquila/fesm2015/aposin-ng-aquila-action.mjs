import { coerceBooleanProperty } from '@angular/cdk/coercion';
import * as i0 from '@angular/core';
import { Directive, Component, ChangeDetectionStrategy, ContentChild, Input, NgModule } from '@angular/core';
import * as i1 from '@angular/cdk/a11y';
import * as i2 from '@aposin/ng-aquila/icon';
import { NxIconModule } from '@aposin/ng-aquila/icon';
import * as i3 from '@angular/common';
import { CommonModule } from '@angular/common';

class NxActionIconDirective {
}
NxActionIconDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxActionIconDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
NxActionIconDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.1", type: NxActionIconDirective, selector: "[nxActionIcon]", host: { classAttribute: "nx-action__icon" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxActionIconDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[nxActionIcon]',
                    host: {
                        class: 'nx-action__icon',
                    },
                }]
        }] });

class NxActionComponent {
    constructor(_cdr, _elementRef, _focusMonitor) {
        this._cdr = _cdr;
        this._elementRef = _elementRef;
        this._focusMonitor = _focusMonitor;
        this._selected = false;
        this._expandable = false;
        this._expanded = false;
        this._focusMonitor.monitor(this._elementRef);
    }
    /** Whether this action is selected or not.  */
    set selected(value) {
        this._selected = coerceBooleanProperty(value);
        this._cdr.markForCheck();
    }
    get selected() {
        return this._selected;
    }
    /** Whether this action is expandable or not. Will add a caret icon. */
    set expandable(value) {
        this._expandable = coerceBooleanProperty(value);
        this._cdr.markForCheck();
    }
    get expandable() {
        return this._expandable;
    }
    /** Whether this action is expanded or not.
    Only works in combination with the `expandable` option set to `true`.
   */
    set expanded(value) {
        this._expanded = coerceBooleanProperty(value);
        this._cdr.markForCheck();
    }
    get expanded() {
        return this._expanded;
    }
    ngOnDestroy() {
        this._focusMonitor.stopMonitoring(this._elementRef);
    }
}
NxActionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxActionComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });
NxActionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxActionComponent, selector: "[nxAction]", inputs: { selected: "selected", expandable: "expandable", expanded: "expanded" }, host: { properties: { "class.is-expanded": "expanded", "class.is-selected": "selected", "class.is-expandable": "expandable" }, classAttribute: "nx-action" }, queries: [{ propertyName: "_iconChild", first: true, predicate: NxActionIconDirective, descendants: true }], ngImport: i0, template: "<div class=\"nx-action__wrapper\">\n    <ng-container *ngIf=\"expandable\">\n        <nx-icon class=\"nx-action__expand-icon\" name=\"chevron-right\"></nx-icon>\n    </ng-container>\n    <span class=\"nx-action-icon__container\" *ngIf=\"_iconChild\">\n        <ng-content select=\"[nxActionIcon]\"></ng-content>\n    </span>\n    <span class=\"nx-action__label\">\n        <ng-content></ng-content>\n    </span>\n</div>\n", styles: [":host(.nx-action){display:block;font-size:var(--action-font-size);line-height:var(--action-line-height);font-weight:var(--action-font-weight);letter-spacing:var(--action-letter-spacing);-webkit-appearance:none;appearance:none;outline:none;box-shadow:none;border:none;margin:0;cursor:pointer;padding:8px 16px 8px 0;width:100%;transition:all .2s ease,padding 0 none;text-decoration:none;color:var(--action-color);background-color:var(--action-background-color)}:host(.nx-action):hover{color:var(--action-hover-color);background-color:var(--action-hover-background-color)}:host(.nx-action).is-expanded{font-weight:700}:host(.nx-action).is-expanded .nx-action__expand-icon{transform:rotate(90deg)}:host(.nx-action).is-expandable .nx-action__wrapper:before{flex:0 1 32px;max-width:8px;min-width:4px}:host(.nx-action).is-selected{color:var(--action-selected-color);background-color:var(--action-selected-background-color);font-weight:700}:host(.nx-action).nx-tree-node--with-padding .nx-action__wrapper:before{flex-shrink:0}:host(.nx-action)::-moz-focus-inner{border:0}[dir=rtl] :host(.nx-action){padding:8px 0 8px 16px}:host.cdk-keyboard-focused{box-shadow:var(--focus-inset-box-shadow);border-radius:8px}@media screen and (-ms-high-contrast: active){:host.cdk-keyboard-focused{box-shadow:inset 0 0 0 4px windowText,inset 0 0 0 6px background;border:4px solid CanvasText}}.nx-action__expand-icon{display:flex;justify-content:center;transition:all .2s ease;transform:rotate(0);margin-right:8px;flex:0 0 auto;font-size:var(--action-expand-icon-size)}:host-context([dir=rtl]) .nx-action__expand-icon{margin-right:0;margin-right:initial;margin-left:8px;transform:rotate(180deg)}.nx-action__wrapper{display:flex;align-items:center;position:relative;overflow:hidden}.nx-action__wrapper:before{content:\"\";display:block;flex:0 1 32px;min-width:16px;height:1em}.nx-action-icon__container{font-size:var(--action-icon-size);padding-right:16px;flex:0 0 auto;position:relative;justify-content:center;display:flex}:host-context([dir=rtl]) .nx-action-icon__container{padding-right:0;padding-right:initial;padding-left:16px}::ng-deep .nx-action__icon{font-weight:400}::ng-deep .nx-action__icon.nx-icon--s{font-size:inherit}.nx-action__label{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;flex:1 1 50%;text-align:left}:host-context([dir=rtl]) .nx-action__label{text-align:right}@media screen and (-ms-high-contrast: active){:host(.nx-action).is-selected,:host(.nx-action):hover{-ms-high-contrast-adjust:none;background-color:highlight;color:highlightText;font-weight:400}}\n"], components: [{ type: i2.NxIconComponent, selector: "nx-icon", inputs: ["name", "outline", "fill", "size", "font"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxActionComponent, decorators: [{
            type: Component,
            args: [{ selector: '[nxAction]', host: {
                        '[class.is-expanded]': 'expanded',
                        '[class.is-selected]': 'selected',
                        '[class.is-expandable]': 'expandable',
                        class: 'nx-action',
                    }, changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"nx-action__wrapper\">\n    <ng-container *ngIf=\"expandable\">\n        <nx-icon class=\"nx-action__expand-icon\" name=\"chevron-right\"></nx-icon>\n    </ng-container>\n    <span class=\"nx-action-icon__container\" *ngIf=\"_iconChild\">\n        <ng-content select=\"[nxActionIcon]\"></ng-content>\n    </span>\n    <span class=\"nx-action__label\">\n        <ng-content></ng-content>\n    </span>\n</div>\n", styles: [":host(.nx-action){display:block;font-size:var(--action-font-size);line-height:var(--action-line-height);font-weight:var(--action-font-weight);letter-spacing:var(--action-letter-spacing);-webkit-appearance:none;appearance:none;outline:none;box-shadow:none;border:none;margin:0;cursor:pointer;padding:8px 16px 8px 0;width:100%;transition:all .2s ease,padding 0 none;text-decoration:none;color:var(--action-color);background-color:var(--action-background-color)}:host(.nx-action):hover{color:var(--action-hover-color);background-color:var(--action-hover-background-color)}:host(.nx-action).is-expanded{font-weight:700}:host(.nx-action).is-expanded .nx-action__expand-icon{transform:rotate(90deg)}:host(.nx-action).is-expandable .nx-action__wrapper:before{flex:0 1 32px;max-width:8px;min-width:4px}:host(.nx-action).is-selected{color:var(--action-selected-color);background-color:var(--action-selected-background-color);font-weight:700}:host(.nx-action).nx-tree-node--with-padding .nx-action__wrapper:before{flex-shrink:0}:host(.nx-action)::-moz-focus-inner{border:0}[dir=rtl] :host(.nx-action){padding:8px 0 8px 16px}:host.cdk-keyboard-focused{box-shadow:var(--focus-inset-box-shadow);border-radius:8px}@media screen and (-ms-high-contrast: active){:host.cdk-keyboard-focused{box-shadow:inset 0 0 0 4px windowText,inset 0 0 0 6px background;border:4px solid CanvasText}}.nx-action__expand-icon{display:flex;justify-content:center;transition:all .2s ease;transform:rotate(0);margin-right:8px;flex:0 0 auto;font-size:var(--action-expand-icon-size)}:host-context([dir=rtl]) .nx-action__expand-icon{margin-right:0;margin-right:initial;margin-left:8px;transform:rotate(180deg)}.nx-action__wrapper{display:flex;align-items:center;position:relative;overflow:hidden}.nx-action__wrapper:before{content:\"\";display:block;flex:0 1 32px;min-width:16px;height:1em}.nx-action-icon__container{font-size:var(--action-icon-size);padding-right:16px;flex:0 0 auto;position:relative;justify-content:center;display:flex}:host-context([dir=rtl]) .nx-action-icon__container{padding-right:0;padding-right:initial;padding-left:16px}::ng-deep .nx-action__icon{font-weight:400}::ng-deep .nx-action__icon.nx-icon--s{font-size:inherit}.nx-action__label{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;flex:1 1 50%;text-align:left}:host-context([dir=rtl]) .nx-action__label{text-align:right}@media screen and (-ms-high-contrast: active){:host(.nx-action).is-selected,:host(.nx-action):hover{-ms-high-contrast-adjust:none;background-color:highlight;color:highlightText;font-weight:400}}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i1.FocusMonitor }]; }, propDecorators: { _iconChild: [{
                type: ContentChild,
                args: [NxActionIconDirective]
            }], selected: [{
                type: Input
            }], expandable: [{
                type: Input
            }], expanded: [{
                type: Input
            }] } });

class NxActionModule {
}
NxActionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxActionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NxActionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxActionModule, declarations: [NxActionComponent, NxActionIconDirective], imports: [NxIconModule, CommonModule], exports: [NxActionComponent, NxActionIconDirective] });
NxActionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxActionModule, imports: [[NxIconModule, CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxActionModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [NxIconModule, CommonModule],
                    declarations: [NxActionComponent, NxActionIconDirective],
                    exports: [NxActionComponent, NxActionIconDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { NxActionComponent, NxActionIconDirective, NxActionModule };
//# sourceMappingURL=aposin-ng-aquila-action.mjs.map
