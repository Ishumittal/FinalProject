import { FocusMonitor } from '@angular/cdk/a11y';
import { BooleanInput } from '@angular/cdk/coercion';
import { ChangeDetectorRef, ElementRef, OnDestroy } from '@angular/core';
import { NxActionIconDirective } from './action-icon.directive';
import * as i0 from "@angular/core";
export declare class NxActionComponent implements OnDestroy {
    private _cdr;
    private _elementRef;
    private _focusMonitor;
    _iconChild: NxActionIconDirective;
    /** Whether this action is selected or not.  */
    set selected(value: BooleanInput);
    get selected(): BooleanInput;
    private _selected;
    /** Whether this action is expandable or not. Will add a caret icon. */
    set expandable(value: BooleanInput);
    get expandable(): BooleanInput;
    private _expandable;
    /** Whether this action is expanded or not.
    Only works in combination with the `expandable` option set to `true`.
   */
    set expanded(value: BooleanInput);
    get expanded(): BooleanInput;
    private _expanded;
    constructor(_cdr: ChangeDetectorRef, _elementRef: ElementRef, _focusMonitor: FocusMonitor);
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NxActionComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NxActionComponent, "[nxAction]", never, { "selected": "selected"; "expandable": "expandable"; "expanded": "expanded"; }, {}, ["_iconChild"], ["[nxActionIcon]", "*"]>;
}
