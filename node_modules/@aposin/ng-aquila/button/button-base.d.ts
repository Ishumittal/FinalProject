import { FocusMonitor } from '@angular/cdk/a11y';
import { BooleanInput } from '@angular/cdk/coercion';
import { ChangeDetectorRef, ElementRef, OnDestroy } from '@angular/core';
import { NxTriggerButton } from '@aposin/ng-aquila/overlay';
import * as i0 from "@angular/core";
/** Type of a button. */
export declare type NxButtonType = 'primary' | 'secondary' | 'tertiary' | 'cta' | 'emphasis';
/** Size of a button. */
export declare type NxButtonSize = 'small' | 'small-medium' | 'medium' | 'large';
/** @docs-private */
export declare class NxButtonBase implements NxTriggerButton, OnDestroy {
    private _cdr;
    private _elementRef;
    private _focusMonitor;
    private _classNames;
    /** @docs-private */
    get isPrimary(): boolean;
    /** @docs-private */
    get isSecondary(): boolean;
    /** @docs-private */
    get isTertiary(): boolean;
    /** @docs-private */
    get isCta(): boolean;
    /** @docs-private */
    get isEmphasis(): boolean;
    /** @docs-private */
    get isLarge(): boolean;
    /** @docs-private */
    get isMedium(): boolean;
    /** @docs-private */
    get isSmallMedium(): boolean;
    /** @docs-private */
    get isSmall(): boolean;
    /** @docs-private */
    get isDanger(): boolean;
    /** @docs-private */
    get isBlock(): boolean;
    /** @docs-private */
    get isNegative(): boolean;
    /** @docs-private */
    get isDisabled(): boolean | null;
    /** @docs-private */
    get isAriaDisabled(): string;
    /** @docs-private */
    type: NxButtonType;
    /** @docs-private */
    size: NxButtonSize;
    danger: boolean;
    negative: boolean;
    block: boolean;
    active: boolean;
    private _disabled;
    set disabled(value: BooleanInput);
    get disabled(): boolean;
    constructor(_cdr: ChangeDetectorRef, _elementRef: ElementRef, _focusMonitor: FocusMonitor);
    ngOnDestroy(): void;
    set classNames(value: string);
    get classNames(): string;
    /**
     * @docs-private
     * getter used for the modal component as a quickfix
     * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive
     * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a
     * way to reach the elementRef of the component until the modal gets refactored.
     */
    get elementRef(): ElementRef<any>;
    setTriggerActive(): void;
    setTriggerInactive(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NxButtonBase, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NxButtonBase, never, never, { "disabled": "disabled"; }, {}, never>;
}
