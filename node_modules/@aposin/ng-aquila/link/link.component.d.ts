import { FocusMonitor } from '@angular/cdk/a11y';
import { AfterContentInit, ChangeDetectorRef, ElementRef, OnDestroy, Renderer2 } from '@angular/core';
import { MappedStyles } from '@aposin/ng-aquila/core';
import { NxIconComponent } from '@aposin/ng-aquila/icon';
import * as i0 from "@angular/core";
/** The size of the link. */
export declare type NxLinkSize = 'small' | 'large';
/**
 * `Input('nxStyle') classNames` sets the style of the link, thereby altering the visual appearance.
 * You can use any combination of 'black', 'icon-right', 'icon-only', 'negative' or 'text'.
 */
export declare class NxLinkComponent extends MappedStyles implements AfterContentInit, OnDestroy {
    protected _renderer: Renderer2;
    private _cdr;
    private _focusMonitor;
    private _size;
    /** @docs-private */
    icon: NxIconComponent;
    /** Sets the size of the link. Default: 'small'. */
    set size(value: NxLinkSize);
    get size(): NxLinkSize;
    constructor(_elementRef: ElementRef, _renderer: Renderer2, _cdr: ChangeDetectorRef, _focusMonitor: FocusMonitor);
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    /**
     * @docs-private
     * getter used for the modal component as a quickfix
     * since button got changed from directive to component the reference used by the ngOpenModelOnClick directive
     * for nxButtons is a reference to component instance instead of an element reference. As a workaround we need a
     * way to reach the elementRef of the component until the modal gets refactored.
     */
    get elementRef(): ElementRef<any>;
    static ɵfac: i0.ɵɵFactoryDeclaration<NxLinkComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NxLinkComponent, "nx-link", never, { "classNames": "nxStyle"; "size": "size"; }, {}, ["icon"], ["*"]>;
}
