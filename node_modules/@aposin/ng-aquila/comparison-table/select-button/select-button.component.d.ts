import { FocusMonitor } from '@angular/cdk/a11y';
import { ChangeDetectorRef, ElementRef, OnDestroy } from '@angular/core';
import { NxButtonBase } from '@aposin/ng-aquila/button';
import { NxComparisonTableCell } from '../cell/cell.component';
import { NxComparisonTableBase } from '../comparison-table-base';
import * as i0 from "@angular/core";
export declare class NxComparisonTableSelectButton extends NxButtonBase implements OnDestroy {
    _cell: NxComparisonTableCell;
    private _table;
    private _selectedLabel;
    _ariaPressed: boolean;
    /** Sets the label that is displayed when the column is selected. Default: 'Selected'. */
    set selectedLabel(value: string);
    get selectedLabel(): string;
    private _unselectedLabel;
    /** Sets the label that is displayed when the column is not selected. Default: 'Select'. */
    set unselectedLabel(value: string);
    get unselectedLabel(): string;
    private _unselectedClassNames;
    /** Sets the classNames (style, size and negative) of the unselected button. Default: 'secondary small'. */
    set unselectedClassNames(value: string);
    get unselectedClassNames(): string;
    private _selectedClassNames;
    /** Sets the classNames (style, size and negative) of the selected button. Default: 'primary small'. */
    set selectedClassNames(value: string);
    get selectedClassNames(): string;
    private readonly _destroyed;
    constructor(_cdr: ChangeDetectorRef, _elementRef: ElementRef, _cell: NxComparisonTableCell, _table: NxComparisonTableBase, _focusMonitor: FocusMonitor);
    ngOnDestroy(): void;
    private _setClassNames;
    _selectCell(): void;
    _getButtonLabel(): string;
    private _setAriaPressed;
    static ɵfac: i0.ɵɵFactoryDeclaration<NxComparisonTableSelectButton, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NxComparisonTableSelectButton, "button[nxComparisonTableSelectButton]", never, { "selectedLabel": "selectedLabel"; "unselectedLabel": "unselectedLabel"; "unselectedClassNames": "unselectedClassNames"; "selectedClassNames": "selectedClassNames"; }, {}, never, never>;
}
