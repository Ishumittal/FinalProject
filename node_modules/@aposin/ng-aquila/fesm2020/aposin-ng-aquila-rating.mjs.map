{"version":3,"file":"aposin-ng-aquila-rating.mjs","sources":["../../../projects/ng-aquila/src/rating/rating.component.ts","../../../projects/ng-aquila/src/rating/rating.component.html","../../../projects/ng-aquila/src/rating/rating.module.ts","../../../projects/ng-aquila/src/rating/aposin-ng-aquila-rating.ts"],"sourcesContent":["import { FocusMonitor } from '@angular/cdk/a11y';\nimport { BooleanInput, coerceBooleanProperty, coerceNumberProperty, NumberInput } from '@angular/cdk/coercion';\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW } from '@angular/cdk/keycodes';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChildren,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NxIconComponent } from '@aposin/ng-aquila/icon';\n\n@Component({\n    selector: 'nx-rating',\n    templateUrl: './rating.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['./rating.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NxRatingComponent),\n            multi: true,\n        },\n    ],\n    host: {\n        '[class.nx-rating--negative]': 'negative',\n        '[class.nx-rating--disabled]': 'disabled',\n        '[style.--iconColor]': 'iconColor',\n    },\n})\nexport class NxRatingComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\n    private _value = 0;\n    /** Sets the selected rating 1 - 5. */\n    @Input('nxValue')\n    set value(newValue: NumberInput) {\n        this._value = coerceNumberProperty(newValue);\n        this._cdr.markForCheck();\n    }\n    get value(): number {\n        return this._value;\n    }\n\n    private _hover = 0;\n\n    private _disabled = false;\n\n    /** Whether the rating component should be disabled. */\n    @Input('nxDisabled')\n    set disabled(newValue: BooleanInput) {\n        if (this._disabled === newValue) {\n            return;\n        }\n        this._disabled = coerceBooleanProperty(newValue);\n        this._cdr.markForCheck();\n    }\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    private _negative = false;\n    /** Whether the negative colors be used. */\n    @Input('nxNegative')\n    set negative(newValue: BooleanInput) {\n        if (this._negative === newValue) {\n            return;\n        }\n        this._negative = coerceBooleanProperty(newValue);\n        this._cdr.markForCheck();\n    }\n    get negative(): boolean {\n        return this._negative;\n    }\n\n    private _startLabel = '';\n    /** Sets the label painted at the start of the rating component. */\n    @Input('nxStartLabel')\n    set startLabel(newValue: string) {\n        this._startLabel = newValue;\n        this._cdr.markForCheck();\n    }\n    get startLabel(): string {\n        return this._startLabel;\n    }\n\n    private _endLabel: string | null = null;\n    /** Sets the label painted at the end of the rating component. */\n    @Input('nxEndLabel')\n    set endLabel(newValue: string) {\n        this._endLabel = newValue;\n        this._cdr.markForCheck();\n    }\n    get endLabel(): string {\n        return this._endLabel as string;\n    }\n\n    private _ariaLabel: string[] = ['1/5', '2/5', '3/5', '4/5', '5/5'];\n    @Input('nxAriaLabel')\n    /** Sets an array of custom aria-describedby attributes for each of the stars in the component. */\n    set ariaLabel(newAriaLabels: string[]) {\n        this._ariaLabel = newAriaLabels;\n        this._cdr.markForCheck();\n    }\n    get ariaLabel(): string[] {\n        return this._ariaLabel;\n    }\n\n    @Input('nxIconColor') /** Sets the color of rating icon. */ set iconColor(color: string) {\n        this._iconColor = color;\n        this._cdr.markForCheck();\n    }\n    get iconColor(): string {\n        return this._iconColor;\n    }\n    private _iconColor = '';\n\n    /** An event is dispatched each time when the rating changes. */\n    @Output('nxValueChange') valueChange = new EventEmitter<number>();\n\n    /** @docs-private */\n    @ViewChildren(NxIconComponent, { read: ElementRef }) icons!: QueryList<ElementRef>;\n    private onTouchedCallback: () => void = () => {};\n    private onChangeCallback: (option: any) => any = (option: any) => {};\n\n    constructor(private _cdr: ChangeDetectorRef, private _focusMonitor: FocusMonitor) {}\n\n    ngAfterViewInit() {\n        this.icons.forEach(icon => this._focusMonitor.monitor(icon));\n    }\n\n    ngOnDestroy() {\n        this.icons.forEach(icon => this._focusMonitor.stopMonitoring(icon));\n    }\n\n    /** Whether the given rating is selected. */\n    isSelected(index: number) {\n        return index <= this.value || index <= this._hover;\n    }\n\n    /** Allows to set the rating. */\n    setSelection(value: number) {\n        if (!this.disabled) {\n            this.value = value;\n            this.valueChange.emit(value);\n            this.onTouchedCallback();\n            this.onChangeCallback(this.value);\n        }\n    }\n\n    /** @docs-private */\n    handleKeyUp(event: KeyboardEvent, rating: number) {\n        const keyCode = event.keyCode;\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (keyCode === ENTER) {\n            this.setSelection(rating);\n        }\n\n        if (keyCode === RIGHT_ARROW) {\n            this.value = Math.min(this.value + 1, 5);\n            const elementRef: ElementRef = this.icons.toArray()[this.value - 1];\n            this._focusMonitor.focusVia(elementRef, 'keyboard');\n        }\n\n        if (keyCode === LEFT_ARROW) {\n            this.value = Math.max(this.value - 1, 1);\n            const elementRef: ElementRef = this.icons.toArray()[this.value - 1];\n            this._focusMonitor.focusVia(elementRef, 'keyboard');\n        }\n    }\n\n    writeValue(value: number): void {\n        this.value = value;\n    }\n\n    registerOnChange(callback: (option: any) => any): void {\n        this.onChangeCallback = callback;\n    }\n\n    registerOnTouched(callback: () => void): void {\n        this.onTouchedCallback = callback;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    /** @docs-private */\n    getAriaLabel(rating: number) {\n        return this.ariaLabel[rating - 1];\n    }\n\n    /** @docs-private */\n    getIconName(rating: number) {\n        return 'star' + (this.isSelected(rating) ? '' : '-o');\n    }\n\n    /** @docs-private */\n    setHover(rating: number) {\n        if (this.disabled) {\n            return;\n        }\n        this._hover = rating;\n    }\n}\n","<div class=\"nx-rating__container\" role=\"radiogroup\">\n    <nx-icon\n        *ngFor=\"let rating of [1, 2, 3, 4, 5]\"\n        (click)=\"setSelection(rating)\"\n        (keyup)=\"handleKeyUp($event, rating)\"\n        role=\"radio\"\n        [attr.aria-label]=\"getAriaLabel(rating)\"\n        [attr.aria-checked]=\"isSelected(rating)\"\n        [tabindex]=\"disabled ? -1 : 0\"\n        class=\"nx-rating__icon\"\n        [name]=\"getIconName(rating)\"\n        (mouseenter)=\"setHover(rating)\"\n        (mouseleave)=\"setHover(0)\"\n        size=\"m\"\n    >\n    </nx-icon>\n</div>\n<div class=\"nx-rating__label\" *ngIf=\"startLabel || endLabel\">\n    <span class=\"nx-rating__label--start\">{{ startLabel }}</span>\n    <span class=\"nx-rating__label--end\">{{ endLabel }}</span>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxIconModule } from '@aposin/ng-aquila/icon';\n\nimport { NxRatingComponent } from './rating.component';\n\n@NgModule({\n    imports: [CommonModule, NxIconModule],\n    declarations: [NxRatingComponent],\n    exports: [NxRatingComponent],\n})\nexport class NxRatingModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;;;MAsCa,iBAAiB,CAAA;IA6F1B,WAAoB,CAAA,IAAuB,EAAU,aAA2B,EAAA;QAA5D,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAmB;QAAU,IAAa,CAAA,aAAA,GAAb,aAAa,CAAc;QA5FxE,IAAM,CAAA,MAAA,GAAG,CAAC,CAAC;QAWX,IAAM,CAAA,MAAA,GAAG,CAAC,CAAC;QAEX,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;QAelB,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;QAclB,IAAW,CAAA,WAAA,GAAG,EAAE,CAAC;QAWjB,IAAS,CAAA,SAAA,GAAkB,IAAI,CAAC;AAWhC,QAAA,IAAA,CAAA,UAAU,GAAa,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAkB3D,IAAU,CAAA,UAAA,GAAG,EAAE,CAAC;;AAGC,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAU,CAAC;AAI1D,QAAA,IAAA,CAAA,iBAAiB,GAAe,MAAK,GAAG,CAAC;AACzC,QAAA,IAAA,CAAA,gBAAgB,GAAyB,CAAC,MAAW,KAAI,GAAG,CAAC;KAEe;;IA1FpF,IACI,KAAK,CAAC,QAAqB,EAAA;AAC3B,QAAA,IAAI,CAAC,MAAM,GAAG,oBAAoB,CAAC,QAAQ,CAAC,CAAC;AAC7C,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;KAC5B;AACD,IAAA,IAAI,KAAK,GAAA;QACL,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;;IAOD,IACI,QAAQ,CAAC,QAAsB,EAAA;AAC/B,QAAA,IAAI,IAAI,CAAC,SAAS,KAAK,QAAQ,EAAE;YAC7B,OAAO;AACV,SAAA;AACD,QAAA,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;AACjD,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;KAC5B;AACD,IAAA,IAAI,QAAQ,GAAA;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;IAID,IACI,QAAQ,CAAC,QAAsB,EAAA;AAC/B,QAAA,IAAI,IAAI,CAAC,SAAS,KAAK,QAAQ,EAAE;YAC7B,OAAO;AACV,SAAA;AACD,QAAA,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;AACjD,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;KAC5B;AACD,IAAA,IAAI,QAAQ,GAAA;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;IAID,IACI,UAAU,CAAC,QAAgB,EAAA;AAC3B,QAAA,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;AAC5B,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;KAC5B;AACD,IAAA,IAAI,UAAU,GAAA;QACV,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;IAID,IACI,QAAQ,CAAC,QAAgB,EAAA;AACzB,QAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;KAC5B;AACD,IAAA,IAAI,QAAQ,GAAA;QACR,OAAO,IAAI,CAAC,SAAmB,CAAC;KACnC;IAGD,IAEI,SAAS,CAAC,aAAuB,EAAA;AACjC,QAAA,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;AAChC,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;KAC5B;AACD,IAAA,IAAI,SAAS,GAAA;QACT,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;IAED,IAAgE,SAAS,CAAC,KAAa,EAAA;AACnF,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACxB,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;KAC5B;AACD,IAAA,IAAI,SAAS,GAAA;QACT,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;IAaD,eAAe,GAAA;AACX,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;KAChE;IAED,WAAW,GAAA;AACP,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;KACvE;;AAGD,IAAA,UAAU,CAAC,KAAa,EAAA;QACpB,OAAO,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC;KACtD;;AAGD,IAAA,YAAY,CAAC,KAAa,EAAA;AACtB,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAChB,YAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACzB,YAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrC,SAAA;KACJ;;IAGD,WAAW,CAAC,KAAoB,EAAE,MAAc,EAAA;AAC5C,QAAA,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;QAC9B,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,OAAO,KAAK,KAAK,EAAE;AACnB,YAAA,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AAC7B,SAAA;QAED,IAAI,OAAO,KAAK,WAAW,EAAE;AACzB,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,YAAA,MAAM,UAAU,GAAe,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YACpE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;AACvD,SAAA;QAED,IAAI,OAAO,KAAK,UAAU,EAAE;AACxB,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,YAAA,MAAM,UAAU,GAAe,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YACpE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;AACvD,SAAA;KACJ;AAED,IAAA,UAAU,CAAC,KAAa,EAAA;AACpB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACtB;AAED,IAAA,gBAAgB,CAAC,QAA8B,EAAA;AAC3C,QAAA,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;KACpC;AAED,IAAA,iBAAiB,CAAC,QAAoB,EAAA;AAClC,QAAA,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;KACrC;AAED,IAAA,gBAAgB,CAAC,UAAmB,EAAA;AAChC,QAAA,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC9B;;AAGD,IAAA,YAAY,CAAC,MAAc,EAAA;QACvB,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KACrC;;AAGD,IAAA,WAAW,CAAC,MAAc,EAAA;AACtB,QAAA,OAAO,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;KACzD;;AAGD,IAAA,QAAQ,CAAC,MAAc,EAAA;QACnB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,OAAO;AACV,SAAA;AACD,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;;8GA7KQ,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iBAAiB,EAbf,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,CAAA,SAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,YAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,YAAA,EAAA,UAAA,CAAA,EAAA,UAAA,EAAA,CAAA,cAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,YAAA,EAAA,UAAA,CAAA,EAAA,SAAA,EAAA,CAAA,aAAA,EAAA,WAAA,CAAA,EAAA,SAAA,EAAA,CAAA,aAAA,EAAA,WAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,eAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,2BAAA,EAAA,UAAA,EAAA,2BAAA,EAAA,UAAA,EAAA,mBAAA,EAAA,WAAA,EAAA,EAAA,EAAA,SAAA,EAAA;AACP,QAAA;AACI,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,WAAW,EAAE,UAAU,CAAC,MAAM,iBAAiB,CAAC;AAChD,YAAA,KAAK,EAAE,IAAI;AACd,SAAA;AACJ,KAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,OAAA,EAAA,SAAA,EAgGa,eAAe,EAAA,WAAA,EAAA,IAAA,EAAA,IAAA,EAAU,UAAU,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EC/HrD,iyBAqBA,EAAA,MAAA,EAAA,CAAA,i5DAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,SAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDiBa,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAlB7B,SAAS;AACI,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,WAAW,EAEJ,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAEpC,SAAA,EAAA;AACP,wBAAA;AACI,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,WAAW,EAAE,UAAU,CAAC,uBAAuB,CAAC;AAChD,4BAAA,KAAK,EAAE,IAAI;AACd,yBAAA;qBACJ,EACK,IAAA,EAAA;AACF,wBAAA,6BAA6B,EAAE,UAAU;AACzC,wBAAA,6BAA6B,EAAE,UAAU;AACzC,wBAAA,qBAAqB,EAAE,WAAW;AACrC,qBAAA,EAAA,QAAA,EAAA,iyBAAA,EAAA,MAAA,EAAA,CAAA,i5DAAA,CAAA,EAAA,CAAA;mIAMG,KAAK,EAAA,CAAA;sBADR,KAAK;uBAAC,SAAS,CAAA;gBAeZ,QAAQ,EAAA,CAAA;sBADX,KAAK;uBAAC,YAAY,CAAA;gBAef,QAAQ,EAAA,CAAA;sBADX,KAAK;uBAAC,YAAY,CAAA;gBAef,UAAU,EAAA,CAAA;sBADb,KAAK;uBAAC,cAAc,CAAA;gBAYjB,QAAQ,EAAA,CAAA;sBADX,KAAK;uBAAC,YAAY,CAAA;gBAYf,SAAS,EAAA,CAAA;sBAFZ,KAAK;uBAAC,aAAa,CAAA;gBAU4C,SAAS,EAAA,CAAA;sBAAxE,KAAK;uBAAC,aAAa,CAAA;gBAUK,WAAW,EAAA,CAAA;sBAAnC,MAAM;uBAAC,eAAe,CAAA;gBAG8B,KAAK,EAAA,CAAA;sBAAzD,YAAY;AAAC,gBAAA,IAAA,EAAA,CAAA,eAAe,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAA;;;MEpH1C,cAAc,CAAA;;2GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,iBAHR,iBAAiB,CAAA,EAAA,OAAA,EAAA,CADtB,YAAY,EAAE,YAAY,aAE1B,iBAAiB,CAAA,EAAA,CAAA,CAAA;AAElB,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,EAJd,OAAA,EAAA,CAAA,CAAC,YAAY,EAAE,YAAY,CAAC,CAAA,EAAA,CAAA,CAAA;2FAI5B,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;oBACrC,YAAY,EAAE,CAAC,iBAAiB,CAAC;oBACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;AAC/B,iBAAA,CAAA;;;ACVD;;AAEG;;;;"}