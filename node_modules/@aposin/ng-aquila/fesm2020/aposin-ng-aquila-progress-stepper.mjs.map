{"version":3,"file":"aposin-ng-aquila-progress-stepper.mjs","sources":["../../../projects/ng-aquila/src/progress-stepper/progress-stepper.component.ts","../../../projects/ng-aquila/src/progress-stepper/progress-stepper.component.html","../../../projects/ng-aquila/src/progress-stepper/buttons.ts","../../../projects/ng-aquila/src/progress-stepper/multi/multi-step-group.component.ts","../../../projects/ng-aquila/src/progress-stepper/multi/multi-step-group.component.html","../../../projects/ng-aquila/src/progress-stepper/multi/multi-step-item.component.ts","../../../projects/ng-aquila/src/progress-stepper/multi/multi-step-item.component.html","../../../projects/ng-aquila/src/progress-stepper/multi/multi-step.component.ts","../../../projects/ng-aquila/src/progress-stepper/multi/multi-step.component.html","../../../projects/ng-aquila/src/progress-stepper/progress/progress.component.ts","../../../projects/ng-aquila/src/progress-stepper/progress/progress.component.html","../../../projects/ng-aquila/src/progress-stepper/single/single-step.component.ts","../../../projects/ng-aquila/src/progress-stepper/single/single-step.component.html","../../../projects/ng-aquila/src/progress-stepper/progress-stepper.module.ts","../../../projects/ng-aquila/src/progress-stepper/aposin-ng-aquila-progress-stepper.ts"],"sourcesContent":["import { Directionality } from '@angular/cdk/bidi';\nimport { CdkStep, CdkStepHeader, CdkStepper } from '@angular/cdk/stepper';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    QueryList,\n    SkipSelf,\n} from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@aposin/ng-aquila/utils';\nimport { Subject } from 'rxjs';\nimport { takeUntil, takeWhile } from 'rxjs/operators';\n\n// We need to reference steps in stepper and stepper in steps. To prevent circular depenedency errors\n// Provide both components in a single file. Otherwise we would have to introduce interface/abstract classes\n// shared between both implementations.\n\n@Component({\n    selector: 'nx-step',\n    templateUrl: 'progress-stepper.component.html',\n    exportAs: 'nxStep',\n    providers: [{ provide: ErrorStateMatcher, useExisting: NxStepComponent }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxStepComponent extends CdkStep implements ErrorStateMatcher, OnChanges, OnDestroy {\n    constructor(\n        @Inject(forwardRef(() => NxProgressStepperDirective)) public stepper: NxProgressStepperDirective,\n        @SkipSelf() private _errorStateMatcher: ErrorStateMatcher,\n    ) {\n        super(stepper as CdkStepper);\n\n        this.interacted = false;\n    }\n\n    private _stepControl: any;\n\n    /** The top level abstract control of the step. */\n    stepControl: any;\n\n    private _interacted!: boolean;\n\n    readonly _destroyed = new Subject<void>();\n\n    /** Custom error state matcher that checks for validity of the step form. */\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n\n        // Checks for the validity of a step form that is not submitted or touched,\n        // e.g when the user directly clicks the \"next\" button or directly on the step\n        const customErrorState = !!(control?.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n\n    ngOnChanges() {\n        // We can't use the `changes: SimpleChanges` as a parameter here\n        // because CdkStep only defines the ngOnChanges() method.\n        super.ngOnChanges();\n\n        if (this.stepControl !== this._stepControl) {\n            this._stepControl = this.stepControl;\n\n            // If a step control changes its state, the stepper needs to update.\n            if (this._stepControl) {\n                this._stepControl.statusChanges\n                    .pipe(\n                        takeWhile(() => this._stepControl === this.stepControl),\n                        takeUntil(this._destroyed),\n                    )\n                    .subscribe(() => {\n                        this.stepper._stateChanged();\n                    });\n            }\n        }\n\n        if (this.interacted !== this._interacted) {\n            this._interacted = this.interacted;\n            if (this.stepper) {\n                this.stepper._stateChanged();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n}\n\n/** @docs-private */\n@Directive({\n    selector: '[nxProgressStepper]',\n    exportAs: 'nxProgressStepper',\n})\nexport class NxProgressStepperDirective extends CdkStepper implements AfterContentInit {\n    // Do not initialize with an empty QueryList or the hasNext() function produces\n    // wrong results on init\n    /** Full list of steps inside the stepper, including inside nested steppers */\n    @ContentChildren(NxStepComponent, { descendants: true }) _steps!: QueryList<NxStepComponent>;\n\n    /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n    readonly steps: QueryList<NxStepComponent> = new QueryList<NxStepComponent>();\n\n    _stepHeader: QueryList<CdkStepHeader> = new QueryList();\n\n    /** Sets the label on the left side showing the current step label. Used for mobile viewports. */\n    @Input() currentStepLabel!: string;\n\n    constructor(private _cdr: ChangeDetectorRef, @Optional() _dir: Directionality | null, _elementRef: ElementRef<HTMLElement>) {\n        super(_dir!, _cdr, _elementRef, null);\n    }\n\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n        // Mark the component for change detection whenever the content children query changes\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._stateChanged();\n        });\n\n        // If a step control changes its state, the stepper needs to update.\n        this.steps\n            .filter(s => !!s.stepControl)\n            .forEach(step => {\n                step.stepControl.statusChanges.pipe(takeUntil(step._destroyed)).subscribe(() => {\n                    this._stateChanged();\n                });\n            });\n\n        // we need to defer change detection that the nxStepperNext and NxStepperPrevious buttons\n        // can run change detection again, because they are initialized before the stepper content\n        Promise.resolve().then(() => {\n            this._cdr.detectChanges();\n        });\n    }\n\n    /** @docs-private */\n    get hasPrevious() {\n        return this.selectedIndex - 1 >= 0;\n    }\n\n    /** @docs-private */\n    get hasNext() {\n        return this.selectedIndex + 1 < this.count;\n    }\n\n    /** @docs-private */\n    get count() {\n        return this.steps ? this.steps.length : 0;\n    }\n\n    /** @docs-private */\n    get currentStep(): NxStepComponent | null {\n        if (this.count === 0 || this.selectedIndex === -1 || !this.steps) {\n            return null;\n        }\n\n        const steps = this.steps.toArray();\n        return steps[this.selectedIndex];\n    }\n\n    /** @docs-private */\n    get nextStep(): NxStepComponent | null {\n        if (this.selectedIndex + 1 >= this.steps.length) {\n            return null;\n        }\n\n        return this.steps.toArray()[this.selectedIndex + 1];\n    }\n\n    /** @docs-private */\n    get currentLabel() {\n        const step = this.currentStep;\n        if (!step) {\n            return '';\n        }\n\n        const label = step.stepLabel || step.label;\n\n        return this.currentStepLabel && label ? `${this.currentStepLabel} ${this.selectedIndex + 1}/${this.count}: ${label}` : '';\n    }\n}\n","<ng-template><ng-content></ng-content></ng-template>\n","import { CdkStepper, CdkStepperNext, CdkStepperPrevious } from '@angular/cdk/stepper';\nimport { ChangeDetectorRef, Directive, DoCheck } from '@angular/core';\n\nimport { NxProgressStepperDirective } from './progress-stepper.component';\n\n@Directive({\n    selector: 'button[nxStepperNext]',\n    host: {\n        '[type]': 'type',\n        '[disabled]': 'disabled',\n    },\n    inputs: ['type'],\n    providers: [{ provide: CdkStepper, useExisting: NxProgressStepperDirective }],\n})\nexport class NxStepperNextDirective extends CdkStepperNext implements DoCheck {\n    /** @docs-private */\n    disabled = false;\n\n    constructor(_stepper: CdkStepper, private _cdr: ChangeDetectorRef) {\n        super(_stepper);\n    }\n\n    /**\n     * Implemented to prevent changed after checked error after stepper init.\n     * When the stepper initializes the directive is checked first before\n     * the stepper can check its content thus it doesn't know about it's children yet\n     * so _stepper.hasNext returns false and disables the buttons. In the same CD cycle\n     * after the stepper has checked its contents the button needs to be enabled resulting\n     * in the error.\n     */\n    ngDoCheck() {\n        const stepper = this._stepper as any as NxProgressStepperDirective;\n        if (this.disabled !== !stepper.hasNext) {\n            this.disabled = !stepper.hasNext;\n            this._cdr.markForCheck();\n        }\n    }\n}\n\n@Directive({\n    selector: 'button[nxStepperPrevious]',\n    host: {\n        '[type]': 'type',\n        '[disabled]': '!stepper.hasPrevious',\n    },\n    inputs: ['type'],\n    providers: [{ provide: CdkStepper, useExisting: NxProgressStepperDirective }],\n})\nexport class NxStepperPreviousDirective extends CdkStepperPrevious {\n    constructor(_stepper: CdkStepper) {\n        super(_stepper);\n    }\n\n    get stepper(): NxProgressStepperDirective {\n        return this._stepper as NxProgressStepperDirective;\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, Input, QueryList } from '@angular/core';\n\nimport { NxStepComponent } from '../progress-stepper.component';\n\n@Component({\n    templateUrl: './multi-step-group.component.html',\n    selector: 'nx-step-group',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxMultiStepperGroupComponent {\n    /** @docs-private */\n    @ContentChildren(NxStepComponent, { descendants: true }) steps!: QueryList<NxStepComponent>;\n\n    /** Sets the label of a group that is shown to the user. */\n    @Input()\n    set label(value: string) {\n        this._label = value;\n        this._cdr.markForCheck();\n    }\n    get label(): string {\n        return this._label;\n    }\n    private _label!: string;\n\n    constructor(private _cdr: ChangeDetectorRef) {}\n}\n","<ng-template><ng-content></ng-content></ng-template>\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { CdkStepHeader, CdkStepLabel } from '@angular/cdk/stepper';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnDestroy } from '@angular/core';\n\nimport { NxMultiStepperDirection } from '../progress-stepper.models';\n\n/** @docs-private */\n@Component({\n    selector: 'nx-multi-step-item',\n    templateUrl: './multi-step-item.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['./multi-step-item.component.scss'],\n    host: {\n        '[class.nx-multi-step-item--vertical]': 'direction === \"vertical\"',\n        '[class.is-selected]': 'selected',\n        '[class.is-completed]': 'completed',\n        '[class.is-active]': 'active',\n        '[class.is-disabled]': 'disabled',\n        '[class.is-last]': 'last',\n        '[attr.aria-disabled]': 'disabled ? \"true\" : null',\n        role: 'tab',\n        '[attr.aria-selected]': 'selected',\n        '[attr.aria-label]': 'label',\n    },\n})\nexport class NxMultiStepItemComponent extends CdkStepHeader implements OnDestroy {\n    /** The direction of the step */\n    @Input()\n    get direction(): NxMultiStepperDirection {\n        return this._direction;\n    }\n    set direction(value: NxMultiStepperDirection) {\n        this._direction = value;\n        this._cdr.markForCheck();\n    }\n    private _direction: NxMultiStepperDirection = 'horizontal';\n\n    /** The label of the step. */\n    @Input() label!: CdkStepLabel | string;\n\n    /** Sets the selected step. */\n    @Input()\n    get selected(): boolean {\n        return this._selected;\n    }\n    set selected(value: BooleanInput) {\n        this._selected = coerceBooleanProperty(value);\n        this._cdr.markForCheck();\n    }\n    private _selected!: boolean;\n\n    /** Sets the active step. */\n    @Input()\n    get active(): boolean {\n        return this._active;\n    }\n    set active(value: BooleanInput) {\n        this._active = coerceBooleanProperty(value);\n        this._cdr.markForCheck();\n    }\n    private _active!: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n    set disabled(value: BooleanInput) {\n        this._disabled = coerceBooleanProperty(value);\n        this._cdr.markForCheck();\n    }\n    private _disabled!: boolean;\n\n    /** Sets the last step. */\n    @Input()\n    get last(): boolean {\n        return this._last;\n    }\n    set last(value: BooleanInput) {\n        this._last = coerceBooleanProperty(value);\n        this._cdr.markForCheck();\n    }\n    private _last!: boolean;\n\n    /** Sets the step completed. */\n    @Input()\n    get completed(): boolean {\n        return this._completed;\n    }\n    set completed(value: BooleanInput) {\n        this._completed = coerceBooleanProperty(value);\n        this._cdr.markForCheck();\n    }\n    private _completed!: boolean;\n\n    constructor(private _cdr: ChangeDetectorRef, public _elementRef: ElementRef<HTMLElement>, private _focusMonitor: FocusMonitor) {\n        super(_elementRef);\n        this._focusMonitor.monitor(this._elementRef);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n}\n","<div class=\"label-box\">\n    <div class=\"dot\">\n        <div *ngIf=\"!completed && selected\" class=\"small-dot\"></div>\n        <nx-icon *ngIf=\"completed && !disabled\" name=\"check\"></nx-icon>\n    </div>\n    <div *ngIf=\"direction === 'vertical'\" class=\"label\" [attr.label]=\"label\">{{ label }}</div>\n</div>\n\n<div *ngIf=\"!last\" class=\"line\"></div>\n","import { Directionality } from '@angular/cdk/bidi';\nimport {\n    AfterContentInit,\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    Input,\n    OnDestroy,\n    Optional,\n    QueryList,\n    ViewChildren,\n} from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NxProgressStepperDirective, NxStepComponent } from '../progress-stepper.component';\nimport { NxMultiStepperDirection } from '../progress-stepper.models';\nimport { NxMultiStepperGroupComponent } from './multi-step-group.component';\nimport { NxMultiStepItemComponent } from './multi-step-item.component';\n\n@Component({\n    selector: 'nx-multi-stepper',\n    templateUrl: './multi-step.component.html',\n    styleUrls: ['../progress-stepper.component.scss', './multi-step.component.scss'],\n    providers: [{ provide: NxProgressStepperDirective, useExisting: NxMultiStepperComponent }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[class.nx-multi-stepper--vertical]': 'direction === \"vertical\"',\n    },\n})\nexport class NxMultiStepperComponent extends NxProgressStepperDirective implements OnDestroy, AfterContentInit, AfterViewChecked {\n    /**\n     * We need to set the _stepHeader property as ViewChildren here\n     * as it is a ContentChildren query in the CDK\n     */\n    @ViewChildren(NxMultiStepItemComponent) _stepHeader!: QueryList<NxMultiStepItemComponent>;\n\n    /** @docs-private */\n    @ContentChildren(NxMultiStepperGroupComponent, { descendants: true })\n    groups!: QueryList<NxMultiStepperGroupComponent>;\n\n    /** Sets the direction of the multi stepper. */\n    @Input()\n    get direction(): NxMultiStepperDirection {\n        return this._direction;\n    }\n    set direction(value: NxMultiStepperDirection) {\n        this._direction = value;\n    }\n    private _direction: NxMultiStepperDirection = 'horizontal';\n\n    constructor(_cdr: ChangeDetectorRef, @Optional() _dir: Directionality | null, _el: ElementRef<HTMLElement>) {\n        super(_cdr, _dir, _el);\n    }\n\n    ngAfterViewChecked() {\n        // the _keyManager is currently private in the CdkStepper and the CDK/Material way\n        // is to create to separate components for the vertical and horizontal stepper with no\n        // possibility to change it during runtime\n        // opened a ticket: https://github.com/angular/components/issues/21874\n        // for now the quick solution is the hacky way to access the private property\n        this['_keyManager'].withVerticalOrientation(this._direction === 'vertical');\n    }\n\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n\n        if (this.groups.length) {\n            this.steps.reset(this._stepsInGroups);\n            this.steps.notifyOnChanges();\n        }\n\n        this.groups.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this.steps.reset(this._stepsInGroups);\n            this.steps.notifyOnChanges();\n        });\n    }\n\n    ngOnDestroy(): void {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n\n    _stepDisabled(index: number): boolean {\n        const steps = this.steps.toArray();\n\n        if (this.linear && index >= 0) {\n            return steps.slice(0, index).some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control ? control.invalid || control.pending || !step.interacted : !step.completed;\n                return isIncomplete && !step.optional;\n            });\n        }\n\n        return false;\n    }\n\n    private get _stepsInGroups(): NxStepComponent[] {\n        if (this.groups.length) {\n            return this.groups.reduce<NxStepComponent[]>((steps, group) => steps.concat(group.steps.toArray()), []);\n        }\n\n        return [];\n    }\n\n    // Returns the index of a certain step\n    _getIndex(step: NxStepComponent): number {\n        return this.steps.toArray().indexOf(step);\n    }\n\n    _isGroupActive(groupIndex: number) {\n        return this.selectedIndex >= this.getGroupItemIndex(groupIndex);\n    }\n\n    _isGroupDisabled(groupIndex: number) {\n        return this._stepDisabled(this.getGroupItemIndex(groupIndex));\n    }\n\n    private getGroupItemIndex(groupIndex: number): number {\n        let count = 0;\n        const groups = this.groups.toArray();\n\n        for (let i = 0; i < groupIndex; i++) {\n            count += groups[i].steps.length;\n        }\n\n        return count;\n    }\n}\n","<span class=\"nx-progress-stepper__title\" *ngIf=\"direction === 'horizontal'\">\n    <ng-content select=\"nx-label\"></ng-content>\n</span>\n\n<div class=\"nx-multi-stepper__items\" role=\"tablist\">\n    <ng-container *ngIf=\"groups.length === 0 || direction === 'horizontal'; else groupsTemplate\">\n        <ng-container *ngFor=\"let step of steps; let i = index; let isLast = last; let isFirst = first\">\n            <nx-multi-step-item\n                (click)=\"!_stepDisabled(i) && step.select()\"\n                (keydown)=\"_onKeydown($event)\"\n                [last]=\"isLast\"\n                [tabindex]=\"_getFocusIndex() === i ? 0 : -1\"\n                [label]=\"step.stepLabel || step.label\"\n                [completed]=\"step.completed\"\n                [selected]=\"selectedIndex === i\"\n                [active]=\"selectedIndex > i\"\n                [disabled]=\"_stepDisabled(i)\"\n                [direction]=\"direction\"\n            >\n            </nx-multi-step-item>\n        </ng-container>\n    </ng-container>\n</div>\n\n<div class=\"labels-container\" *ngIf=\"direction === 'horizontal'\" role=\"tablist\">\n    <div\n        class=\"label\"\n        role=\"tab\"\n        tabindex=\"-1\"\n        [attr.aria-selected]=\"selectedIndex === i\"\n        *ngFor=\"let step of steps; let i = index\"\n        [ngClass]=\"{ 'is-disabled': _stepDisabled(i), 'is-selected': selectedIndex === i }\"\n        (click)=\"!_stepDisabled(i) && step.select()\"\n    >\n        <span>{{ step.label }}</span>\n    </div>\n</div>\n\n<div class=\"nx-progress-stepper__mobile-label\">\n    {{ currentLabel }}\n</div>\n\n<div\n    *ngFor=\"let step of steps; let i = index\"\n    class=\"nx-progress-stepper__content\"\n    role=\"tabpanel\"\n    [id]=\"_getStepContentId(i)\"\n    [attr.aria-label]=\"currentLabel\"\n    [attr.aria-expanded]=\"selectedIndex === i\"\n>\n    <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n\n<ng-template #groupsTemplate>\n    <ng-container *ngFor=\"let group of groups; let i = index\">\n        <div class=\"nx-multi-stepper__group\">\n            <div class=\"nx-multi-stepper__group-label\" [class.is-active]=\"_isGroupActive(i)\" [class.is-disabled]=\"_isGroupDisabled(i)\">\n                {{ group.label }}\n            </div>\n\n            <div class=\"nx-multi-stepper__group-items\">\n                <ng-container *ngFor=\"let step of group.steps; let isLast = last\">\n                    <nx-multi-step-item\n                        (click)=\"!_stepDisabled(_getIndex(step)) && step.select()\"\n                        (keydown)=\"_onKeydown($event)\"\n                        [tabindex]=\"_getFocusIndex() === _getIndex(step) ? 0 : -1\"\n                        [last]=\"isLast\"\n                        [label]=\"step.stepLabel || step.label\"\n                        [completed]=\"step.completed\"\n                        [selected]=\"selectedIndex === _getIndex(step)\"\n                        [active]=\"selectedIndex > _getIndex(step)\"\n                        [disabled]=\"_stepDisabled(_getIndex(step))\"\n                        [direction]=\"direction\"\n                    >\n                    </nx-multi-step-item>\n                </ng-container>\n            </div>\n        </div>\n    </ng-container>\n</ng-template>\n","import { Directionality } from '@angular/cdk/bidi';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, Optional } from '@angular/core';\nimport { clamp } from '@aposin/ng-aquila/utils';\n\nimport { NxProgressStepperDirective } from '../progress-stepper.component';\n\n@Component({\n    selector: 'nx-progress-stepper',\n    templateUrl: 'progress.component.html',\n    styleUrls: ['../progress-stepper.component.scss', './progress.component.scss'],\n    providers: [{ provide: NxProgressStepperDirective, useExisting: NxProgressStepperComponent }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxProgressStepperComponent extends NxProgressStepperDirective {\n    /** Sets the current value/progress of the progress bar. */\n    @Input()\n    get progress(): number {\n        return this._progress;\n    }\n    set progress(value: number) {\n        this._progress = clamp(value || 0);\n    }\n    private _progress = 0;\n\n    constructor(_cdr: ChangeDetectorRef, @Optional() _dir: Directionality | null, _el: ElementRef<HTMLElement>) {\n        super(_cdr, _dir, _el);\n    }\n}\n","<span class=\"nx-progress-stepper__title\">\n    <ng-content select=\"nx-label\"></ng-content>\n</span>\n\n<div class=\"nx-subprogress__items\">\n    <ng-container *ngFor=\"let step of steps; let i = index\">\n        <div\n            [class.nx-subprogress__item--inactive]=\"selectedIndex !== i && !step.completed\"\n            [attr.aria-disabled]=\"selectedIndex !== i && !step.completed\"\n            [class.nx-subprogress__item--selected]=\"selectedIndex === i\"\n            class=\"nx-subprogress__item\"\n        >\n            <div class=\"nx-subprogress__counter\">\n                <div class=\"nx-subprogress__number\">\n                    {{ i + 1 }}\n                </div>\n            </div>\n\n            <div class=\"nx-subprogress__label\">{{ step.stepLabel || step.label }}</div>\n\n            <div class=\"nx-subprogress__progress\" *ngIf=\"selectedIndex === i\">\n                <nx-progressbar [value]=\"progress\"></nx-progressbar>\n            </div>\n        </div>\n    </ng-container>\n</div>\n\n<div class=\"nx-progress-stepper__mobile-label\">\n    {{ currentLabel }}\n</div>\n\n<div\n    *ngFor=\"let step of steps; let i = index\"\n    class=\"nx-progress-stepper__content\"\n    role=\"tabpanel\"\n    [id]=\"_getStepContentId(i)\"\n    [attr.aria-label]=\"currentLabel\"\n    [attr.aria-expanded]=\"selectedIndex === i\"\n>\n    <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n","import { Directionality } from '@angular/cdk/bidi';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, Optional } from '@angular/core';\n\nimport { NxProgressStepperDirective } from '../progress-stepper.component';\n\n@Component({\n    selector: 'nx-single-stepper',\n    templateUrl: './single-step.component.html',\n    styleUrls: ['../progress-stepper.component.scss', './single-step.component.scss'],\n    providers: [{ provide: NxProgressStepperDirective, useExisting: NxSingleStepperComponent }],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxSingleStepperComponent extends NxProgressStepperDirective {\n    /** Sets the label on the right showing the next step. */\n    @Input('nextLabel')\n    get rightLabel(): string {\n        return this._rightLabel;\n    }\n    set rightLabel(v) {\n        this._rightLabel = v;\n    }\n\n    private _rightLabel = 'Next step:';\n\n    /** @docs-private */\n    get progress() {\n        return (this.selectedIndex + 1) / this.count;\n    }\n\n    /** @docs-private */\n    get currentLabel() {\n        const step = this.currentStep;\n        const label = step!.stepLabel || step!.label;\n\n        return `\n    ${this.currentStepLabel} ${this.selectedIndex + 1}/${this.count}: ${label}\n    `;\n    }\n\n    /** @docs-private */\n    get nextLabel() {\n        const step = this.nextStep;\n\n        if (step) {\n            const label = step.stepLabel || step.label;\n\n            return `\n        ${this.rightLabel} ${label}\n      `;\n        }\n\n        return null;\n    }\n\n    constructor(_cdr: ChangeDetectorRef, @Optional() _dir: Directionality | null, _el: ElementRef<HTMLElement>) {\n        super(_cdr, _dir, _el);\n    }\n}\n","<div class=\"nx-single-step-container\">\n    <span class=\"nx-progress-stepper__title\">\n        <ng-content select=\"nx-label\"></ng-content>\n    </span>\n\n    <nx-progressbar [value]=\"progress\"></nx-progressbar>\n\n    <div class=\"nx-single-step__infos\">\n        <div class=\"nx-single-step__current\">\n            {{ currentLabel }}\n        </div>\n        <div class=\"nx-single-step__next\">\n            {{ nextLabel }}\n        </div>\n    </div>\n\n    <div class=\"nx-progress-stepper__mobile-label\">\n        {{ currentLabel }}\n    </div>\n</div>\n\n<div\n    *ngFor=\"let step of steps; let i = index\"\n    class=\"nx-progress-stepper__content\"\n    role=\"tabpanel\"\n    [id]=\"_getStepContentId(i)\"\n    [attr.aria-label]=\"currentLabel\"\n    [attr.aria-expanded]=\"selectedIndex === i\"\n>\n    <ng-container [ngTemplateOutlet]=\"step.content\"></ng-container>\n</div>\n","import { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxLabelModule } from '@aposin/ng-aquila/base';\nimport { NxIconModule } from '@aposin/ng-aquila/icon';\nimport { NxProgressbarModule } from '@aposin/ng-aquila/progressbar';\n\nimport { NxStepperNextDirective, NxStepperPreviousDirective } from './buttons';\nimport { NxMultiStepperComponent } from './multi/multi-step.component';\nimport { NxMultiStepperGroupComponent } from './multi/multi-step-group.component';\nimport { NxMultiStepItemComponent } from './multi/multi-step-item.component';\nimport { NxProgressStepperComponent } from './progress/progress.component';\nimport { NxProgressStepperDirective, NxStepComponent } from './progress-stepper.component';\nimport { NxSingleStepperComponent } from './single/single-step.component';\n\n@NgModule({\n    imports: [CommonModule, CdkStepperModule, NxIconModule, NxProgressbarModule, NxLabelModule],\n    declarations: [\n        NxProgressStepperDirective,\n        NxMultiStepperComponent,\n        NxStepComponent,\n        NxStepperNextDirective,\n        NxStepperPreviousDirective,\n        NxProgressStepperComponent,\n        NxSingleStepperComponent,\n        NxMultiStepItemComponent,\n        NxMultiStepperGroupComponent,\n    ],\n    exports: [\n        NxProgressStepperDirective,\n        NxSingleStepperComponent,\n        NxProgressStepperComponent,\n        NxMultiStepperComponent,\n        NxStepComponent,\n        NxStepperNextDirective,\n        NxStepperPreviousDirective,\n        NxMultiStepperGroupComponent,\n    ],\n})\nexport class NxProgressStepperModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2","i1","i2.NxMultiStepItemComponent"],"mappings":"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"}