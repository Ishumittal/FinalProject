import { coerceBooleanProperty } from '@angular/cdk/coercion';
import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

const DEFAULT_SIZE = 'small';
class NxSpinnerComponent {
    constructor(_cdr) {
        this._cdr = _cdr;
        this._size = DEFAULT_SIZE;
        this._negative = false;
    }
    /** Sets the size of the spinner. Default is 'small'. */
    set size(value) {
        if (value !== this._size) {
            this._size = value;
            this._cdr.markForCheck();
        }
    }
    get size() {
        return this._size;
    }
    /** Whether the spinner should use a negative styling. */
    set negative(value) {
        if (value !== this._negative) {
            this._negative = coerceBooleanProperty(value);
            this._cdr.markForCheck();
        }
    }
    get negative() {
        return this._negative;
    }
}
NxSpinnerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxSpinnerComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
NxSpinnerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxSpinnerComponent, selector: "nx-spinner", inputs: { size: ["nxSize", "size"], negative: "negative" }, host: { properties: { "class.nx-spinner--small": "size === \"small\"", "class.nx-spinner--medium": "size === \"medium\"", "class.nx-spinner--large": "size === \"large\"", "class.nx-spinner--negative": "negative", "attr.role": "\"status\"", "attr.aria-busy": "\"true\"", "attr.aria-live": "\"assertive\"" } }, ngImport: i0, template: "<div class=\"nx-spinner__spin-block\">\n    <div class=\"nx-spinner__edge-left\"></div>\n    <div class=\"nx-spinner__edge-right\"></div>\n</div>\n", styles: ["@keyframes spin{0%{transform:rotate(45deg)}to{transform:rotate(405deg)}}:host{position:relative;display:block}:host(.nx-spinner--small){width:16px;height:16px}:host(.nx-spinner--medium){width:24px;height:24px}:host(.nx-spinner--large){width:40px;height:40px}.nx-spinner__spin-block{width:100%;height:100%;transform:rotate(45deg);border-style:solid;border-radius:50%;border-color:var(--spinner-indicator-color) var(--spinner-background-color) var(--spinner-background-color) var(--spinner-background-color);animation-name:spin;animation-duration:.8s;animation-iteration-count:infinite;animation-timing-function:linear}:host(.nx-spinner--small) .nx-spinner__spin-block{border-width:1.6px}:host(.nx-spinner--medium) .nx-spinner__spin-block{border-width:2.4px}:host(.nx-spinner--large) .nx-spinner__spin-block{border-width:4px}.nx-spinner__edge-left,.nx-spinner__edge-right{width:12%;height:12%;border-radius:50%;background-color:var(--spinner-indicator-color);position:absolute;top:4%}:host(.nx-spinner--small) .nx-spinner__edge-left,:host(.nx-spinner--small) .nx-spinner__edge-right{width:10%;height:10%}.nx-spinner__edge-left{left:4%}.nx-spinner__edge-right{right:4%}:host(.nx-spinner--negative) .nx-spinner__spin-block{border-color:var(--spinner-negative-indicator-color) var(--spinner-negative-background-color) var(--spinner-negative-background-color) var(--spinner-negative-background-color)}:host(.nx-spinner--negative) .nx-spinner__edge-left,:host(.nx-spinner--negative) .nx-spinner__edge-right{background-color:var(--spinner-negative-indicator-color)}@media screen and (-ms-high-contrast: active){:host .nx-spinner__spin-block,:host.nx-spinner--negative .nx-spinner__spin-block{border-color:window highlight highlight highlight}}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxSpinnerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-spinner', changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        '[class.nx-spinner--small]': 'size === "small"',
                        '[class.nx-spinner--medium]': 'size === "medium"',
                        '[class.nx-spinner--large]': 'size === "large"',
                        '[class.nx-spinner--negative]': 'negative',
                        '[attr.role]': '"status"',
                        '[attr.aria-busy]': '"true"',
                        '[attr.aria-live]': '"assertive"',
                    }, template: "<div class=\"nx-spinner__spin-block\">\n    <div class=\"nx-spinner__edge-left\"></div>\n    <div class=\"nx-spinner__edge-right\"></div>\n</div>\n", styles: ["@keyframes spin{0%{transform:rotate(45deg)}to{transform:rotate(405deg)}}:host{position:relative;display:block}:host(.nx-spinner--small){width:16px;height:16px}:host(.nx-spinner--medium){width:24px;height:24px}:host(.nx-spinner--large){width:40px;height:40px}.nx-spinner__spin-block{width:100%;height:100%;transform:rotate(45deg);border-style:solid;border-radius:50%;border-color:var(--spinner-indicator-color) var(--spinner-background-color) var(--spinner-background-color) var(--spinner-background-color);animation-name:spin;animation-duration:.8s;animation-iteration-count:infinite;animation-timing-function:linear}:host(.nx-spinner--small) .nx-spinner__spin-block{border-width:1.6px}:host(.nx-spinner--medium) .nx-spinner__spin-block{border-width:2.4px}:host(.nx-spinner--large) .nx-spinner__spin-block{border-width:4px}.nx-spinner__edge-left,.nx-spinner__edge-right{width:12%;height:12%;border-radius:50%;background-color:var(--spinner-indicator-color);position:absolute;top:4%}:host(.nx-spinner--small) .nx-spinner__edge-left,:host(.nx-spinner--small) .nx-spinner__edge-right{width:10%;height:10%}.nx-spinner__edge-left{left:4%}.nx-spinner__edge-right{right:4%}:host(.nx-spinner--negative) .nx-spinner__spin-block{border-color:var(--spinner-negative-indicator-color) var(--spinner-negative-background-color) var(--spinner-negative-background-color) var(--spinner-negative-background-color)}:host(.nx-spinner--negative) .nx-spinner__edge-left,:host(.nx-spinner--negative) .nx-spinner__edge-right{background-color:var(--spinner-negative-indicator-color)}@media screen and (-ms-high-contrast: active){:host .nx-spinner__spin-block,:host.nx-spinner--negative .nx-spinner__spin-block{border-color:window highlight highlight highlight}}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { size: [{
                type: Input,
                args: ['nxSize']
            }], negative: [{
                type: Input
            }] } });

class NxSpinnerModule {
}
NxSpinnerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NxSpinnerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxSpinnerModule, declarations: [NxSpinnerComponent], imports: [CommonModule], exports: [NxSpinnerComponent] });
NxSpinnerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxSpinnerModule, providers: [], imports: [[CommonModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxSpinnerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NxSpinnerComponent],
                    imports: [CommonModule],
                    exports: [NxSpinnerComponent],
                    bootstrap: [],
                    providers: [],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { NxSpinnerComponent, NxSpinnerModule };
//# sourceMappingURL=aposin-ng-aquila-spinner.mjs.map
