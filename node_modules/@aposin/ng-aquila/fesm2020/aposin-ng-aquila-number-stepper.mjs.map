{"version":3,"file":"aposin-ng-aquila-number-stepper.mjs","sources":["../../../projects/ng-aquila/src/number-stepper/auto-resize.directive.ts","../../../projects/ng-aquila/src/number-stepper/number-stepper-intl.ts","../../../projects/ng-aquila/src/number-stepper/number-stepper.component.ts","../../../projects/ng-aquila/src/number-stepper/number-stepper.component.html","../../../projects/ng-aquila/src/number-stepper/number-stepper-prefix.directive.ts","../../../projects/ng-aquila/src/number-stepper/number-stepper-suffix.directive.ts","../../../projects/ng-aquila/src/number-stepper/number-stepper.module.ts","../../../projects/ng-aquila/src/number-stepper/aposin-ng-aquila-number-stepper.ts"],"sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { AfterViewInit, ChangeDetectorRef, Directive, ElementRef, HostBinding, Input, OnDestroy, Renderer2 } from '@angular/core';\nimport { getFontShorthand } from '@aposin/ng-aquila/utils';\n\n/** @docs-private */\n@Directive({\n    selector: 'input[nxAutoResize]',\n})\nexport class NxAutoResizeDirective implements AfterViewInit, OnDestroy {\n    @HostBinding('style.width.px') width!: number;\n\n    private _resize = true;\n    @Input('nxAutoResize')\n    set resize(value: BooleanInput) {\n        this._resize = coerceBooleanProperty(value);\n        if (this._resize) {\n            this._addEventListener();\n            this.updateInputWidth();\n        } else {\n            this._removeEventListener();\n        }\n    }\n    get resize(): boolean {\n        return this._resize;\n    }\n\n    constructor(private _element: ElementRef, private _renderer: Renderer2, private _cdr: ChangeDetectorRef) {\n        this.updateInputWidth = this.updateInputWidth.bind(this);\n    }\n\n    ngAfterViewInit() {\n        if (this.resize) {\n            this._addEventListener();\n        }\n    }\n\n    ngOnDestroy() {\n        this._removeEventListener();\n    }\n\n    updateInputWidth() {\n        const measureCanvas = this._renderer.createElement('canvas');\n\n        const ctx = measureCanvas.getContext('2d');\n        const styles = window.getComputedStyle(this._element.nativeElement);\n\n        ctx.font = getFontShorthand(styles);\n\n        const metrics = ctx.measureText(this._element.nativeElement.value);\n\n        const padding = this.sumStyles(styles.paddingLeft, styles.paddingRight);\n        const border = this.sumStyles(styles.borderLeftWidth, styles.borderRightWidth);\n        // the pixels are needed, because despite the correct calculation the last pixels of a number are always cut\n        const newWidth = metrics.width + padding + border + 16;\n\n        // Limit to own given minimal width\n        const parsed = parseFloat(styles.minWidth);\n        this.width = Math.max(Number.isNaN(parsed) ? 0 : parsed, newWidth);\n\n        // needed when the outer component is onPush\n        this._cdr.markForCheck();\n    }\n\n    _addEventListener() {\n        this._element.nativeElement.addEventListener('input', this.updateInputWidth, true);\n        this._element.nativeElement.addEventListener('change', this.updateInputWidth, true);\n    }\n\n    _removeEventListener() {\n        this._element.nativeElement.removeEventListener('input', this.updateInputWidth, true);\n        this._element.nativeElement.removeEventListener('change', this.updateInputWidth, true);\n    }\n\n    sumStyles(left: string, right: string) {\n        return (parseInt(left, 10) || 0) + (parseInt(right, 10) || 0);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class NxNumberStepperIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** The aria label for the decrement '-' button */\n    decrementAriaLabel = 'Decrement';\n    /** The aria label for the increment '+' button */\n    incrementAriaLabel = 'Increment';\n}\n","import { BooleanInput, coerceBooleanProperty, NumberInput } from '@angular/cdk/coercion';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnDestroy,\n    Output,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator } from '@angular/forms';\nimport { MappedStyles } from '@aposin/ng-aquila/core';\nimport { mapClassNames, pad } from '@aposin/ng-aquila/utils';\nimport { Decimal } from 'decimal.js';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NxAutoResizeDirective } from './auto-resize.directive';\nimport { NxNumberStepperIntl } from './number-stepper-intl';\n\nconst SIZE_MAPPING = {\n    big: 'nx-stepper--big',\n    normal: '',\n};\nconst DEFAULT_CLASSES = ['nx-stepper'];\nconst INPUT_CLASSES = ['nx-stepper__input'];\n\nconst ALLOWED_CHARACTERS = new RegExp(/^-?\\d+(\\.\\d+)?$/g);\nconst CUSTOM_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NxNumberStepperComponent),\n    multi: true,\n};\nconst CUSTOM_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => NxNumberStepperComponent),\n    multi: true,\n};\n\nlet nextUniqueId = 0;\n\n/**\n * `Input('nxSize') classNames` defines the size of the number stepper.\n * Values: big | normal. Default: normal\n */\n@Component({\n    selector: 'nx-number-stepper',\n    templateUrl: 'number-stepper.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['number-stepper.component.scss'],\n    inputs: ['classNames: nxSize'],\n    host: {\n        '[class.is-negative]': 'negative',\n        '[class.is-disabled]': 'disabled',\n    },\n    providers: [CUSTOM_VALUE_ACCESSOR, CUSTOM_VALIDATOR],\n})\nexport class NxNumberStepperComponent extends MappedStyles implements AfterViewInit, ControlValueAccessor, Validator, OnDestroy {\n    private _step = 1;\n    private _min = 0;\n    private _max = 100;\n    private _value: number | null = 0;\n    private _label!: string;\n    private _incrementAriaLabel = '';\n    private _decrementAriaLabel = '';\n    private _inputAriaLabel = '';\n    private _resize = false;\n    private _negative = false;\n    private _leadingZero = true;\n    private _disabled = false;\n\n    /** @docs-private */\n    numberInputValue!: string;\n\n    /** @docs-private */\n    inputClassNames: string = mapClassNames('regular', INPUT_CLASSES);\n\n    /** @docs-private */\n    inputId = `nx-number-stepper-${nextUniqueId++}`;\n\n    /** @docs-private */\n    inputWidth!: number;\n\n    /** @docs-private */\n    ariaDescribedBy: string | null = null;\n\n    /** @docs-private */\n    @ViewChild('customLabel') ngContentWrapper!: ElementRef;\n\n    /** @docs-private */\n    @ViewChild(NxAutoResizeDirective, { static: true }) autoResize!: NxAutoResizeDirective;\n\n    /** @docs-private */\n    @ViewChild('nativeInput') nativeInput!: ElementRef;\n\n    /** An event emitted on value change. */\n    @Output('nxValueChange') valueChange = new EventEmitter<number>();\n\n    /** Whether the input should be resized. Default: false */\n    @Input('nxResize')\n    set resize(value: BooleanInput) {\n        this._resize = coerceBooleanProperty(value);\n        this._cdr.markForCheck();\n    }\n    get resize(): boolean {\n        return this._resize;\n    }\n\n    get label(): string {\n        return this._label;\n    }\n\n    /** Defines the the label shown above the stepper input. */\n    @Input('nxLabel')\n    set label(value: string) {\n        if (this._label !== value) {\n            this._label = value;\n            this._cdr.markForCheck();\n        }\n    }\n\n    /** Sets the aria-label for the increment button. */\n    @Input()\n    set incrementAriaLabel(value: string) {\n        this._incrementAriaLabel = value;\n    }\n\n    get incrementAriaLabel(): string {\n        return this._incrementAriaLabel;\n    }\n\n    /** Sets the aria-label for the decrement button. */\n    @Input()\n    set decrementAriaLabel(value: string) {\n        this._decrementAriaLabel = value;\n    }\n\n    get decrementAriaLabel(): string {\n        return this._decrementAriaLabel;\n    }\n\n    /** Sets the aria-label for the input of the number stepper. */\n    @Input()\n    set inputAriaLabel(value: string) {\n        this._inputAriaLabel = value;\n    }\n\n    get inputAriaLabel(): string {\n        return this._inputAriaLabel;\n    }\n\n    /** Sets the step size. Default: 1 */\n    @Input('nxStep')\n    set step(value: NumberInput) {\n        // only internal changes no need to call markForCheck\n        this._step = Number(value);\n    }\n\n    get step(): number {\n        return this._step;\n    }\n\n    /** Sets the minimum accepted number. Default: 0 */\n    @Input('nxMin')\n    set min(value: NumberInput) {\n        this._min = Number(value);\n    }\n\n    get min(): number {\n        return this._min;\n    }\n\n    /** Sets the maximum accepted number. Default: 100 */\n    @Input('nxMax')\n    set max(value: NumberInput) {\n        this._max = Number(value);\n    }\n\n    get max(): number {\n        return this._max;\n    }\n\n    get value(): number | null {\n        return this._value;\n    }\n\n    /** Sets the value of the number-stepper. */\n    @Input('nxValue')\n    set value(value: number | null) {\n        this._value = value as number;\n        if (this._value) {\n            this.setInputValue(this._value);\n        } else {\n            this.setInputValue(0);\n        }\n        this._cdr.markForCheck();\n    }\n\n    /** Whether the negative set of styling should be used. */\n    @Input()\n    set negative(value: BooleanInput) {\n        if (this._negative !== value) {\n            this._negative = coerceBooleanProperty(value);\n            this._cdr.markForCheck();\n        }\n    }\n    get negative(): boolean {\n        return this._negative;\n    }\n\n    /** Whether the number stepper value should have a leading zero.\n     *\n     * Default value is true.\n     */\n    @Input()\n    set leadingZero(value: BooleanInput) {\n        if (this._leadingZero !== value) {\n            this._leadingZero = coerceBooleanProperty(value);\n            this.setInputValue(this.value);\n            this._cdr.markForCheck();\n        }\n    }\n    get leadingZero(): boolean {\n        return this._leadingZero;\n    }\n\n    /** Whether the user input in the number stepper should be disabled.\n     *\n     * Default value is false.\n     */\n    @Input('nxDisabled')\n    set disabled(value: BooleanInput) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(private _cdr: ChangeDetectorRef, _renderer: Renderer2, _elementRef: ElementRef, public _intl: NxNumberStepperIntl) {\n        super(SIZE_MAPPING, _elementRef, _renderer, DEFAULT_CLASSES);\n\n        this._intl.changes.pipe(takeUntil(this._destroyed)).subscribe(() => this._cdr.markForCheck());\n    }\n\n    ngAfterViewInit() {\n        if (this.ngContentWrapper) {\n            this.ariaDescribedBy = this.ngContentWrapper.nativeElement.children.length > 0 ? `label-for-${this.inputId}` : '';\n        }\n        this.setInputValue(this._value);\n    }\n\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n\n    /** @docs-private */\n    setInputValue(value: number | null) {\n        const parsedValue = value ? value : 0;\n        if (this.leadingZero) {\n            this.numberInputValue = pad(parsedValue.toString(), 2);\n        } else {\n            this.numberInputValue = parsedValue.toString();\n        }\n\n        if (this.nativeInput) {\n            // update the native input value with the transformed value.\n            this.nativeInput.nativeElement.value = this.numberInputValue;\n        }\n\n        // use timeout to get the current value of numberInputValue\n        setTimeout(() => {\n            this.triggerResize();\n        });\n    }\n\n    /* ControlValueAccessor Implementations */\n    writeValue(value: number | null): void {\n        this.value = value;\n    }\n\n    private onChangeCallback: (value: number | null) => void = () => {};\n\n    registerOnChange(onChange: (value: number | null) => void): void {\n        this.onChangeCallback = onChange;\n    }\n    /** @docs-private */\n    onTouchedCallback: () => void = () => {};\n\n    registerOnTouched(onTouched: () => void): void {\n        this.onTouchedCallback = onTouched;\n    }\n\n    /**\n     * Disables the stepper. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this._disabled = isDisabled;\n        this._cdr.markForCheck();\n    }\n\n    /** @docs-private */\n    onInputChange(event: Event) {\n        if (this.validateUserInput((event.target as HTMLInputElement).value)) {\n            this._value = Number((event.target as HTMLInputElement).value);\n        } else {\n            this._value = null;\n        }\n\n        // setInputValue() should be called so that numberInputValue is updated with the user input\n        if (this._value !== null) {\n            this.setInputValue(this._value);\n        }\n\n        this.valueChange.emit(this._value!);\n        this.onChangeCallback(this._value);\n    }\n\n    /** @docs-private */\n    validateUserInput(input: string) {\n        return !!input.match(ALLOWED_CHARACTERS);\n    }\n\n    /** @docs-private */\n    incrementOnClick() {\n        this._increment();\n        this.onTouchedCallback();\n    }\n\n    /** @docs-private */\n    incrementOnKey(event: Event) {\n        this._increment();\n        event.preventDefault();\n    }\n\n    /** @docs-private */\n    _increment() {\n        let newValue;\n        if (this.isBetweenLimits(this._value || 0)) {\n            newValue = this.getNextGreaterValue(this._value || 0);\n        } else {\n            newValue = this.enforceLimits(this._value || 0);\n        }\n        this.value = newValue;\n        this.setInputValue(this.value);\n        this.valueChange.emit(this._value!);\n        this.onChangeCallback(this._value);\n    }\n\n    /** @docs-private */\n    triggerResize() {\n        if (this.resize) {\n            this.autoResize.updateInputWidth();\n            this._cdr.markForCheck();\n        }\n    }\n\n    /** @docs-private */\n    decrementOnClick() {\n        this._decrement();\n        this.onTouchedCallback();\n    }\n\n    /** @docs-private */\n    decrementOnKey(event: Event) {\n        this._decrement();\n        event.preventDefault();\n    }\n\n    /** @docs-private */\n    _decrement() {\n        let newValue;\n        if (this.isBetweenLimits(this._value || 0)) {\n            newValue = this.getNextLowerValue(this._value || 0);\n        } else {\n            newValue = this.enforceLimits(this._value || 0);\n        }\n        this.value = newValue;\n        this.setInputValue(this.value);\n        this.valueChange.emit(this._value!);\n        this.onChangeCallback(this._value);\n    }\n\n    /** @docs-private */\n    enforceLimits(value: number): number {\n        if (value > this._max) {\n            return this._max;\n        } else if (value < this._min) {\n            return this._min;\n        }\n        return value;\n    }\n\n    /** @docs-private */\n    getNextLowerValue(start: number): number {\n        // if there is an invalid input start is null\n        if (!start) {\n            start = 0;\n        }\n\n        let next: number;\n        if (this.isValidStep(start)) {\n            next = new Decimal(start).minus(new Decimal(this._step)).toNumber();\n        } else {\n            next = new Decimal(start).toNearest(this._step, Decimal.ROUND_DOWN).toNumber();\n        }\n        return this.enforceLimits(next);\n    }\n\n    /** @docs-private */\n    getNextGreaterValue(start: number) {\n        let next;\n        if (!start) {\n            start = 0;\n        }\n        if (this.isValidStep(start)) {\n            next = new Decimal(start).plus(new Decimal(this._step)).toNumber();\n        } else {\n            next = new Decimal(start).toNearest(this._step, Decimal.ROUND_UP).toNumber();\n        }\n        return this.enforceLimits(next);\n    }\n\n    /** @docs-private */\n    isBetweenLimits(value: number | Decimal) {\n        return value <= this._max && value >= this._min;\n    }\n\n    /** @docs-private */\n    isMinimum() {\n        return this._value === this._min;\n    }\n\n    /** @docs-private */\n    isMaximum() {\n        return this._value === this._max;\n    }\n\n    /** @docs-private */\n    isValidStep(value: number | Decimal | null) {\n        if (value === null) {\n            value = new Decimal(0);\n        }\n        const min = new Decimal(this._min);\n        const valueDec = new Decimal(value);\n        const checkValue = min.minus(valueDec).mod(new Decimal(this._step)).toNumber();\n\n        if (this.isBetweenLimits(value) && (this.isMinimum() || this.isMaximum() || checkValue === 0)) {\n            return true;\n        }\n        return false;\n    }\n\n    /** @docs-private */\n    userInputToNumber(value: string): number {\n        return parseInt(value, 10) || 0;\n    }\n\n    _validateFn() {\n        // the manual user input must match min + n * step, e.g. minimum 1 step 2: 1, 3, 5, 7 etc.\n        if (!this.isValidStep(this._value)) {\n            return { nxNumberStepperStepError: 'Value is not a valid step' };\n        } else if (this._value === null) {\n            return { nxNumberStepperFormatError: 'Not a valid number' };\n        }\n        return null;\n    }\n\n    /** @docs-private */\n    validate(c: FormControl) {\n        return this._validateFn();\n    }\n\n    get _buttonType(): string {\n        return 'secondary' + (this.negative ? ' negative' : '');\n    }\n}\n","<div *ngIf=\"label\" class=\"nx-stepper__label\">\n    <label [for]=\"inputId\">\n        {{ label }}\n    </label>\n</div>\n<div class=\"nx-stepper__label\" #customLabel *ngIf=\"!label\" [id]=\"ariaDescribedBy\">\n    <ng-content></ng-content>\n</div>\n<div class=\"nx-stepper__input-container\">\n    <button\n        [attr.aria-label]=\"decrementAriaLabel || _intl.decrementAriaLabel\"\n        [nxButton]=\"_buttonType\"\n        class=\"nx-stepper__down nx-stepper__control\"\n        (click)=\"decrementOnClick()\"\n        [disabled]=\"disabled || (value || 0) <= min\"\n        type=\"button\"\n    >\n        <nx-icon name=\"minus\" size=\"s\"></nx-icon>\n    </button>\n    <div class=\"nx-stepper__input-wrapper\">\n        <div class=\"nx-stepper__inner-wrapper\">\n            <ng-content select=\"nx-number-stepper-prefix\"></ng-content>\n\n            <input\n                type=\"number\"\n                [nxAutoResize]=\"resize\"\n                [attr.aria-describedby]=\"ariaDescribedBy\"\n                [attr.aria-label]=\"inputAriaLabel\"\n                [id]=\"inputId\"\n                [ngClass]=\"inputClassNames\"\n                (input)=\"onInputChange($event)\"\n                (blur)=\"onTouchedCallback()\"\n                (keydown.arrowup)=\"incrementOnKey($event)\"\n                (keydown.arrowdown)=\"decrementOnKey($event)\"\n                #nativeInput\n                spellcheck=\"false\"\n                [disabled]=\"disabled\"\n            />\n\n            <ng-content select=\"nx-number-stepper-suffix\"></ng-content>\n        </div>\n        <div class=\"nx-stepper__input-underline\"></div>\n    </div>\n\n    <button\n        [attr.aria-label]=\"incrementAriaLabel || _intl.incrementAriaLabel\"\n        [nxButton]=\"_buttonType\"\n        class=\"nx-stepper__up nx-stepper__control\"\n        (click)=\"incrementOnClick()\"\n        [disabled]=\"disabled || (value || 0) >= max\"\n        type=\"button\"\n    >\n        <nx-icon name=\"plus\" size=\"s\"></nx-icon>\n    </button>\n</div>\n","import { Directive } from '@angular/core';\n\n/** Directive used to pass a suffix to the number stepper. */\n@Directive({\n    selector: 'nx-number-stepper-prefix',\n    host: {\n        class: 'nx-stepper__prefix',\n    },\n})\nexport class NxNumberStepperPrefixDirective {}\n","import { Directive } from '@angular/core';\n\n/** Directive used to pass a suffix to the number stepper. */\n@Directive({\n    selector: 'nx-number-stepper-suffix',\n    host: {\n        class: 'nx-stepper__suffix',\n    },\n})\nexport class NxNumberStepperSuffixDirective {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NxButtonModule } from '@aposin/ng-aquila/button';\nimport { NxIconModule } from '@aposin/ng-aquila/icon';\nimport { NxInputModule } from '@aposin/ng-aquila/input';\n\nimport { NxAutoResizeDirective } from './auto-resize.directive';\nimport { NxNumberStepperComponent } from './number-stepper.component';\nimport { NxNumberStepperIntl } from './number-stepper-intl';\nimport { NxNumberStepperPrefixDirective } from './number-stepper-prefix.directive';\nimport { NxNumberStepperSuffixDirective } from './number-stepper-suffix.directive';\n\n@NgModule({\n    imports: [NxInputModule, FormsModule, NxIconModule, NxButtonModule, CommonModule],\n    exports: [NxNumberStepperComponent, NxAutoResizeDirective, NxNumberStepperPrefixDirective, NxNumberStepperSuffixDirective],\n    declarations: [NxNumberStepperComponent, NxAutoResizeDirective, NxNumberStepperPrefixDirective, NxNumberStepperSuffixDirective],\n    providers: [NxNumberStepperIntl],\n})\nexport class NxNumberStepperModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.NxNumberStepperIntl","i5.NxAutoResizeDirective"],"mappings":"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"}