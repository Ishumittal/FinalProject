{"version":3,"file":"aposin-ng-aquila-card.mjs","sources":["../../../projects/ng-aquila/src/card/card.component.ts","../../../projects/ng-aquila/src/card/card-footer.component.ts","../../../projects/ng-aquila/src/card/card-footer.component.html","../../../projects/ng-aquila/src/card/card-header.component.ts","../../../projects/ng-aquila/src/card/card-header.component.html","../../../projects/ng-aquila/src/card/selectable-card-change-event.ts","../../../projects/ng-aquila/src/card/selectable-card.component.ts","../../../projects/ng-aquila/src/card/selectable-card.component.html","../../../projects/ng-aquila/src/card/card.module.ts","../../../projects/ng-aquila/src/card/aposin-ng-aquila-card.ts"],"sourcesContent":["import { FocusMonitor } from '@angular/cdk/a11y';\nimport { ChangeDetectionStrategy, Component, ElementRef, OnDestroy } from '@angular/core';\n\n@Component({\n    template: '<ng-content></ng-content>',\n    styleUrls: ['card.scss'],\n    selector: 'nx-card',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'nx-card',\n    },\n})\nexport class NxCardComponent implements OnDestroy {\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        // we still listen for focus in case the user set a tabindex on the element\n        // the focus monitor only adds the cdk-keyboard-focus class if the element is focusable\n        // meaning it needs a tabindex in this case\n        this._focusMonitor.monitor(this._elementRef);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n/**\n * @deprecated Place all your content directly into the <nx-card> or <nx-selectable-card> instead.\n * @deletion-target 13.0.0\n */\n@Component({\n    selector: 'nx-card-footer',\n    templateUrl: './card-footer.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxCardFooterComponent {}\n","<ng-content></ng-content>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n/**\n * @deprecated Place all your content directly into the <nx-card> or <nx-selectable-card> instead.\n * @deletion-target 13.0.0\n */\n@Component({\n    selector: 'nx-card-header',\n    templateUrl: './card-header.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxCardHeaderComponent {}\n","<ng-content></ng-content>\n","import { NxSelectableCardComponent } from './selectable-card.component';\n\nexport class NxSelectableCardChangeEvent {\n    constructor(\n        /** The checked value of the selectable card. */\n        public checked: boolean,\n        /** The value of the selectable card. */\n        public value: string,\n        /** The component instance of the selectable card which emitted the change event. */\n        public card: NxSelectableCardComponent,\n    ) {}\n}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { NxErrorComponent } from '@aposin/ng-aquila/base';\nimport { ErrorStateMatcher } from '@aposin/ng-aquila/utils';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { NxSelectableCardChangeEvent } from './selectable-card-change-event';\n\nlet nextId = 0;\n\nexport type NxSelectableCardAppearance = 'expert' | 'default';\n\n/**\n * Represents the default options for the selectable card.\n * It can be configured using the `NX_SELECTABLE_CARD_DEFAULT_OPTIONS` injection token.\n */\nexport interface SelectableCardDefaultOptions {\n    /**\n     * Sets the default appearance. (optional)\n     */\n    appearance?: NxSelectableCardAppearance;\n}\n\nexport const SELECTABLE_CARD_DEFAULT_OPTIONS = new InjectionToken<SelectableCardDefaultOptions>('SELECTABLE_CARD_DEFAULT_OPTIONS');\n\n@Component({\n    selector: 'nx-selectable-card',\n    templateUrl: './selectable-card.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['./selectable-card.component.scss'],\n    host: {\n        '[class.is-disabled]': 'disabled',\n        '[class.has-error]': '_errorState',\n        '[attr.aria-invalid]': '_errorState',\n        'attr.role': 'checkbox',\n        '[attr.aria-checked]': 'checked',\n    },\n})\nexport class NxSelectableCardComponent implements ControlValueAccessor, DoCheck, AfterContentInit, OnDestroy, AfterViewInit {\n    private _id = `nx-selectable-card-${nextId++}`;\n    private _checked = false;\n    private _disabled = false;\n    private _value = '';\n    private _name = '';\n    private _negative = false;\n    private _tabindex = '0';\n    private _required: boolean | undefined;\n    private _appearance: NxSelectableCardAppearance | undefined;\n\n    _errorListIds = '';\n\n    @ContentChildren(NxErrorComponent) _errorList!: QueryList<NxErrorComponent>;\n    @ViewChild('input') _nativeInput!: ElementRef<HTMLElement>;\n\n    _errorState = false;\n\n    /** An event is dispatched each time the selectable card value is changed */\n    @Output()\n    selectionChange: EventEmitter<NxSelectableCardChangeEvent> = new EventEmitter<NxSelectableCardChangeEvent>();\n\n    /** An event is dispatched each time the selectable card value is changed */\n    @Output() checkedChange = new EventEmitter<boolean>();\n\n    /**\n     * ** Expert option **\n     *\n     * Sets the appearance of the small stage. Default: 'default'\n     */\n    @Input()\n    set appearance(value: NxSelectableCardAppearance) {\n        if (value !== this.appearance) {\n            this._appearance = value;\n            this._cdr.markForCheck();\n        }\n    }\n\n    get appearance(): NxSelectableCardAppearance {\n        return this._appearance || this._defaultOptions?.appearance || 'default';\n    }\n\n    /**\n     * Id of the selectable card.\n     *\n     * If not set, the selectable card gets an incremented value by default.\n     */\n    @Input()\n    set id(value: string) {\n        if (value !== this._id) {\n            this._id = value;\n            this._cdr.markForCheck();\n        }\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    /** Whether the selectable card  is checked. */\n    @Input()\n    set checked(value: BooleanInput) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n            this._cdr.markForCheck();\n        }\n    }\n\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    /** The value attribute of the native input element  */\n    @Input()\n    get value(): string {\n        return this._value;\n    }\n\n    set value(value: string) {\n        if (value) {\n            this._value = value;\n        }\n\n        this._cdr.markForCheck();\n    }\n\n    /** Whether the selectable card is disabled. */\n    @Input()\n    set disabled(value: BooleanInput) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._cdr.markForCheck();\n        }\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    /**\n     * Whether the selectable card is negative.\n     * @deprecated Obsolete as negative state is not implemented.\n     * @deletion-target 12.0.0\n     */\n    @Input()\n    set negative(value: BooleanInput) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._negative) {\n            this._negative = newValue;\n            this._cdr.markForCheck();\n        }\n    }\n\n    get negative(): boolean {\n        return this._negative;\n    }\n\n    /** Whether the selectable card is required. */\n    @Input()\n    get required(): boolean {\n        return !!this._required;\n    }\n    set required(value: BooleanInput) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /** Name of the selectable card. */\n    @Input()\n    get name(): string {\n        return this._name;\n    }\n\n    set name(value: string) {\n        this._name = value;\n    }\n\n    /** The tabindex of the selectable card. */\n    @Input()\n    get tabindex(): string {\n        if (this.disabled) {\n            return '-1';\n        }\n\n        return this._tabindex;\n    }\n\n    set tabindex(value: string) {\n        this._tabindex = value;\n    }\n\n    @HostBinding('class.is-expert')\n    get _isExpert() {\n        return this.appearance === 'expert';\n    }\n\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _cdr: ChangeDetectorRef,\n        private _errorStateMatcher: ErrorStateMatcher,\n        @Optional() @Self() public ngControl: NgControl | null,\n        @Optional() private _parentForm: NgForm | null,\n        @Optional() private _parentFormGroup: FormGroupDirective | null,\n        private _focusMonitor: FocusMonitor,\n        @Optional() @Inject(SELECTABLE_CARD_DEFAULT_OPTIONS) private _defaultOptions: SelectableCardDefaultOptions | null,\n    ) {\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._nativeInput);\n    }\n\n    ngAfterContentInit() {\n        this._errorList.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._errorListIds = this._getErrorListIds();\n            this._cdr.markForCheck();\n        });\n\n        this._errorListIds = this._getErrorListIds();\n    }\n\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._focusMonitor.stopMonitoring(this._nativeInput);\n    }\n\n    /** @docs-private */\n    onChangeCallback = (_: any) => {};\n\n    registerOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n\n    onTouchedCallback = (_: any) => {};\n\n    registerOnTouched(onTouched: any): void {\n        this.onTouchedCallback = onTouched;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    writeValue(value: any): void {\n        this.checked = !!value;\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribed to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this._updateErrorState();\n        }\n    }\n\n    _updateErrorState() {\n        const oldState = this._errorState;\n        const parent = this._parentFormGroup || this._parentForm;\n        const control = this.ngControl ? (this.ngControl.control as FormControl) : null;\n        const newState = this._errorStateMatcher.isErrorState(control, parent);\n\n        if (newState !== oldState) {\n            this._errorState = newState;\n            this._cdr.markForCheck();\n        }\n    }\n\n    /** Toggles the checked state of the selectable card . */\n    toggle() {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n        }\n    }\n\n    _onInputClick(event: Event): void {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // stop the propagation of the native click on the checkbox input so that a click is not triggered twice\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        if (!this.disabled) {\n            this.toggle();\n            this._emitChangeEvent();\n        }\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n\n    private _emitChangeEvent() {\n        const event = new NxSelectableCardChangeEvent(this.checked, this.value, this);\n        this.onChangeCallback(this.checked);\n        this.selectionChange.emit(event);\n        this.checkedChange.emit(this.checked);\n    }\n\n    private _getErrorListIds(): string {\n        return this._errorList.map((errorItem: NxErrorComponent) => errorItem.id).join(' ');\n    }\n}\n","<input\n    #input\n    type=\"checkbox\"\n    [checked]=\"checked\"\n    [value]=\"value || null\"\n    [attr.disabled]=\"disabled || null\"\n    (change)=\"_onInteractionEvent($event)\"\n    (blur)=\"onTouchedCallback($event)\"\n    [attr.id]=\"id\"\n    [attr.name]=\"name\"\n    (click)=\"_onInputClick($event)\"\n    [required]=\"required\"\n    [attr.aria-required]=\"required\"\n    [attr.tabindex]=\"tabindex\"\n    [attr.aria-invalid]=\"_errorState\"\n    [attr.aria-describedby]=\"_errorListIds || null\"\n/>\n\n<label [attr.for]=\"id\">\n    <span class=\"checkbox\" *ngIf=\"appearance === 'default'; else expert\">\n        <nx-icon *ngIf=\"checked\" name=\"check\" aria-hidden=\"true\"></nx-icon>\n    </span>\n\n    <div class=\"content\">\n        <ng-content select=\"nx-card-header\"></ng-content>\n        <ng-content></ng-content>\n        <ng-content select=\"nx-card-footer\"></ng-content>\n    </div>\n</label>\n\n<ng-content *ngIf=\"_errorState\" select=\"nx-error\"></ng-content>\n\n<ng-template #expert>\n    <nx-icon name=\"check-circle\" size=\"s\" aria-hidden=\"true\" class=\"checkmark\"> </nx-icon>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxErrorModule } from '@aposin/ng-aquila/base';\nimport { NxCheckboxModule } from '@aposin/ng-aquila/checkbox';\nimport { NxIconModule } from '@aposin/ng-aquila/icon';\n\nimport { NxCardComponent } from './card.component';\nimport { NxCardFooterComponent } from './card-footer.component';\nimport { NxCardHeaderComponent } from './card-header.component';\nimport { NxSelectableCardComponent } from './selectable-card.component';\n\n@NgModule({\n    declarations: [NxCardComponent, NxSelectableCardComponent, NxCardHeaderComponent, NxCardFooterComponent],\n    exports: [NxCardComponent, NxSelectableCardComponent, NxCardHeaderComponent, NxCardFooterComponent, NxErrorModule],\n    imports: [CommonModule, NxIconModule, NxErrorModule, NxCheckboxModule],\n})\nexport class NxCardModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}