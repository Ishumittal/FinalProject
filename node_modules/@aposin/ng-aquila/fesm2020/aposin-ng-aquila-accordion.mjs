import { CdkAccordion, CdkAccordionItem } from '@angular/cdk/accordion';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import * as i0 from '@angular/core';
import { Directive, Input, Component, ChangeDetectionStrategy, Optional, SkipSelf, ContentChild, Host, NgModule } from '@angular/core';
import * as i3 from '@angular/cdk/portal';
import { TemplatePortal, PortalModule } from '@angular/cdk/portal';
import { CommonModule } from '@angular/common';
import * as i3$1 from '@aposin/ng-aquila/icon';
import { NxIconModule } from '@aposin/ng-aquila/icon';
import { Subject, merge } from 'rxjs';
import { startWith, filter, take, takeUntil } from 'rxjs/operators';
import { trigger, state, style, transition, animate } from '@angular/animations';
import * as i2 from '@angular/cdk/collections';
import { ENTER, SPACE } from '@angular/cdk/keycodes';
import * as i2$1 from '@angular/cdk/a11y';

const DEFAULT_TYPE$1 = 'regular';
class NxAccordionDirective extends CdkAccordion {
    constructor() {
        super(...arguments);
        this._style = 'regular';
    }
    /**
     * Value for the styling that should be chosen.
     * Default value: 'regular'
     */
    set style(value) {
        value = value ? value : DEFAULT_TYPE$1;
        const [newValue] = value.match(/regular|light|extra-light/) || [DEFAULT_TYPE$1];
        this._style = newValue;
    }
    get style() {
        return this._style;
    }
    /** Whether the negative set of styles should be used. */
    set negative(value) {
        this._negative = coerceBooleanProperty(value);
    }
    get negative() {
        return !!this._negative;
    }
}
NxAccordionDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxAccordionDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
NxAccordionDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.1", type: NxAccordionDirective, selector: "nx-accordion", inputs: { style: ["nxStyle", "style"], negative: "negative" }, host: { attributes: { "role": "presentation" }, properties: { "class.nx-accordion": "true" } }, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxAccordionDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'nx-accordion',
                    host: {
                        '[class.nx-accordion]': 'true',
                        role: 'presentation',
                    },
                }]
        }], propDecorators: { style: [{
                type: Input,
                args: ['nxStyle']
            }], negative: [{
                type: Input
            }] } });

const nxAccordionAnimations = {
    bodyExpansion: trigger('bodyExpansion', [
        state('closed', style({ height: '0px', visibility: 'hidden' })),
        state('open', style({ height: '*', visibility: 'visible' })),
        transition('open <=> closed', animate('.5s cubic-bezier(0.86, 0, 0.07, 1)')),
    ]),
    indicatorRotate: trigger('indicatorRotate', [
        state('closed', style({ transform: 'rotate(0deg)' })),
        state('open', style({ transform: 'rotate(180deg)' })),
        transition('open <=> closed', animate('.3s ease')),
    ]),
};

class NxExpansionPanelBodyDirective {
    constructor(_template) {
        this._template = _template;
    }
}
NxExpansionPanelBodyDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxExpansionPanelBodyDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
NxExpansionPanelBodyDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.1", type: NxExpansionPanelBodyDirective, selector: "[nxExpansionPanelBody]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxExpansionPanelBodyDirective, decorators: [{
            type: Directive,
            args: [{ selector: '[nxExpansionPanelBody]' }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });

let nextId = 0;
const DEFAULT_TYPE = 'regular';
class NxExpansionPanelComponent extends CdkAccordionItem {
    constructor(
    /** @docs-private */ accordion, // not typed as nullable: super class does not support `null`
    _cdr, _expansionDispatcher, _viewContainerRef) {
        super(accordion, _cdr, _expansionDispatcher);
        this.accordion = accordion;
        this._viewContainerRef = _viewContainerRef;
        this._negative = null;
        this._accordionStyle = DEFAULT_TYPE;
        this._style = null;
        this._headerId = `nx-expansion-panel-header-${nextId++}`;
        /** Stream that emits for changes in `@Input` properties. */
        this._inputChanges = new Subject();
    }
    /** Whether the negative set of styles should be used. */
    set negative(value) {
        this._negative = coerceBooleanProperty(value);
    }
    get negative() {
        return this._negative;
    }
    /**
     * Value for the styling that should be chosen.
     * Default value: 'regular'.
     */
    set style(value) {
        value = value ? value : DEFAULT_TYPE;
        const [newValue] = value.match(/regular|light|extra-light/) || [DEFAULT_TYPE];
        this._style = newValue;
        this._accordionStyle = newValue;
    }
    get style() {
        return this._style;
    }
    /** @docs-private */
    get portal() {
        return this._portal;
    }
    ngAfterContentInit() {
        if (this.lazyContent) {
            // Render the content as soon as the panel becomes open.
            this.opened
                .pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1))
                .subscribe(() => {
                this._portal = new TemplatePortal(this.lazyContent._template, this._viewContainerRef);
            });
        }
        // Inherit appearance given by the accordion (if any).
        if (this.accordion) {
            if (this.style === null && this.accordion.style !== null) {
                this.style = this.accordion.style;
            }
            if (this.negative === null && this.accordion.negative !== null) {
                this.negative = this.accordion.negative;
            }
        }
    }
    ngOnChanges(changes) {
        this._inputChanges.next(changes);
    }
    ngOnDestroy() {
        super.ngOnDestroy();
        this._inputChanges.complete();
    }
    /** @docs-private */
    getOpenState() {
        return this.expanded ? 'open' : 'closed';
    }
}
NxExpansionPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxExpansionPanelComponent, deps: [{ token: NxAccordionDirective, optional: true, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i2.UniqueSelectionDispatcher }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });
NxExpansionPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxExpansionPanelComponent, selector: "nx-expansion-panel", inputs: { negative: "negative", style: ["nxStyle", "style"] }, host: { properties: { "class.nx-expanded": "expanded", "class.nx-expansion-panel--light": "_accordionStyle === \"light\"", "class.nx-expansion-panel--regular": "_accordionStyle === \"regular\"", "class.nx-expansion-panel--extra-light": "_accordionStyle === \"extra-light\"", "class.nx-expansion-panel--negative": "negative", "class.is-disabled": "disabled" } }, providers: [
        // Provide NxAccordionDirective as undefined to prevent nested expansion panels from registering
        // to the same accordion.
        { provide: NxAccordionDirective, useValue: undefined },
    ], queries: [{ propertyName: "lazyContent", first: true, predicate: NxExpansionPanelBodyDirective, descendants: true }], exportAs: ["NxExpansionPanelComponent"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<ng-content select=\"nx-expansion-panel-header\"></ng-content>\n\n<div class=\"nx-expansion-panel__content\" role=\"region\" [@bodyExpansion]=\"getOpenState()\" [attr.aria-labelledby]=\"_headerId\" [id]=\"id\">\n    <div class=\"nx-expansion-panel__body\">\n        <ng-content></ng-content>\n        <ng-template [cdkPortalOutlet]=\"portal\"></ng-template>\n    </div>\n</div>\n", styles: [":host{display:block}:host(.nx-expansion-panel--negative) ::ng-deep div.nx-expansion-panel__body *{color:var(--negative)}.nx-expansion-panel__content{overflow:hidden;display:block}.nx-expansion-panel__body{padding:var(--accordion-regular-body-padding);font-size:var(--accordion-body-font-size);line-height:var(--accordion-body-line-height);font-weight:var(--accordion-body-font-weight);letter-spacing:var(--accordion-body-letter-spacing)}@media (max-width: 703px){.nx-expansion-panel__body{padding:var(--accordion-regular-mobile-body-padding)}}:host(.nx-expansion-panel--regular):not(:first-child){margin-top:var(--accordion-regular-header-top-margin)}:host(.nx-expansion-panel--regular) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--accordion-regular-border-color)}:host(.nx-expansion-panel--regular):last-child,:host(.nx-expansion-panel--regular):only-child{box-shadow:0 1px 0 0 var(--accordion-regular-border-color)}@media (max-width: 703px){:host(.nx-expansion-panel--regular):not(:first-child){margin-top:0}:host(.nx-expansion-panel--regular) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--accordion-regular-mobile-border-color)}:host(.nx-expansion-panel--regular):last-child ::ng-deep .nx-expansion-panel__header-content,:host(.nx-expansion-panel--regular):only-child ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--accordion-regular-mobile-border-color),inset 0 -1px 0 0 var(--accordion-regular-mobile-separator-color)}:host(.nx-expansion-panel--regular).nx-expanded ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--accordion-regular-mobile-border-color),inset 0 -1px 0 0 var(--accordion-regular-mobile-separator-color)}}:host(.nx-expansion-panel--light) .nx-expansion-panel__body{padding:var(--accordion-light-body-padding)}@media (max-width: 703px){:host(.nx-expansion-panel--light) .nx-expansion-panel__body{padding:var(--accordion-light-mobile-body-padding)}}:host(.nx-expansion-panel--light):not(.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--accordion-light-border-color)}:host(.nx-expansion-panel--light):not(.nx-expansion-panel--negative):last-child,:host(.nx-expansion-panel--light):not(.nx-expansion-panel--negative):only-child{box-shadow:0 1px 0 0 var(--accordion-light-border-color)}@media (max-width: 703px){:host(.nx-expansion-panel--regular.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--negative-01)}:host(.nx-expansion-panel--regular.nx-expansion-panel--negative):last-child ::ng-deep .nx-expansion-panel__header-content,:host(.nx-expansion-panel--regular.nx-expansion-panel--negative):only-child ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--negative-01),inset 0 -1px 0 0 var(--negative-01)}:host(.nx-expansion-panel--regular.nx-expansion-panel--negative).nx-expanded ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--negative-01),inset 0 -1px 0 0 var(--negative-01)}}:host(.nx-expansion-panel--light.nx-expansion-panel--negative){color:var(--negative)}:host(.nx-expansion-panel--light.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--negative)}:host(.nx-expansion-panel--light.nx-expansion-panel--negative):last-child,:host(.nx-expansion-panel--light.nx-expansion-panel--negative):only-child{box-shadow:0 1px 0 0 var(--negative)}:host(.nx-expansion-panel--extra-light):not(:first-child){margin-top:var(--accordion-extra-light-header-top-margin)}:host(.nx-expansion-panel--extra-light) .nx-expansion-panel__body{padding:var(--accordion-extra-light-body-padding)}@media screen and (-ms-high-contrast: active){:host{border-color:windowText}:host ::ng-deep .nx-expansion-panel__header-content{color:buttonText}:host.nx-expansion-panel--regular ::ng-deep .nx-expansion-panel__header-content{border:1px solid buttonText}:host.is-disabled ::ng-deep .nx-expansion-panel__header-content{border-color:GrayText}:host.nx-expansion-panel--light.nx-expansion-panel--negative ::ng-deep .nx-expansion-panel__header-content,:host.nx-expansion-panel--light:not(.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 windowText}:host.nx-expansion-panel--light.nx-expansion-panel--negative:last-child,:host.nx-expansion-panel--light.nx-expansion-panel--negative:only-child,:host.nx-expansion-panel--light:not(.nx-expansion-panel--negative):last-child,:host.nx-expansion-panel--light:not(.nx-expansion-panel--negative):only-child{box-shadow:0 1px 0 0 windowText;border-bottom:1px solid CanvasText}}\n"], directives: [{ type: i3.CdkPortalOutlet, selector: "[cdkPortalOutlet]", inputs: ["cdkPortalOutlet"], outputs: ["attached"], exportAs: ["cdkPortalOutlet"] }], animations: [nxAccordionAnimations.bodyExpansion], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxExpansionPanelComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-expansion-panel', exportAs: 'NxExpansionPanelComponent', changeDetection: ChangeDetectionStrategy.OnPush, animations: [nxAccordionAnimations.bodyExpansion], host: {
                        '[class.nx-expanded]': 'expanded',
                        '[class.nx-expansion-panel--light]': '_accordionStyle === "light"',
                        '[class.nx-expansion-panel--regular]': '_accordionStyle === "regular"',
                        '[class.nx-expansion-panel--extra-light]': '_accordionStyle === "extra-light"',
                        '[class.nx-expansion-panel--negative]': 'negative',
                        '[class.is-disabled]': 'disabled',
                    }, providers: [
                        // Provide NxAccordionDirective as undefined to prevent nested expansion panels from registering
                        // to the same accordion.
                        { provide: NxAccordionDirective, useValue: undefined },
                    ], template: "<ng-content select=\"nx-expansion-panel-header\"></ng-content>\n\n<div class=\"nx-expansion-panel__content\" role=\"region\" [@bodyExpansion]=\"getOpenState()\" [attr.aria-labelledby]=\"_headerId\" [id]=\"id\">\n    <div class=\"nx-expansion-panel__body\">\n        <ng-content></ng-content>\n        <ng-template [cdkPortalOutlet]=\"portal\"></ng-template>\n    </div>\n</div>\n", styles: [":host{display:block}:host(.nx-expansion-panel--negative) ::ng-deep div.nx-expansion-panel__body *{color:var(--negative)}.nx-expansion-panel__content{overflow:hidden;display:block}.nx-expansion-panel__body{padding:var(--accordion-regular-body-padding);font-size:var(--accordion-body-font-size);line-height:var(--accordion-body-line-height);font-weight:var(--accordion-body-font-weight);letter-spacing:var(--accordion-body-letter-spacing)}@media (max-width: 703px){.nx-expansion-panel__body{padding:var(--accordion-regular-mobile-body-padding)}}:host(.nx-expansion-panel--regular):not(:first-child){margin-top:var(--accordion-regular-header-top-margin)}:host(.nx-expansion-panel--regular) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--accordion-regular-border-color)}:host(.nx-expansion-panel--regular):last-child,:host(.nx-expansion-panel--regular):only-child{box-shadow:0 1px 0 0 var(--accordion-regular-border-color)}@media (max-width: 703px){:host(.nx-expansion-panel--regular):not(:first-child){margin-top:0}:host(.nx-expansion-panel--regular) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--accordion-regular-mobile-border-color)}:host(.nx-expansion-panel--regular):last-child ::ng-deep .nx-expansion-panel__header-content,:host(.nx-expansion-panel--regular):only-child ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--accordion-regular-mobile-border-color),inset 0 -1px 0 0 var(--accordion-regular-mobile-separator-color)}:host(.nx-expansion-panel--regular).nx-expanded ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--accordion-regular-mobile-border-color),inset 0 -1px 0 0 var(--accordion-regular-mobile-separator-color)}}:host(.nx-expansion-panel--light) .nx-expansion-panel__body{padding:var(--accordion-light-body-padding)}@media (max-width: 703px){:host(.nx-expansion-panel--light) .nx-expansion-panel__body{padding:var(--accordion-light-mobile-body-padding)}}:host(.nx-expansion-panel--light):not(.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--accordion-light-border-color)}:host(.nx-expansion-panel--light):not(.nx-expansion-panel--negative):last-child,:host(.nx-expansion-panel--light):not(.nx-expansion-panel--negative):only-child{box-shadow:0 1px 0 0 var(--accordion-light-border-color)}@media (max-width: 703px){:host(.nx-expansion-panel--regular.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--negative-01)}:host(.nx-expansion-panel--regular.nx-expansion-panel--negative):last-child ::ng-deep .nx-expansion-panel__header-content,:host(.nx-expansion-panel--regular.nx-expansion-panel--negative):only-child ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--negative-01),inset 0 -1px 0 0 var(--negative-01)}:host(.nx-expansion-panel--regular.nx-expansion-panel--negative).nx-expanded ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--negative-01),inset 0 -1px 0 0 var(--negative-01)}}:host(.nx-expansion-panel--light.nx-expansion-panel--negative){color:var(--negative)}:host(.nx-expansion-panel--light.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 var(--negative)}:host(.nx-expansion-panel--light.nx-expansion-panel--negative):last-child,:host(.nx-expansion-panel--light.nx-expansion-panel--negative):only-child{box-shadow:0 1px 0 0 var(--negative)}:host(.nx-expansion-panel--extra-light):not(:first-child){margin-top:var(--accordion-extra-light-header-top-margin)}:host(.nx-expansion-panel--extra-light) .nx-expansion-panel__body{padding:var(--accordion-extra-light-body-padding)}@media screen and (-ms-high-contrast: active){:host{border-color:windowText}:host ::ng-deep .nx-expansion-panel__header-content{color:buttonText}:host.nx-expansion-panel--regular ::ng-deep .nx-expansion-panel__header-content{border:1px solid buttonText}:host.is-disabled ::ng-deep .nx-expansion-panel__header-content{border-color:GrayText}:host.nx-expansion-panel--light.nx-expansion-panel--negative ::ng-deep .nx-expansion-panel__header-content,:host.nx-expansion-panel--light:not(.nx-expansion-panel--negative) ::ng-deep .nx-expansion-panel__header-content{box-shadow:inset 0 1px 0 0 windowText}:host.nx-expansion-panel--light.nx-expansion-panel--negative:last-child,:host.nx-expansion-panel--light.nx-expansion-panel--negative:only-child,:host.nx-expansion-panel--light:not(.nx-expansion-panel--negative):last-child,:host.nx-expansion-panel--light:not(.nx-expansion-panel--negative):only-child{box-shadow:0 1px 0 0 windowText;border-bottom:1px solid CanvasText}}\n"] }]
        }], ctorParameters: function () { return [{ type: NxAccordionDirective, decorators: [{
                    type: Optional
                }, {
                    type: SkipSelf
                }] }, { type: i0.ChangeDetectorRef }, { type: i2.UniqueSelectionDispatcher }, { type: i0.ViewContainerRef }]; }, propDecorators: { negative: [{
                type: Input
            }], style: [{
                type: Input,
                args: ['nxStyle']
            }], lazyContent: [{
                type: ContentChild,
                args: [NxExpansionPanelBodyDirective]
            }] } });

class NxExpansionPanelHeaderComponent {
    constructor(
    /** @docs-private */ panel, _cdr, _elementRef, _focusMonitor) {
        this.panel = panel;
        this._cdr = _cdr;
        this._elementRef = _elementRef;
        this._focusMonitor = _focusMonitor;
        this._destroyed = new Subject();
        merge(panel.opened, panel.closed, panel._inputChanges.pipe(filter(changes => !!(changes.hideToggle || changes.disabled))))
            .pipe(takeUntil(this._destroyed))
            .subscribe(() => this._cdr.markForCheck());
        this._focusMonitor.monitor(this._elementRef);
    }
    ngOnDestroy() {
        this._destroyed.next();
        this._destroyed.complete();
        this._focusMonitor.stopMonitoring(this._elementRef);
    }
    /** @docs-private */
    isExpanded() {
        return this.panel.expanded;
    }
    /** @docs-private */
    getOpenState() {
        return this.panel.getOpenState();
    }
    _getPanelId() {
        return this.panel.id;
    }
    /**
     * Toggle the expansion panel.
     */
    toggle() {
        this.panel.toggle();
    }
    /** @docs-private */
    keydown(event) {
        switch (event.keyCode) {
            case SPACE:
            case ENTER:
                event.preventDefault();
                this.toggle();
                break;
            default:
        }
    }
}
NxExpansionPanelHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxExpansionPanelHeaderComponent, deps: [{ token: NxExpansionPanelComponent, host: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i2$1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });
NxExpansionPanelHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.3.1", type: NxExpansionPanelHeaderComponent, selector: "nx-expansion-panel-header", host: { attributes: { "role": "button" }, listeners: { "keydown": "keydown($event)", "click": "toggle()" }, properties: { "class.nx-expanded": "isExpanded()", "attr.id": "panel._headerId", "attr.tabindex": "panel.disabled ? -1 : 0", "attr.aria-controls": "_getPanelId()", "attr.aria-expanded": "isExpanded()", "attr.aria-disabled": "panel.disabled", "class.is-disabled": "panel.disabled" }, classAttribute: "nx-expansion-panel__header" }, ngImport: i0, template: "<div class=\"nx-expansion-panel__header-content\">\n    <ng-content select=\"nx-expansion-panel-title\"></ng-content>\n    <ng-content select=\"nx-expansion-panel-description\"></ng-content>\n    <nx-icon [@indicatorRotate]=\"getOpenState()\" class=\"nx-expansion-panel__chevron\" name=\"chevron-down\"> </nx-icon>\n</div>\n", styles: [":host:focus{outline:none}.nx-expansion-panel__header-content{width:100%;cursor:pointer;align-items:center;display:flex;justify-content:space-between;position:relative;outline:none;border:none;padding:var(--accordion-regular-header-padding);color:var(--accordion-regular-header-text-color);background:var(--accordion-regular-header-background-color)}@media (max-width: 703px){.nx-expansion-panel__header-content{padding:var(--accordion-regular-mobile-header-padding)}}:host-context(.nx-expansion-panel--regular):not(.is-disabled) .nx-expansion-panel__header-content:hover{color:var(--accordion-regular-header-hover-text-color)}:host-context(.nx-expansion-panel--regular):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron{color:var(--accordion-regular-hover-chevron-color)}::ng-deep .nx-expansion-panel__header-title{font-size:var(--accordion-regular-font-size);line-height:var(--accordion-regular-line-height);font-weight:var(--accordion-regular-font-weight);letter-spacing:var(--accordion-regular-letter-spacing);text-align:left;margin-right:32px}@media (max-width: 703px){::ng-deep .nx-expansion-panel__header-title{font-size:var(--accordion-regular-mobile-font-size);line-height:var(--accordion-regular-mobile-line-height);font-weight:var(--accordion-regular-mobile-font-weight);letter-spacing:var(--accordion-regular-mobile-letter-spacing);margin-right:16px}}:host-context([dir=rtl]) ::ng-deep .nx-expansion-panel__header-title{text-align:right;margin-right:0;margin-right:initial;margin-left:32px}@media (max-width: 703px){:host-context([dir=rtl]) ::ng-deep .nx-expansion-panel__header-title{margin-right:0;margin-right:initial;margin-left:16px}}:host .nx-expansion-panel__chevron{pointer-events:none;font-size:var(--accordion-chevron-size)}:host(:not(.is-disabled)) .nx-expansion-panel__chevron{color:var(--accordion-regular-chevron-color)}:host-context(.nx-expansion-panel--light) .nx-expansion-panel__header-content{padding:var(--accordion-light-header-padding);margin-top:0;background:transparent}@media (max-width: 703px){:host-context(.nx-expansion-panel--light) .nx-expansion-panel__header-content{padding:var(--accordion-light-mobile-header-padding)}}:host-context(.nx-expansion-panel--light) .nx-expansion-panel__chevron{color:var(--accordion-light-chevron-color)}:host-context(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__header-title{font-size:var(--accordion-light-font-size);line-height:var(--accordion-light-line-height);font-weight:var(--accordion-light-font-weight);letter-spacing:var(--accordion-light-letter-spacing)}@media (max-width: 703px){:host-context(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__header-title{font-size:var(--accordion-light-mobile-font-size);line-height:var(--accordion-light-mobile-line-height);font-weight:var(--accordion-light-mobile-font-weight);letter-spacing:var(--accordion-light-mobile-letter-spacing)}}:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)) .nx-expansion-panel__header-content{color:var(--accordion-light-header-text-color)}:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)):not(.is-disabled) .nx-expansion-panel__header-content:hover{color:var(--accordion-light-header-hover-text-color)}:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron{color:var(--accordion-light-hover-chevron-color)}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__header-content{color:var(--negative)}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__chevron{color:var(--negative)}:host-context(.nx-expansion-panel--extra-light) .nx-expansion-panel__header-content{padding:0;margin-top:0;background:transparent;justify-content:flex-start;width:-webkit-max-content;width:max-content;max-width:100%;color:var(--accordion-extra-light-header-text-color);border-radius:4px}:host-context(.nx-expansion-panel--extra-light) .nx-expansion-panel__chevron{color:var(--accordion-extra-light-chevron-color)}:host-context(.nx-expansion-panel--extra-light) ::ng-deep .nx-expansion-panel__header-title{font-size:var(--accordion-extra-light-font-size);line-height:var(--accordion-extra-light-line-height);font-weight:var(--accordion-extra-light-font-weight);letter-spacing:var(--accordion-extra-light-letter-spacing);margin-right:8px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}:host-context([dir=rtl] .nx-expansion-panel--extra-light) ::ng-deep .nx-expansion-panel__header-title{margin-left:8px;margin-right:0}:host-context(.nx-expansion-panel--extra-light.nx-expansion-panel--negative) .nx-expansion-panel__header-content{color:var(--negative)}:host-context(.nx-expansion-panel--extra-light.nx-expansion-panel--negative) .nx-expansion-panel__chevron{color:var(--negative)}:host-context(.nx-expansion-panel--extra-light.nx-expansion-panel--negative).is-disabled .nx-expansion-panel__header-content{color:var(--negative-dimmed)}:host-context(.nx-expansion-panel--extra-light.nx-expansion-panel--negative).is-disabled .nx-expansion-panel__chevron{color:var(--negative-dimmed)}:host.is-disabled.is-disabled .nx-expansion-panel__chevron,:host.is-disabled.is-disabled .nx-expansion-panel__header-content{cursor:not-allowed;color:var(--accordion-disabled-color)}:host.cdk-keyboard-focused .nx-expansion-panel__header-content{box-shadow:var(--focus-box-shadow);z-index:1}@media screen and (-ms-high-contrast: active),(forced-colors: active){:host.cdk-keyboard-focused .nx-expansion-panel__header-content{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}@media screen and (-ms-high-contrast: active){:host{-ms-high-contrast-adjust:none}:host-context(.nx-expansion-panel--regular):not(.is-disabled) .nx-expansion-panel__header-content,:host-context(.nx-expansion-panel--regular):not(.is-disabled):not(.is-disabled) .nx-expansion-panel__header-content:hover,:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)) .nx-expansion-panel__header-content,:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)):not(.is-disabled) .nx-expansion-panel__header-content:hover,:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__header-content,:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative):not(.is-disabled) .nx-expansion-panel__header-content:hover,:host-context(.nx-expansion-panel--extra-light) .nx-expansion-panel__header-content,:host-context(.nx-expansion-panel--extra-light):not(.is-disabled) .nx-expansion-panel__header-content:hover,:host-context(.nx-expansion-panel--extra-light.nx-expansion-panel--negative) .nx-expansion-panel__header-content,:host-context(.nx-expansion-panel--extra-light.nx-expansion-panel--negative):not(.is-disabled) .nx-expansion-panel__header-content:hover{color:buttonText;background-color:buttonFace}:host-context(.nx-expansion-panel--regular):not(.is-disabled) .nx-expansion-panel__header-content .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--regular):not(.is-disabled):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)) .nx-expansion-panel__header-content .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__header-content .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--extra-light) .nx-expansion-panel__header-content .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--extra-light):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--extra-light.nx-expansion-panel--negative) .nx-expansion-panel__header-content .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--extra-light.nx-expansion-panel--negative):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron{color:buttonText}:host.is-disabled.is-disabled .nx-expansion-panel__header-content{color:GrayText!important;background-color:buttonFace}:host.is-disabled.is-disabled .nx-expansion-panel__header-content .nx-expansion-panel__chevron{color:GrayText!important}}\n"], components: [{ type: i3$1.NxIconComponent, selector: "nx-icon", inputs: ["name", "outline", "fill", "size", "font"] }], animations: [nxAccordionAnimations.indicatorRotate], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxExpansionPanelHeaderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nx-expansion-panel-header', changeDetection: ChangeDetectionStrategy.OnPush, animations: [nxAccordionAnimations.indicatorRotate], host: {
                        '[class.nx-expanded]': 'isExpanded()',
                        class: 'nx-expansion-panel__header',
                        role: 'button',
                        '[attr.id]': 'panel._headerId',
                        '[attr.tabindex]': 'panel.disabled ? -1 : 0',
                        '[attr.aria-controls]': '_getPanelId()',
                        '[attr.aria-expanded]': 'isExpanded()',
                        '[attr.aria-disabled]': 'panel.disabled',
                        '[class.is-disabled]': 'panel.disabled',
                        '(keydown)': 'keydown($event)',
                        '(click)': 'toggle()',
                    }, template: "<div class=\"nx-expansion-panel__header-content\">\n    <ng-content select=\"nx-expansion-panel-title\"></ng-content>\n    <ng-content select=\"nx-expansion-panel-description\"></ng-content>\n    <nx-icon [@indicatorRotate]=\"getOpenState()\" class=\"nx-expansion-panel__chevron\" name=\"chevron-down\"> </nx-icon>\n</div>\n", styles: [":host:focus{outline:none}.nx-expansion-panel__header-content{width:100%;cursor:pointer;align-items:center;display:flex;justify-content:space-between;position:relative;outline:none;border:none;padding:var(--accordion-regular-header-padding);color:var(--accordion-regular-header-text-color);background:var(--accordion-regular-header-background-color)}@media (max-width: 703px){.nx-expansion-panel__header-content{padding:var(--accordion-regular-mobile-header-padding)}}:host-context(.nx-expansion-panel--regular):not(.is-disabled) .nx-expansion-panel__header-content:hover{color:var(--accordion-regular-header-hover-text-color)}:host-context(.nx-expansion-panel--regular):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron{color:var(--accordion-regular-hover-chevron-color)}::ng-deep .nx-expansion-panel__header-title{font-size:var(--accordion-regular-font-size);line-height:var(--accordion-regular-line-height);font-weight:var(--accordion-regular-font-weight);letter-spacing:var(--accordion-regular-letter-spacing);text-align:left;margin-right:32px}@media (max-width: 703px){::ng-deep .nx-expansion-panel__header-title{font-size:var(--accordion-regular-mobile-font-size);line-height:var(--accordion-regular-mobile-line-height);font-weight:var(--accordion-regular-mobile-font-weight);letter-spacing:var(--accordion-regular-mobile-letter-spacing);margin-right:16px}}:host-context([dir=rtl]) ::ng-deep .nx-expansion-panel__header-title{text-align:right;margin-right:0;margin-right:initial;margin-left:32px}@media (max-width: 703px){:host-context([dir=rtl]) ::ng-deep .nx-expansion-panel__header-title{margin-right:0;margin-right:initial;margin-left:16px}}:host .nx-expansion-panel__chevron{pointer-events:none;font-size:var(--accordion-chevron-size)}:host(:not(.is-disabled)) .nx-expansion-panel__chevron{color:var(--accordion-regular-chevron-color)}:host-context(.nx-expansion-panel--light) .nx-expansion-panel__header-content{padding:var(--accordion-light-header-padding);margin-top:0;background:transparent}@media (max-width: 703px){:host-context(.nx-expansion-panel--light) .nx-expansion-panel__header-content{padding:var(--accordion-light-mobile-header-padding)}}:host-context(.nx-expansion-panel--light) .nx-expansion-panel__chevron{color:var(--accordion-light-chevron-color)}:host-context(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__header-title{font-size:var(--accordion-light-font-size);line-height:var(--accordion-light-line-height);font-weight:var(--accordion-light-font-weight);letter-spacing:var(--accordion-light-letter-spacing)}@media (max-width: 703px){:host-context(.nx-expansion-panel--light) ::ng-deep .nx-expansion-panel__header-title{font-size:var(--accordion-light-mobile-font-size);line-height:var(--accordion-light-mobile-line-height);font-weight:var(--accordion-light-mobile-font-weight);letter-spacing:var(--accordion-light-mobile-letter-spacing)}}:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)) .nx-expansion-panel__header-content{color:var(--accordion-light-header-text-color)}:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)):not(.is-disabled) .nx-expansion-panel__header-content:hover{color:var(--accordion-light-header-hover-text-color)}:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron{color:var(--accordion-light-hover-chevron-color)}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__header-content{color:var(--negative)}:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__chevron{color:var(--negative)}:host-context(.nx-expansion-panel--extra-light) .nx-expansion-panel__header-content{padding:0;margin-top:0;background:transparent;justify-content:flex-start;width:-webkit-max-content;width:max-content;max-width:100%;color:var(--accordion-extra-light-header-text-color);border-radius:4px}:host-context(.nx-expansion-panel--extra-light) .nx-expansion-panel__chevron{color:var(--accordion-extra-light-chevron-color)}:host-context(.nx-expansion-panel--extra-light) ::ng-deep .nx-expansion-panel__header-title{font-size:var(--accordion-extra-light-font-size);line-height:var(--accordion-extra-light-line-height);font-weight:var(--accordion-extra-light-font-weight);letter-spacing:var(--accordion-extra-light-letter-spacing);margin-right:8px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}:host-context([dir=rtl] .nx-expansion-panel--extra-light) ::ng-deep .nx-expansion-panel__header-title{margin-left:8px;margin-right:0}:host-context(.nx-expansion-panel--extra-light.nx-expansion-panel--negative) .nx-expansion-panel__header-content{color:var(--negative)}:host-context(.nx-expansion-panel--extra-light.nx-expansion-panel--negative) .nx-expansion-panel__chevron{color:var(--negative)}:host-context(.nx-expansion-panel--extra-light.nx-expansion-panel--negative).is-disabled .nx-expansion-panel__header-content{color:var(--negative-dimmed)}:host-context(.nx-expansion-panel--extra-light.nx-expansion-panel--negative).is-disabled .nx-expansion-panel__chevron{color:var(--negative-dimmed)}:host.is-disabled.is-disabled .nx-expansion-panel__chevron,:host.is-disabled.is-disabled .nx-expansion-panel__header-content{cursor:not-allowed;color:var(--accordion-disabled-color)}:host.cdk-keyboard-focused .nx-expansion-panel__header-content{box-shadow:var(--focus-box-shadow);z-index:1}@media screen and (-ms-high-contrast: active),(forced-colors: active){:host.cdk-keyboard-focused .nx-expansion-panel__header-content{box-shadow:0 0 0 2px background,0 0 0 6px windowText;outline:4px solid CanvasText;outline-offset:2px}}@media screen and (-ms-high-contrast: active){:host{-ms-high-contrast-adjust:none}:host-context(.nx-expansion-panel--regular):not(.is-disabled) .nx-expansion-panel__header-content,:host-context(.nx-expansion-panel--regular):not(.is-disabled):not(.is-disabled) .nx-expansion-panel__header-content:hover,:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)) .nx-expansion-panel__header-content,:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)):not(.is-disabled) .nx-expansion-panel__header-content:hover,:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__header-content,:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative):not(.is-disabled) .nx-expansion-panel__header-content:hover,:host-context(.nx-expansion-panel--extra-light) .nx-expansion-panel__header-content,:host-context(.nx-expansion-panel--extra-light):not(.is-disabled) .nx-expansion-panel__header-content:hover,:host-context(.nx-expansion-panel--extra-light.nx-expansion-panel--negative) .nx-expansion-panel__header-content,:host-context(.nx-expansion-panel--extra-light.nx-expansion-panel--negative):not(.is-disabled) .nx-expansion-panel__header-content:hover{color:buttonText;background-color:buttonFace}:host-context(.nx-expansion-panel--regular):not(.is-disabled) .nx-expansion-panel__header-content .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--regular):not(.is-disabled):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)) .nx-expansion-panel__header-content .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--light:not(.nx-expansion-panel--negative)):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative) .nx-expansion-panel__header-content .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--light.nx-expansion-panel--negative):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--extra-light) .nx-expansion-panel__header-content .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--extra-light):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--extra-light.nx-expansion-panel--negative) .nx-expansion-panel__header-content .nx-expansion-panel__chevron,:host-context(.nx-expansion-panel--extra-light.nx-expansion-panel--negative):not(.is-disabled) .nx-expansion-panel__header-content:hover .nx-expansion-panel__chevron{color:buttonText}:host.is-disabled.is-disabled .nx-expansion-panel__header-content{color:GrayText!important;background-color:buttonFace}:host.is-disabled.is-disabled .nx-expansion-panel__header-content .nx-expansion-panel__chevron{color:GrayText!important}}\n"] }]
        }], ctorParameters: function () { return [{ type: NxExpansionPanelComponent, decorators: [{
                    type: Host
                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i2$1.FocusMonitor }]; } });
/**
 * This directive is to be used inside of the NxExpansionPanelHeader component.
 */
class NxExpansionPanelDescriptionDirective {
}
NxExpansionPanelDescriptionDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxExpansionPanelDescriptionDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
NxExpansionPanelDescriptionDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.1", type: NxExpansionPanelDescriptionDirective, selector: "nx-expansion-panel-description", host: { classAttribute: "nx-expansion-panel__header-description" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxExpansionPanelDescriptionDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'nx-expansion-panel-description',
                    host: {
                        class: 'nx-expansion-panel__header-description',
                    },
                }]
        }] });
/**
 * This directive is to be used inside of the NxExpansionPanelHeader component.
 */
class NxExpansionPanelTitleDirective {
}
NxExpansionPanelTitleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxExpansionPanelTitleDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
NxExpansionPanelTitleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "13.3.1", type: NxExpansionPanelTitleDirective, selector: "nx-expansion-panel-title", host: { classAttribute: "nx-expansion-panel__header-title" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxExpansionPanelTitleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'nx-expansion-panel-title',
                    host: {
                        class: 'nx-expansion-panel__header-title',
                    },
                }]
        }] });

class NxAccordionModule {
}
NxAccordionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NxAccordionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxAccordionModule, declarations: [NxAccordionDirective,
        NxExpansionPanelComponent,
        NxExpansionPanelHeaderComponent,
        NxExpansionPanelDescriptionDirective,
        NxExpansionPanelTitleDirective,
        NxExpansionPanelBodyDirective], imports: [CommonModule, PortalModule, NxIconModule], exports: [NxAccordionDirective,
        NxExpansionPanelComponent,
        NxExpansionPanelHeaderComponent,
        NxExpansionPanelDescriptionDirective,
        NxExpansionPanelTitleDirective,
        NxExpansionPanelBodyDirective] });
NxAccordionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxAccordionModule, providers: [], imports: [[CommonModule, PortalModule, NxIconModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxAccordionModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, PortalModule, NxIconModule],
                    exports: [
                        NxAccordionDirective,
                        NxExpansionPanelComponent,
                        NxExpansionPanelHeaderComponent,
                        NxExpansionPanelDescriptionDirective,
                        NxExpansionPanelTitleDirective,
                        NxExpansionPanelBodyDirective,
                    ],
                    declarations: [
                        NxAccordionDirective,
                        NxExpansionPanelComponent,
                        NxExpansionPanelHeaderComponent,
                        NxExpansionPanelDescriptionDirective,
                        NxExpansionPanelTitleDirective,
                        NxExpansionPanelBodyDirective,
                    ],
                    providers: [],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { NxAccordionDirective, NxAccordionModule, NxExpansionPanelBodyDirective, NxExpansionPanelComponent, NxExpansionPanelDescriptionDirective, NxExpansionPanelHeaderComponent, NxExpansionPanelTitleDirective };
//# sourceMappingURL=aposin-ng-aquila-accordion.mjs.map
