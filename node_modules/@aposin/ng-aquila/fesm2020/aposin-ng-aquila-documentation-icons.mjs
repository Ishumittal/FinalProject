import * as i0 from '@angular/core';
import { NgModule } from '@angular/core';
import * as i1 from '@aposin/ng-aquila/icon';
import { NxIconModule } from '@aposin/ng-aquila/icon';

const ICON_MAPPINGS = {
    bars: { alias: 'bars', font: 'far' },
    'bell-o': { alias: 'bell', font: 'far' },
    'bookmark-o': { alias: 'bookmark', font: 'far' },
    download: { alias: 'download', font: 'fas' },
    duplicate: { alias: 'copy', font: 'far' },
    facebook: { alias: 'facebook-square', font: 'fab' },
    file: { alias: 'file', font: 'far' },
    'file-text': { alias: 'file-alt', font: 'far' },
    'info-circle-o': { alias: 'info-circle', font: 'fas' },
    launch: { alias: 'external-link-alt', font: 'fas' },
    'lock-o': { alias: 'lock', font: 'fas' },
    mail: { alias: 'envelope', font: 'far' },
    'mail-o': { alias: 'envelope', font: 'fas' },
    pdf: { alias: 'file-pdf', font: 'far' },
    pen: { alias: 'pen', font: 'fas' },
    popout: { alias: 'expand-alt', font: 'fas' },
    refresh: { alias: 'redo', font: 'fas' },
    'phone-o': { alias: 'phone-alt', font: 'fas' },
    'product-car': { alias: 'car', font: 'fas' },
    'product-care-insurance': { alias: 'hand-holding-heart', font: 'fas' },
    'product-heart': { alias: 'heart', font: 'far' },
    'product-plane': { alias: 'plane', font: 'fas' },
    'product-search': { alias: 'search', font: 'fas' },
    'save-o': { alias: 'save', font: 'far' },
    search: { alias: 'search', font: 'fas' },
    setting: { alias: 'cog', font: 'fas' },
    'speech-bubble-o': { alias: 'comment', font: 'far' },
    twitter: { alias: 'twitter', font: 'fab' },
    'user-o': { alias: 'user', font: 'far' },
    // the users icon in font awesome is not quadratic as a workaround
    // we just reuse the single user here
    users: { alias: 'user', font: 'fas' },
    globe: { alias: 'globe', font: 'fas' },
    'grip-vertical': { alias: 'grip-vertical', font: 'fas' },
};

class NxDocumentationIconModule {
    constructor(_iconRegistry) {
        this._iconRegistry = _iconRegistry;
        this._iconRegistry.registerFont('far', 'far', 'fa-');
        this._iconRegistry.registerFont('fas', 'fas', 'fa-');
        this._iconRegistry.registerFont('fab', 'fab', 'fa-');
        this._iconRegistry.setDefaultFont('far');
        Object.keys(ICON_MAPPINGS).forEach(iconName => this._iconRegistry.addFontIcon(iconName, ICON_MAPPINGS[iconName].alias, ICON_MAPPINGS[iconName].font));
    }
}
NxDocumentationIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxDocumentationIconModule, deps: [{ token: i1.NxIconRegistry }], target: i0.ɵɵFactoryTarget.NgModule });
NxDocumentationIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxDocumentationIconModule, imports: [NxIconModule] });
NxDocumentationIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxDocumentationIconModule, providers: [], imports: [[NxIconModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.1", ngImport: i0, type: NxDocumentationIconModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [NxIconModule],
                    exports: [],
                    providers: [],
                }]
        }], ctorParameters: function () { return [{ type: i1.NxIconRegistry }]; } });

/**
 * Generated bundle index. Do not edit.
 */

export { ICON_MAPPINGS, NxDocumentationIconModule };
//# sourceMappingURL=aposin-ng-aquila-documentation-icons.mjs.map
