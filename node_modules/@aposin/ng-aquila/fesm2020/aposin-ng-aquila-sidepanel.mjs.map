{"version":3,"file":"aposin-ng-aquila-sidepanel.mjs","sources":["../../../projects/ng-aquila/src/sidepanel/sidepanel-animations.ts","../../../projects/ng-aquila/src/sidepanel/sidepanel-header.ts","../../../projects/ng-aquila/src/sidepanel/sidepanel.ts","../../../projects/ng-aquila/src/sidepanel/sidepanel-close-button.ts","../../../projects/ng-aquila/src/sidepanel/sidepanel-content.ts","../../../projects/ng-aquila/src/sidepanel/sidepanel.module.ts","../../../projects/ng-aquila/src/sidepanel/aposin-ng-aquila-sidepanel.ts"],"sourcesContent":["import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\n\nexport const nxSidepanelAnimations: {\n    readonly sidepanelExpansion: AnimationTriggerMetadata;\n} = {\n    sidepanelExpansion: trigger('sidepanelExpansion', [\n        state(\n            'closed',\n            style({\n                transform: 'translateX({{ transformX }})',\n                boxShadow: 'none',\n                visibility: 'hidden',\n            }),\n            { params: { transformX: '100%' } },\n        ),\n        state(\n            'open',\n            style({\n                transform: 'none',\n                boxShadow: '*',\n                visibility: 'visible',\n            }),\n        ),\n        transition('closed => open', animate('.4s cubic-bezier(0, 0, 0.1, 1)')),\n        transition('open-instant => closed, open => closed', animate('.2s cubic-bezier(0.8, 0, 1, 1)')),\n    ]),\n};\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n    selector: 'nx-sidepanel-header',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./sidepanel-header.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxSidepanelHeaderComponent {}\n","import { Direction, Directionality } from '@angular/cdk/bidi';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { nxSidepanelAnimations } from './sidepanel-animations';\nimport { NxSidepanelHeaderComponent } from './sidepanel-header';\n\n/** Type for the available position values. */\nexport type PositionType = 'floating' | 'static';\n\n/** Type for the appearance of the sidepanel. */\nexport type Appearance = 'light' | 'dark';\n\n@Component({\n    selector: 'nx-sidepanel',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./sidepanel.scss'],\n    animations: [nxSidepanelAnimations.sidepanelExpansion],\n    host: {\n        '[class.is-closed]': '!opened',\n        '[class.is-static]': 'position === \"static\"',\n        '[class.is-floating]': 'position === \"floating\"',\n        '[class.light]': 'appearance === \"light\"',\n        role: 'complementary',\n        // if no wrapper is used, the sidepanel currently is not animated when opening closing,\n        // since a controlled environment is needed so that the animation works as expected.\n        '[@sidepanelExpansion]': '{ value: _wrapper ? _getOpenState() : \"\", params: { transformX: dir === \"rtl\" ? \"-100%\" : \"100%\" } }',\n        '(@sidepanelExpansion.done)': 'onAnimationDone($event)',\n        '[class.without-wrapper]': '!this._wrapper',\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxSidepanelComponent {\n    /** Whether the sidepanel should be opened and visible. */\n    @Input()\n    set opened(value: BooleanInput) {\n        this._opened = coerceBooleanProperty(value);\n        this._setOpenState(this._opened);\n        this._wrapper?._update();\n        this._cdr.markForCheck();\n    }\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** Sets the position of the sidepanel. */\n    @Input()\n    set position(value: PositionType) {\n        this._position = value;\n        this._cdr.markForCheck();\n        this._wrapper?._update();\n    }\n    get position(): PositionType {\n        return this._position;\n    }\n\n    /** Sets the appearance of the sidepanel. Default: dark. */\n    @Input()\n    set appearance(value: Appearance) {\n        this._appearance = value;\n        this._cdr.markForCheck();\n    }\n    get appearance(): Appearance {\n        return this._appearance;\n    }\n\n    triggerElem?: HTMLElement | null;\n\n    constructor(\n        private _cdr: ChangeDetectorRef,\n        protected _elementRef: ElementRef,\n        @Optional() private _dir: Directionality | null,\n        @Optional() @Inject(forwardRef(() => NxSidepanelOuterContainerComponent)) public _wrapper: NxSidepanelOuterContainerComponent | null,\n    ) {\n        if (this._wrapper == null) {\n            console.warn(`NxSidepanelComponent needs a wrapping NxSidepanelOuterContainerComponent to work as expected.`);\n        }\n    }\n\n    private _opened = true;\n\n    @ContentChild(NxSidepanelHeaderComponent, { read: ElementRef, static: false }) _header!: ElementRef;\n\n    /**\n     * An event emitted when the opened value has changed.\n     *\n     * Emits the boolean value.\n     */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    private _position: PositionType = 'floating';\n\n    private _appearance: Appearance = 'dark';\n\n    private _openState = 'open-instant';\n\n    /** Toggles the opened state of the sidepanel. */\n    toggle() {\n        this.opened = !this.opened;\n        this.openedChange.emit(this._opened);\n    }\n\n    /** Sets the opened state of the sidepanel to true. */\n    open() {\n        if (!this.opened) {\n            this.toggle();\n        }\n    }\n\n    /** Sets the opened state of the sidepanel to false. */\n    close() {\n        if (this.opened) {\n            this.toggle();\n        }\n    }\n\n    _getWidth(): number {\n        return this._elementRef.nativeElement.offsetWidth;\n    }\n\n    _getOpenState() {\n        return this._openState;\n    }\n\n    _setOpenState(opened: boolean) {\n        if (this._openState === 'open-instant' && opened) {\n            return;\n        }\n        this._openState = opened ? 'open' : 'closed';\n        if (opened) {\n            this.triggerElem = document.activeElement as HTMLElement;\n        }\n    }\n\n    onAnimationDone(event: AnimationEvent) {\n        this.openedChange.emit(this._opened);\n        this.focusTrigger(this._opened);\n    }\n\n    focusTrigger(opened: boolean) {\n        if (!opened && this.triggerElem) {\n            this.triggerElem.focus();\n            this.triggerElem = null;\n        }\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n}\n\n@Component({\n    selector: 'nx-sidepanel-outer-container',\n    template: `\n        <div\n            class=\"nx-sidepanel-outer-container__content\"\n            [class.with-margin]=\"_getOpenState() === 'open'\"\n            [class.without-margin]=\"_getOpenState() === 'closed'\"\n            [style.margin-right.px]=\"dir === 'ltr' ? _getSidepanelWidth() : 0\"\n            [style.margin-left.px]=\"dir === 'rtl' ? _getSidepanelWidth() : 0\"\n        >\n            <ng-content></ng-content>\n        </div>\n        <ng-content select=\"nx-sidepanel\"></ng-content>\n    `,\n    styleUrls: ['./sidepanel-outer-container.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxSidepanelOuterContainerComponent implements OnDestroy {\n    @ContentChild(NxSidepanelComponent) _sidepanel!: NxSidepanelComponent;\n\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(@Optional() private _dir: Directionality | null, private _cdr: ChangeDetectorRef) {\n        this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._cdr.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n\n    _update() {\n        this._cdr.markForCheck();\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    _getOpenState() {\n        if (this._sidepanel?.position === 'static') {\n            return this._sidepanel._getOpenState();\n        }\n        return 'closed';\n    }\n\n    _getSidepanelWidth() {\n        if (this._sidepanel?.position === 'static' && this._sidepanel?.opened) {\n            return this._sidepanel._getWidth();\n        }\n        return 0;\n    }\n}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { ChangeDetectionStrategy, Component, ElementRef, OnDestroy } from '@angular/core';\n\nimport { NxSidepanelComponent } from './sidepanel';\n\n@Component({\n    selector: 'button[nxSidepanelCloseButton]',\n    template: `<nx-icon name=\"close\" size=\"s\" aria-hidden=\"true\"></nx-icon>`,\n    styleUrls: ['./sidepanel-close-button.scss'],\n    host: {\n        '(click)': '_toggle()',\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxSidepanelCloseButtonComponent implements OnDestroy {\n    _toggle() {\n        this._sidepanel.toggle();\n    }\n\n    constructor(private _sidepanel: NxSidepanelComponent, private _focusMonitor: FocusMonitor, private _elementRef: ElementRef) {\n        this._focusMonitor.monitor(this._elementRef);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n    selector: 'nx-sidepanel-content',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./sidepanel-content.scss'],\n    host: {\n        tabindex: '0',\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NxSidepanelContentComponent {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxButtonModule } from '@aposin/ng-aquila/button';\nimport { NxIconModule } from '@aposin/ng-aquila/icon';\n\nimport { NxSidepanelComponent, NxSidepanelOuterContainerComponent } from './sidepanel';\nimport { NxSidepanelCloseButtonComponent } from './sidepanel-close-button';\nimport { NxSidepanelContentComponent } from './sidepanel-content';\nimport { NxSidepanelHeaderComponent } from './sidepanel-header';\n\n@NgModule({\n    imports: [CommonModule, NxIconModule, NxButtonModule],\n    declarations: [\n        NxSidepanelComponent,\n        NxSidepanelHeaderComponent,\n        NxSidepanelContentComponent,\n        NxSidepanelCloseButtonComponent,\n        NxSidepanelOuterContainerComponent,\n    ],\n    exports: [\n        NxSidepanelComponent,\n        NxSidepanelHeaderComponent,\n        NxSidepanelContentComponent,\n        NxSidepanelCloseButtonComponent,\n        NxSidepanelOuterContainerComponent,\n    ],\n})\nexport class NxSidepanelModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.NxSidepanelComponent"],"mappings":"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"}