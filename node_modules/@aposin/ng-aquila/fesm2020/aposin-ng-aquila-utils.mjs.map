{"version":3,"file":"aposin-ng-aquila-utils.mjs","sources":["../../../projects/ng-aquila/src/utils/utils.ts","../../../projects/ng-aquila/src/utils/viewport-service.ts","../../../projects/ng-aquila/src/utils/aposin-ng-aquila-utils.ts"],"sourcesContent":["import { ElementRef, Injectable, Renderer2 } from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\n\nexport function isString(value: any) {\n    return typeof value === 'string';\n}\n\nexport function pad(str: string, length = 2, padCharacter = '0'): string {\n    if (!isString(str) || str.length >= length) {\n        return str;\n    }\n    while (str.length < length) {\n        str = padCharacter + str;\n    }\n    return str;\n}\n\n// DATE -> YYYY-MM-DD\nexport function formatDate(date: Date) {\n    const dateOfBirth = [String(date.getFullYear()), pad(String(date.getMonth() + 1)), pad(String(date.getDate()))].join('-');\n\n    return dateOfBirth;\n}\nexport function formatDateHuman(date: Date) {\n    const dateOfBirth = [pad(String(date.getDate())), pad(String(date.getMonth() + 1)), String(date.getFullYear())].join('-');\n\n    return dateOfBirth;\n}\n/*\n  Purpose of this function is to allow a list of short keywords\n  expand to longer bem class names with will then be applied to the classname value.\n\n  This function will map a list of keys to values in a MAPPING list.\n  Whatever value is found will replace the keyword.\n  Every keyword not found will just transfered wiithmout modifying.\n*/\n\nexport function mapClassNames(value: string, DEFAULTS: string[] = [], MAPPING = {}) {\n    let sanitizedList: string[] = [...DEFAULTS];\n\n    if (typeof value === 'string') {\n        const mappedClasses = getClassNameList(value, MAPPING);\n        sanitizedList = [...sanitizedList, ...mappedClasses];\n    }\n\n    return sanitizedList.join(' ').trim();\n}\n\nexport function getClassNameList(value: string, MAPPING: { [k: string]: string } = {}) {\n    let mappedClasses: string[] = [];\n\n    if (typeof value === 'string') {\n        const classNames = value.split(' ');\n        const keys = Object.keys(MAPPING);\n\n        mappedClasses = classNames.map(className => {\n            if (keys.includes(className)) {\n                return MAPPING[className];\n            }\n            return className;\n        });\n    }\n\n    return mappedClasses;\n}\n\nexport function appendClasses(renderer: Renderer2, element: ElementRef, classes: string) {\n    if (renderer && element && classes) {\n        classes.split(' ').forEach(item => {\n            renderer.addClass(element.nativeElement, item);\n        });\n    }\n}\n\nexport function removeClasses(renderer: Renderer2, element: ElementRef, classes: string) {\n    if (renderer && element && classes) {\n        classes.split(' ').forEach(item => {\n            renderer.removeClass(element.nativeElement, item);\n        });\n    }\n}\n\n// YYYY-MM-DD -> DATE\nexport function parseDate(dateString: string | number | Date) {\n    return new Date(dateString);\n}\n\n// Manually compose a font shorthand defintion as it's not\n// guaranteed to be given by the computed style object.\nexport function getFontShorthand(style: CSSStyleDeclaration) {\n    const { font, fontStyle, fontVariant, fontWeight, fontSize, lineHeight, fontFamily } = style;\n\n    if (font.length > 0) {\n        return font;\n    }\n\n    return `${fontStyle} ${fontVariant} ${fontWeight} ${fontSize}/${lineHeight} ${fontFamily}`;\n}\n\nexport function numberOfDecimals(number: string | number) {\n    const parsed = Number(number);\n    if (Number.isNaN(parsed) || Number.isInteger(parsed)) {\n        return 0;\n    }\n    const match = parsed.toString().match(/(?:\\.(\\d+))?(?:[Ee]([+-]?\\d+))?$/);\n    if (!match || !match[1]) {\n        return 0;\n    }\n    return match[1].length;\n}\n\nexport function clamp(value: number, min = 0, max = 1) {\n    return Math.max(min, Math.min(max, value));\n}\n\nexport function randomString() {\n    return Math.random().toString(36);\n}\n\n/** Provider that defines when form controls have an error. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control?.invalid && (control.touched || form?.submitted));\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { asyncScheduler, fromEvent, Observable, Subject } from 'rxjs';\nimport { map, startWith, takeUntil, throttleTime } from 'rxjs/operators';\n\n/** Available breakpoints to subscribe to. */\nexport enum NxBreakpoints {\n    /** Min size for BREAKPOINT_MOBILE */\n    BREAKPOINT_XSMALL = 0,\n    BREAKPOINT_SMALL = 320,\n    /** Min size for BREAKPOINT_TABLET */\n    BREAKPOINT_MEDIUM = 704,\n    /** Min size for BREAKPOINT_DESKTOP */\n    BREAKPOINT_LARGE = 992,\n    BREAKPOINT_XLARGE = 1280,\n    BREAKPOINT_2XLARGE = 1472,\n    BREAKPOINT_3XLARGE = 1760,\n}\n\nconst DEFAULT_THROTTLE_TIME = 200;\n\n/** Service subscribing to window resize events and providing breakpoint matching functions. */\n@Injectable({ providedIn: 'root' })\nexport class NxViewportService implements OnDestroy {\n    private _destroyed: Subject<void> = new Subject();\n    initialViewportWidth = 0;\n    viewportChange$: Observable<number>;\n\n    constructor() {\n        this.viewportChange$ = fromEvent(window, 'resize').pipe(\n            map(() => window.innerWidth),\n            takeUntil(this._destroyed),\n        );\n    }\n\n    /** Returns whether the current viewport width is greater than or equal (>=) to minSize. */\n    min(minSize: NxBreakpoints, throttleTimeMs = DEFAULT_THROTTLE_TIME): Observable<boolean> {\n        return this.viewportChange$.pipe(\n            startWith(window.innerWidth),\n            throttleTime(throttleTimeMs, asyncScheduler, { trailing: true }),\n            map(windowInnerWidth => windowInnerWidth >= minSize),\n        );\n    }\n\n    /** Returns whether the current viewport width is lower (<) than maxSize. */\n    max(maxSize: NxBreakpoints, throttleTimeMs = DEFAULT_THROTTLE_TIME): Observable<boolean> {\n        return this.viewportChange$.pipe(\n            startWith(window.innerWidth),\n            throttleTime(throttleTimeMs, asyncScheduler, { trailing: true }),\n            map(windowInnerWidth => windowInnerWidth < maxSize),\n        );\n    }\n\n    /** Returns whether the current viewport width is greater than or equal (>=) to minSize and lower (<) than maxSize. */\n    between(minSize: NxBreakpoints, maxSize: NxBreakpoints, throttleTimeMs = DEFAULT_THROTTLE_TIME): Observable<boolean> {\n        return this.viewportChange$.pipe(\n            startWith(window.innerWidth),\n            throttleTime(throttleTimeMs, asyncScheduler, { trailing: true }),\n            map(windowInnerWidth => windowInnerWidth >= minSize && windowInnerWidth < maxSize),\n        );\n    }\n\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}