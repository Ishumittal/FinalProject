{"version":3,"file":"aposin-ng-aquila-base.mjs","sources":["../../../projects/ng-aquila/src/base/error/error.component.ts","../../../projects/ng-aquila/src/base/error/error.component.html","../../../projects/ng-aquila/src/base/error/error.module.ts","../../../projects/ng-aquila/src/base/label/label.component.ts","../../../projects/ng-aquila/src/base/label/label.component.html","../../../projects/ng-aquila/src/base/label/label.module.ts","../../../projects/ng-aquila/src/base/aposin-ng-aquila-base.ts"],"sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, Injectable, InjectionToken, Input, OnDestroy, Optional } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/* Types of error notification styles */\nexport type ErrorStyleType = 'message' | 'text';\n\nlet nextId = 0;\n\n/**\n * Represents the default options for the error notification that can be configured\n * using the `ERROR_DEFAULT_OPTIONS` injection token.\n */\n@Injectable()\nexport class ErrorDefaultOptions {\n    /**\n     * Stream that emits whenever the default options are changed. Use this to notify\n     * components if the default options have changed after initialization.\n     */\n    changes?: Subject<void>;\n\n    /** Defines the style type of the error notification. */\n    appearance?: ErrorStyleType;\n}\n\nexport const ERROR_DEFAULT_OPTIONS = new InjectionToken<ErrorDefaultOptions>('ERROR_DEFAULT_OPTIONS');\n\n@Component({\n    selector: 'nx-error',\n    templateUrl: './error.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['./error.component.scss'],\n    host: {\n        '[attr.role]': '\"alert\"',\n        '[attr.id]': 'id',\n        '[class.nx-error--message]': 'appearance == \"message\"',\n    },\n})\nexport class NxErrorComponent implements OnDestroy {\n    private _showIcon = true;\n    private _appearance!: ErrorStyleType;\n    private _id = `nx-error-${nextId++}`;\n\n    /** Whether an icon should be displayed. Only has an effect for type 'text' */\n    @Input()\n    set showIcon(value: BooleanInput) {\n        this._showIcon = coerceBooleanProperty(value);\n        this._cdr.markForCheck();\n    }\n    get showIcon(): boolean {\n        return this._showIcon;\n    }\n\n    /**\n     * Id of the nx-error.\n     *\n     * If not set, the selectable card gets an incremented value by default.\n     */\n    @Input()\n    set id(value: string) {\n        if (value && value !== this._id) {\n            this._id = value;\n            this._cdr.markForCheck();\n        }\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n    /**\n     * Whether the error should have message or text styling.\n     *\n     * Default is 'message'.\n     */\n    @Input()\n    set appearance(value: ErrorStyleType) {\n        if (value !== this.appearance) {\n            this._appearance = value;\n            this._cdr.markForCheck();\n        }\n    }\n    get appearance(): ErrorStyleType {\n        return this._appearance || this._defaultOptions?.appearance || 'message';\n    }\n\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(private _cdr: ChangeDetectorRef, @Optional() @Inject(ERROR_DEFAULT_OPTIONS) private _defaultOptions: ErrorDefaultOptions | null) {\n        this._defaultOptions?.changes?.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._cdr.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n}\n","<!-- b2b (expert) error notification -->\n<ng-container *ngIf=\"appearance === 'text'\">\n    <nx-icon *ngIf=\"showIcon\" class=\"nx-error__icon\" [name]=\"'exclamation-triangle'\"> </nx-icon>\n    <div class=\"nx-error__content-wrapper\">\n        <div class=\"nx-error__content\">\n            <ng-container [ngTemplateOutlet]=\"errorContent\"></ng-container>\n        </div>\n    </div>\n</ng-container>\n\n<!-- b2c error notification -->\n<nx-message *ngIf=\"appearance === 'message'\" nxContext=\"error\">\n    <ng-container [ngTemplateOutlet]=\"errorContent\"></ng-container>\n</nx-message>\n\n<ng-template #errorContent>\n    <ng-content></ng-content>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxIconModule } from '@aposin/ng-aquila/icon';\nimport { NxMessageModule } from '@aposin/ng-aquila/message';\n\nimport { NxErrorComponent } from './error.component';\n\n@NgModule({\n    imports: [CommonModule, NxIconModule, NxMessageModule],\n    declarations: [NxErrorComponent],\n    exports: [NxErrorComponent],\n})\nexport class NxErrorModule {}\n","import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, InjectionToken, Input, Optional } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nlet nextId = 0;\n\nexport interface LabelDefaultOptions {\n    /** Sets the default appearance. (optional) */\n    size?: LABEL_SIZE_TYPE;\n}\n\n/** Options for sizing of the label. */\nexport type LABEL_SIZE_TYPE = 'small' | 'large';\nconst DEFAULT_SIZE = 'large';\n\nexport const LABEL_DEFAULT_OPTIONS = new InjectionToken<LabelDefaultOptions>('LABEL_DEFAULT_OPTIONS');\n@Component({\n    selector: 'nx-label',\n    templateUrl: './label.component.html',\n    styleUrls: ['label.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.disabled]': 'disabled',\n        '[class.nx-label--negative]': 'negative',\n        '[class.nx-label--large]': 'size === \"large\"',\n        '[class.nx-label--small]': 'size === \"small\"',\n    },\n})\nexport class NxLabelComponent {\n    readonly _stateChanges = new Subject<void>();\n    private _disabled = false;\n    private _negative = false;\n    private _size: LABEL_SIZE_TYPE | undefined;\n    private _for: string | null = null;\n    private _id = `nx-label-${nextId++}`;\n\n    /** Sets the label to disabled */\n    @Input()\n    set disabled(value: BooleanInput) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next();\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    /** Sets the label to disabled */\n    @Input()\n    set negative(value: BooleanInput) {\n        this._negative = coerceBooleanProperty(value);\n        this._stateChanges.next();\n    }\n\n    get negative(): boolean {\n        return this._negative;\n    }\n\n    /** Sets the Id of the label */\n    @Input()\n    set id(value: string) {\n        this._id = value;\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n    /**\n     * **Expert option**\n     * Sets the appearance of the label */\n    @Input()\n    set size(value: LABEL_SIZE_TYPE) {\n        this._size = value;\n        this._stateChanges.next();\n    }\n\n    get size(): LABEL_SIZE_TYPE {\n        return this._size || this._defaultOptions?.size || DEFAULT_SIZE;\n    }\n\n    /**\n     * Sets the html `for` attribute on the label.\n     */\n    @Input()\n    set for(value: string | null) {\n        this._for = value;\n        this._cdr.markForCheck();\n        this._stateChanges.next();\n    }\n    get for() {\n        return this._for;\n    }\n\n    constructor(@Optional() @Inject(LABEL_DEFAULT_OPTIONS) private _defaultOptions: LabelDefaultOptions | null, private _cdr: ChangeDetectorRef) {}\n}\n","<label class=\"nx-label__content\" [for]=\"for\" [id]=\"id\">\n    <ng-content></ng-content>\n</label>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NxLabelComponent } from './label.component';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [NxLabelComponent],\n    exports: [NxLabelComponent],\n})\nexport class NxLabelModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["nextId"],"mappings":"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"}