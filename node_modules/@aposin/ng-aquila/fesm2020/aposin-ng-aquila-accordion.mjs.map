{"version":3,"file":"aposin-ng-aquila-accordion.mjs","sources":["../../../projects/ng-aquila/src/accordion/accordion.ts","../../../projects/ng-aquila/src/accordion/accordion-animations.ts","../../../projects/ng-aquila/src/accordion/expansion-panel-body.ts","../../../projects/ng-aquila/src/accordion/expansion-panel.ts","../../../projects/ng-aquila/src/accordion/expansion-panel.html","../../../projects/ng-aquila/src/accordion/expansion-panel-header.ts","../../../projects/ng-aquila/src/accordion/expansion-panel-header.html","../../../projects/ng-aquila/src/accordion/accordion.module.ts","../../../projects/ng-aquila/src/accordion/aposin-ng-aquila-accordion.ts"],"sourcesContent":["import { CdkAccordion } from '@angular/cdk/accordion';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, Input } from '@angular/core';\n\nimport { AccordionStyle } from './expansion-panel';\n\nconst DEFAULT_TYPE: AccordionStyle = 'regular';\n\n@Directive({\n    selector: 'nx-accordion',\n    host: {\n        '[class.nx-accordion]': 'true',\n        role: 'presentation',\n    },\n})\nexport class NxAccordionDirective extends CdkAccordion {\n    private _style: AccordionStyle = 'regular';\n\n    /**\n     * Value for the styling that should be chosen.\n     * Default value: 'regular'\n     */\n    @Input('nxStyle')\n    set style(value: AccordionStyle) {\n        value = value ? value : DEFAULT_TYPE;\n\n        const [newValue] = value.match(/regular|light|extra-light/) || [DEFAULT_TYPE];\n        this._style = newValue as AccordionStyle;\n    }\n    get style(): AccordionStyle {\n        return this._style;\n    }\n\n    private _negative: boolean | undefined;\n\n    /** Whether the negative set of styles should be used. */\n    @Input()\n    set negative(value: BooleanInput) {\n        this._negative = coerceBooleanProperty(value);\n    }\n    get negative(): boolean {\n        return !!this._negative;\n    }\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\n\nexport const nxAccordionAnimations: {\n    readonly bodyExpansion: AnimationTriggerMetadata;\n    readonly indicatorRotate: AnimationTriggerMetadata;\n} = {\n    bodyExpansion: trigger('bodyExpansion', [\n        state('closed', style({ height: '0px', visibility: 'hidden' })),\n        state('open', style({ height: '*', visibility: 'visible' })),\n        transition('open <=> closed', animate('.5s cubic-bezier(0.86, 0, 0.07, 1)')),\n    ]),\n    indicatorRotate: trigger('indicatorRotate', [\n        state('closed', style({ transform: 'rotate(0deg)' })),\n        state('open', style({ transform: 'rotate(180deg)' })),\n        transition('open <=> closed', animate('.3s ease')),\n    ]),\n};\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[nxExpansionPanelBody]' })\nexport class NxExpansionPanelBodyDirective {\n    constructor(public _template: TemplateRef<any>) {}\n}\n","import { CdkAccordionItem } from '@angular/cdk/accordion';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    SimpleChanges,\n    SkipSelf,\n    ViewContainerRef,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, startWith, take } from 'rxjs/operators';\n\nimport { NxAccordionDirective } from './accordion';\nimport { nxAccordionAnimations } from './accordion-animations';\nimport { NxExpansionPanelBodyDirective } from './expansion-panel-body';\n\nlet nextId = 0;\n\n/** The styling of the accordion. */\nexport type AccordionStyle = 'regular' | 'light' | 'extra-light';\nconst DEFAULT_TYPE = 'regular';\n\n@Component({\n    selector: 'nx-expansion-panel',\n    exportAs: 'NxExpansionPanelComponent',\n    templateUrl: 'expansion-panel.html',\n    styleUrls: ['expansion-panel.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [nxAccordionAnimations.bodyExpansion],\n    host: {\n        '[class.nx-expanded]': 'expanded',\n        '[class.nx-expansion-panel--light]': '_accordionStyle === \"light\"',\n        '[class.nx-expansion-panel--regular]': '_accordionStyle === \"regular\"',\n        '[class.nx-expansion-panel--extra-light]': '_accordionStyle === \"extra-light\"',\n        '[class.nx-expansion-panel--negative]': 'negative',\n        '[class.is-disabled]': 'disabled',\n    },\n    providers: [\n        // Provide NxAccordionDirective as undefined to prevent nested expansion panels from registering\n        // to the same accordion.\n        { provide: NxAccordionDirective, useValue: undefined },\n    ],\n})\nexport class NxExpansionPanelComponent extends CdkAccordionItem implements AfterContentInit, OnChanges, OnDestroy {\n    /** Whether the negative set of styles should be used. */\n    @Input()\n    set negative(value: BooleanInput) {\n        this._negative = coerceBooleanProperty(value);\n    }\n    get negative(): boolean {\n        return this._negative as boolean;\n    }\n\n    private _negative: boolean | null = null;\n    _accordionStyle: AccordionStyle = DEFAULT_TYPE;\n\n    /**\n     * Value for the styling that should be chosen.\n     * Default value: 'regular'.\n     */\n    @Input('nxStyle')\n    set style(value: AccordionStyle) {\n        value = value ? value : DEFAULT_TYPE;\n\n        const [newValue] = value.match(/regular|light|extra-light/) || [DEFAULT_TYPE];\n        this._style = newValue as AccordionStyle;\n        this._accordionStyle = newValue as AccordionStyle;\n    }\n\n    get style(): AccordionStyle {\n        return this._style as AccordionStyle;\n    }\n\n    private _style: AccordionStyle | null = null;\n\n    /** @docs-private */\n    @ContentChild(NxExpansionPanelBodyDirective) lazyContent: any;\n\n    private _portal!: TemplatePortal;\n\n    /** @docs-private */\n    get portal() {\n        return this._portal;\n    }\n\n    _headerId = `nx-expansion-panel-header-${nextId++}`;\n\n    /** Stream that emits for changes in `@Input` properties. */\n    readonly _inputChanges = new Subject<SimpleChanges>();\n\n    constructor(\n        /** @docs-private */ @Optional() @SkipSelf() public accordion: NxAccordionDirective, // not typed as nullable: super class does not support `null`\n        _cdr: ChangeDetectorRef,\n        _expansionDispatcher: UniqueSelectionDispatcher,\n        private _viewContainerRef: ViewContainerRef,\n    ) {\n        super(accordion!, _cdr, _expansionDispatcher);\n    }\n\n    ngAfterContentInit() {\n        if (this.lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened\n                .pipe(\n                    startWith(null),\n                    filter(() => this.expanded && !this._portal),\n                    take(1),\n                )\n                .subscribe(() => {\n                    this._portal = new TemplatePortal(this.lazyContent._template, this._viewContainerRef);\n                });\n        }\n\n        // Inherit appearance given by the accordion (if any).\n        if (this.accordion) {\n            if (this.style === null && this.accordion.style !== null) {\n                this.style = this.accordion.style;\n            }\n\n            if (this.negative === null && this.accordion.negative !== null) {\n                this.negative = this.accordion.negative;\n            }\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this._inputChanges.next(changes);\n    }\n\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._inputChanges.complete();\n    }\n\n    /** @docs-private */\n    getOpenState() {\n        return this.expanded ? 'open' : 'closed';\n    }\n}\n","<ng-content select=\"nx-expansion-panel-header\"></ng-content>\n\n<div class=\"nx-expansion-panel__content\" role=\"region\" [@bodyExpansion]=\"getOpenState()\" [attr.aria-labelledby]=\"_headerId\" [id]=\"id\">\n    <div class=\"nx-expansion-panel__body\">\n        <ng-content></ng-content>\n        <ng-template [cdkPortalOutlet]=\"portal\"></ng-template>\n    </div>\n</div>\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, ElementRef, Host, OnDestroy } from '@angular/core';\nimport { merge, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { nxAccordionAnimations } from './accordion-animations';\nimport { NxExpansionPanelComponent } from './expansion-panel';\n\n@Component({\n    selector: 'nx-expansion-panel-header',\n    templateUrl: 'expansion-panel-header.html',\n    styleUrls: ['expansion-panel-header.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [nxAccordionAnimations.indicatorRotate],\n    host: {\n        '[class.nx-expanded]': 'isExpanded()',\n        class: 'nx-expansion-panel__header',\n        role: 'button',\n        '[attr.id]': 'panel._headerId',\n        '[attr.tabindex]': 'panel.disabled ? -1 : 0',\n        '[attr.aria-controls]': '_getPanelId()',\n        '[attr.aria-expanded]': 'isExpanded()',\n        '[attr.aria-disabled]': 'panel.disabled',\n        '[class.is-disabled]': 'panel.disabled',\n        '(keydown)': 'keydown($event)',\n        '(click)': 'toggle()',\n    },\n})\nexport class NxExpansionPanelHeaderComponent implements OnDestroy {\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        /** @docs-private */ @Host() public panel: NxExpansionPanelComponent,\n        private _cdr: ChangeDetectorRef,\n        private _elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n    ) {\n        merge(panel.opened, panel.closed, panel._inputChanges.pipe(filter(changes => !!(changes.hideToggle || changes.disabled))))\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._cdr.markForCheck());\n\n        this._focusMonitor.monitor(this._elementRef);\n    }\n\n    ngOnDestroy(): void {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n\n    /** @docs-private */\n    isExpanded(): boolean {\n        return this.panel.expanded;\n    }\n\n    /** @docs-private */\n    getOpenState(): string {\n        return this.panel.getOpenState();\n    }\n\n    _getPanelId(): string {\n        return this.panel.id;\n    }\n\n    /**\n     * Toggle the expansion panel.\n     */\n    toggle() {\n        this.panel.toggle();\n    }\n\n    /** @docs-private */\n    keydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case SPACE:\n            case ENTER:\n                event.preventDefault();\n                this.toggle();\n                break;\n            default:\n        }\n    }\n}\n\n/**\n * This directive is to be used inside of the NxExpansionPanelHeader component.\n */\n@Directive({\n    selector: 'nx-expansion-panel-description',\n    host: {\n        class: 'nx-expansion-panel__header-description',\n    },\n})\nexport class NxExpansionPanelDescriptionDirective {}\n\n/**\n * This directive is to be used inside of the NxExpansionPanelHeader component.\n */\n@Directive({\n    selector: 'nx-expansion-panel-title',\n    host: {\n        class: 'nx-expansion-panel__header-title',\n    },\n})\nexport class NxExpansionPanelTitleDirective {}\n","<div class=\"nx-expansion-panel__header-content\">\n    <ng-content select=\"nx-expansion-panel-title\"></ng-content>\n    <ng-content select=\"nx-expansion-panel-description\"></ng-content>\n    <nx-icon [@indicatorRotate]=\"getOpenState()\" class=\"nx-expansion-panel__chevron\" name=\"chevron-down\"> </nx-icon>\n</div>\n","import { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NxIconModule } from '@aposin/ng-aquila/icon';\n\nimport { NxAccordionDirective } from './accordion';\nimport { NxExpansionPanelComponent } from './expansion-panel';\nimport { NxExpansionPanelBodyDirective } from './expansion-panel-body';\nimport { NxExpansionPanelDescriptionDirective, NxExpansionPanelHeaderComponent, NxExpansionPanelTitleDirective } from './expansion-panel-header';\n\n@NgModule({\n    imports: [CommonModule, PortalModule, NxIconModule],\n    exports: [\n        NxAccordionDirective,\n        NxExpansionPanelComponent,\n        NxExpansionPanelHeaderComponent,\n        NxExpansionPanelDescriptionDirective,\n        NxExpansionPanelTitleDirective,\n        NxExpansionPanelBodyDirective,\n    ],\n    declarations: [\n        NxAccordionDirective,\n        NxExpansionPanelComponent,\n        NxExpansionPanelHeaderComponent,\n        NxExpansionPanelDescriptionDirective,\n        NxExpansionPanelTitleDirective,\n        NxExpansionPanelBodyDirective,\n    ],\n    providers: [],\n})\nexport class NxAccordionModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["DEFAULT_TYPE","i1.NxAccordionDirective","i1.NxExpansionPanelComponent","i2","i3"],"mappings":"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"}